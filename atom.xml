<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MonoShow</title>
  
  <subtitle>Monologue from kevin</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyqskevin.github.io/"/>
  <updated>2019-02-27T16:48:10.470Z</updated>
  <id>https://hyqskevin.github.io/</id>
  
  <author>
    <name>Kevin W</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel SQL migration</title>
    <link href="https://hyqskevin.github.io/2019/02/27/migration/"/>
    <id>https://hyqskevin.github.io/2019/02/27/migration/</id>
    <published>2019-02-27T14:25:58.000Z</published>
    <updated>2019-02-27T16:48:10.470Z</updated>
    
    <content type="html"><![CDATA[<p>结合Laravel的Schema构建器构建应用的数据库表结构，类似于数据库的版本控制，允许团队成员间编辑并共享应用的数据库表结构<br>Laravel 的 Schema 门面提供了与数据库系统无关的创建和操纵表的支持，在 Laravel 所支持的所有数据库系统中提供一致的、优雅的、流式的 API，将SQL转成PHP去执行</p><p>部署环境(WAMP)<br>php 7.3.1<br>composer 1.8.4<br>laravel 5.8.0<br>MySQL 5.7.24<br><a id="more"></a></p><h2 id="迁移步骤"><a href="#迁移步骤" class="headerlink" title="迁移步骤"></a>迁移步骤</h2><ol><li>MySQL数据库创建Database</li><li>到laravel目录下修改<code>.env</code>文件符合数据库配置</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=127.0.0.1</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=your_database_name</span><br><span class="line">DB_USERNAME=root</span><br><span class="line">DB_PASSWORD=</span><br></pre></td></tr></table></figure><ol start="3"><li><p>到laravel目录创建新的迁移<br><code>php artisan make:migration create_table_name</code><br>创建的数据表在<code>laravel\database\migration</code>目录下</p><p><code>--table</code>和<code>--create</code>选项可以用于指定表名以及该迁移是否要创建一个新的数据表。这些选项只需要简单放在上述迁移命令后面并指定表名<br><code>php artisan make:migration create_users_table --create=users</code><br><code>php artisan make:migration add_votes_to_users_table --table=users</code></p></li><li><p>编写迁移数据表<br>迁移类包含了两个方法：<code>up</code>和<code>down</code>。<code>up</code>方法用于新增表，列或者索引到数据库，而<code>down</code>方法就是<code>up</code>方法的反操作<br>用到 Laravel 的<code>schema</code>构建器来创建和修改表，后面给出具体实现方法</p></li><li><p>运行迁移表到数据库<br><code>php artisan migrate</code></p><p>强制运行这些命令而不被提示，可以使用–force（不推荐）<br><code>php artisan migrate --force</code></p><p>在MySQL中可以看到Database下有新的表</p><img src="/laraveltest](https:/hyqskevin.github.io/pic/laravel/laraveltest.png)" class="[database"></li><li><p>执行回滚</p><p>在Database下有migration表，使得laravel可以回滚</p><img src="/rollback](https:/hyqskevin.github.io/pic/laravel/migration.png)" class="[migration"><p>执行文件中的<code>public function down()</code>,回滚最后一批运行的迁移<br><code>php artisan migrate:rollback</code><br>回滚所有的应用迁移<br><code>php artisan migrate:reset</code><br>先回滚所有数据库迁移<br><code>php artisan migrate:refresh</code><br>回滚或重建指定数量的迁移,refresh命令提供的step选项<br><code>php artisan migrate:refresh --step=5</code></p></li><li><p>在迁移之前进行试验<br><code>php artisan migrate --pretend</code></p></li></ol><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>使用Schema门面上的create方法来创建新的数据表。create方法接收两个参数，第一个是表名，第二个是获取用于定义新表的Blueprint对象的闭包<br><code>Schema::create(&#39;table_name&#39;, function (Blueprint $table){ })</code></p><h3 id="创建表中的列"><a href="#创建表中的列" class="headerlink" title="创建表中的列"></a>创建表中的列</h3><p>在Schema中创建表中的列结构 <code>$table-&gt;类型(&#39;名称&#39;);</code></p><ul><li>常用属性</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$table-&gt;bigIncrements(<span class="string">'id'</span>);<span class="comment">//自增ID，类型为bigint</span></span><br><span class="line">$table-&gt;bigInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中的BIGINT类型</span></span><br><span class="line">$table-&gt;binary(<span class="string">'data'</span>);<span class="comment">//等同于数据库中的BLOB类型</span></span><br><span class="line">$table-&gt;boolean(<span class="string">'confirmed'</span>);<span class="comment">//等同于数据库中的BOOLEAN类型</span></span><br><span class="line">$table-&gt;char(<span class="string">'name'</span>, <span class="number">4</span>);<span class="comment">//等同于数据库中的CHAR类型</span></span><br><span class="line">$table-&gt;date(<span class="string">'created_at'</span>);<span class="comment">//等同于数据库中的DATE类型</span></span><br><span class="line">$table-&gt;dateTime(<span class="string">'created_at'</span>);<span class="comment">//等同于数据库中的DATETIME类型</span></span><br><span class="line">$table-&gt;dateTimeTz(<span class="string">'created_at'</span>);<span class="comment">//等同于数据库中的DATETIME类型（带时区）</span></span><br><span class="line">$table-&gt;decimal(<span class="string">'amount'</span>, <span class="number">5</span>, <span class="number">2</span>);<span class="comment">//等同于数据库中的DECIMAL类型，带一个精度和范围</span></span><br><span class="line">$table-&gt;double(<span class="string">'column'</span>, <span class="number">15</span>, <span class="number">8</span>);<span class="comment">//等同于数据库中的DOUBLE类型，带精度, 总共15位数字，小数点后8位.</span></span><br><span class="line">$table-&gt;enum(<span class="string">'choices'</span>, [<span class="string">'foo'</span>, <span class="string">'bar'</span>]);<span class="comment">//等同于数据库中的 ENUM类型</span></span><br><span class="line">$table-&gt;float(<span class="string">'amount'</span>);<span class="comment">//等同于数据库中的 FLOAT 类型</span></span><br><span class="line">$table-&gt;increments(<span class="string">'id'</span>);<span class="comment">//数据库主键自增ID</span></span><br><span class="line">$table-&gt;integer(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中的 INTEGER 类型</span></span><br><span class="line">$table-&gt;ipAddress(<span class="string">'visitor'</span>);<span class="comment">//等同于数据库中的 IP 地址</span></span><br><span class="line">$table-&gt;json(<span class="string">'options'</span>);<span class="comment">//等同于数据库中的 JSON 类型</span></span><br><span class="line">$table-&gt;jsonb(<span class="string">'options'</span>);<span class="comment">//等同于数据库中的 JSONB 类型</span></span><br><span class="line">$table-&gt;longText(<span class="string">'description'</span>);<span class="comment">//等同于数据库中的 LONGTEXT 类型</span></span><br><span class="line">$table-&gt;macAddress(<span class="string">'device'</span>);<span class="comment">//等同于数据库中的 MAC 地址</span></span><br><span class="line">$table-&gt;mediumIncrements(<span class="string">'id'</span>);<span class="comment">//自增ID，类型为无符号的mediumint</span></span><br><span class="line">$table-&gt;mediumInteger(<span class="string">'numbers'</span>);<span class="comment">//等同于数据库中的 MEDIUMINT类型</span></span><br><span class="line">$table-&gt;mediumText(<span class="string">'description'</span>);<span class="comment">//等同于数据库中的 MEDIUMTEXT类型</span></span><br><span class="line">$table-&gt;morphs(<span class="string">'taggable'</span>);<span class="comment">//添加一个 INTEGER类型的 taggable_id 列和一个 STRING类型的 taggable_type列</span></span><br><span class="line">$table-&gt;nullableTimestamps();<span class="comment">//和 timestamps()一样但允许 NULL值.</span></span><br><span class="line">$table-&gt;rememberToken();<span class="comment">//添加一个 remember_token 列： VARCHAR(100) NULL.</span></span><br><span class="line">$table-&gt;smallIncrements(<span class="string">'id'</span>);<span class="comment">//自增ID，类型为无符号的smallint</span></span><br><span class="line">$table-&gt;smallInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中的 SMALLINT 类型</span></span><br><span class="line">$table-&gt;softDeletes();<span class="comment">//新增一个 deleted_at 列 用于软删除.</span></span><br><span class="line">$table-&gt;string(<span class="string">'email'</span>);<span class="comment">//等同于数据库中的 VARCHAR 列  .</span></span><br><span class="line">$table-&gt;string(<span class="string">'name'</span>, <span class="number">100</span>);<span class="comment">//等同于数据库中的 VARCHAR，带一个长度</span></span><br><span class="line">$table-&gt;text(<span class="string">'description'</span>);<span class="comment">//等同于数据库中的 TEXT 类型</span></span><br><span class="line">$table-&gt;time(<span class="string">'sunrise'</span>);<span class="comment">//等同于数据库中的 TIME类型</span></span><br><span class="line">$table-&gt;timeTz(<span class="string">'sunrise'</span>);<span class="comment">//等同于数据库中的 TIME 类型（带时区）</span></span><br><span class="line">$table-&gt;tinyInteger(<span class="string">'numbers'</span>);<span class="comment">//等同于数据库中的 TINYINT 类型</span></span><br><span class="line">$table-&gt;timestamp(<span class="string">'added_on'</span>);<span class="comment">//等同于数据库中的 TIMESTAMP 类型</span></span><br><span class="line">$table-&gt;timestampTz(<span class="string">'added_on'</span>);<span class="comment">//等同于数据库中的 TIMESTAMP 类型（带时区）</span></span><br><span class="line">$table-&gt;timestamps();<span class="comment">//添加 created_at 和 updated_at列</span></span><br><span class="line">$table-&gt;timestampsTz();<span class="comment">//添加 created_at 和 updated_at列（带时区）</span></span><br><span class="line">$table-&gt;unsignedBigInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中无符号的 BIGINT 类型</span></span><br><span class="line">$table-&gt;unsignedInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中无符号的 INT 类型</span></span><br><span class="line">$table-&gt;unsignedMediumInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中无符号的 MEDIUMINT 类型</span></span><br><span class="line">$table-&gt;unsignedSmallInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中无符号的 SMALLINT 类型</span></span><br><span class="line">$table-&gt;unsignedTinyInteger(<span class="string">'votes'</span>);<span class="comment">//等同于数据库中无符号的 TINYINT 类型</span></span><br><span class="line">$table-&gt;uuid(<span class="string">'id'</span>);<span class="comment">//等同于数据库的UUID</span></span><br></pre></td></tr></table></figure><ul><li>常用约束</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">-&gt;after(<span class="string">'column'</span>)<span class="comment">//将该列置于另一个列之后 (仅适用于MySQL)</span></span><br><span class="line">-&gt;comment(<span class="string">'my comment'</span>)<span class="comment">//添加注释信息</span></span><br><span class="line">-&gt;default($value)<span class="comment">//指定列的默认值</span></span><br><span class="line">-&gt;first()<span class="comment">//将该列置为表中第一个列 (仅适用于MySQL)</span></span><br><span class="line">-&gt;nullable()<span class="comment">//允许该列的值为NULL</span></span><br><span class="line">-&gt;storedAs($expression)<span class="comment">//创建一个存储生成列（只支持MySQL）</span></span><br><span class="line">-&gt;unsigned()<span class="comment">//设置 integer 列为 UNSIGNED</span></span><br><span class="line">-&gt;virtualAs($expression)<span class="comment">//创建一个虚拟生成列（只支持MySQL）</span></span><br></pre></td></tr></table></figure><ul><li>格式示例</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateTableName</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Run the migrations.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Schema::create(<span class="string">'table_name'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</span><br><span class="line">        $table-&gt;bigIncrements(<span class="string">'id'</span>);</span><br><span class="line">        $table-&gt;string(<span class="string">'name'</span>);</span><br><span class="line">        $table-&gt;string(<span class="string">'email'</span>)-&gt;unique();</span><br><span class="line">        $table-&gt;timestamp(<span class="string">'email_verified_at'</span>)-&gt;nullable();</span><br><span class="line">        $table-&gt;string(<span class="string">'password'</span>);</span><br><span class="line">        $table-&gt;rememberToken();</span><br><span class="line">        $table-&gt;timestamps();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Reverse the migrations.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Schema::dropIfExists(<span class="string">'table_name'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改、重命名、删除列"><a href="#修改、重命名、删除列" class="headerlink" title="修改、重命名、删除列"></a>修改、重命名、删除列</h3><p><code>-&gt;change()</code>方法允许你修改已存在的列为新的类型，或者修改列的属性<br><code>-&gt;renameColumn()</code>方法可以重命名一个列<br><code>-&gt;dropColumn</code>方法可以删除列</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Schema::table(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($table)</span> </span>&#123;</span><br><span class="line">    $table-&gt;string(<span class="string">'name'</span>, <span class="number">50</span>)-&gt;change();  <span class="comment">//name列的尺寸从 25 增加到 50</span></span><br><span class="line">    $table-&gt;renameColumn(<span class="string">'from'</span>, <span class="string">'to'</span>);  <span class="comment">//重命名 from 为 to</span></span><br><span class="line">    $table-&gt;dropColumn(<span class="string">'votes'</span>);  <span class="comment">//删除一个列</span></span><br><span class="line">    $table-&gt;dropColumn([<span class="string">'votes'</span>, <span class="string">'avatar'</span>, <span class="string">'location'</span>]);  <span class="comment">//删除多个列</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>需要添加doctrine/dbal依赖到composer.json文件</li><li>暂不支持enum类型的列的修改和重命名</li></ul><h3 id="添加索引键"><a href="#添加索引键" class="headerlink" title="添加索引键"></a>添加索引键</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$table-&gt;primary(<span class="string">'id'</span>);<span class="comment">//添加主键索引</span></span><br><span class="line">$table-&gt;primary([<span class="string">'first'</span>, <span class="string">'last'</span>]);<span class="comment">//添加混合索引</span></span><br><span class="line">$table-&gt;unique(<span class="string">'email'</span>);<span class="comment">//添加唯一索引</span></span><br><span class="line">$table-&gt;unique(<span class="string">'state'</span>, <span class="string">'my_index_name'</span>);<span class="comment">//指定自定义索引名称</span></span><br><span class="line">$table-&gt;index(<span class="string">'state'</span>);<span class="comment">//添加普通索引</span></span><br></pre></td></tr></table></figure><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$table-&gt;dropPrimary(<span class="string">' '</span>);<span class="comment">//删除主键索引</span></span><br><span class="line">$table-&gt;dropUnique(<span class="string">' '</span>);<span class="comment">//删除唯一索引</span></span><br><span class="line">$table-&gt;dropIndex(<span class="string">' '</span>); <span class="comment">//删除普通索引</span></span><br></pre></td></tr></table></figure><h3 id="外键约束（loading…）"><a href="#外键约束（loading…）" class="headerlink" title="外键约束（loading…）"></a>外键约束（loading…）</h3><h2 id="检查列表是否存在"><a href="#检查列表是否存在" class="headerlink" title="检查列表是否存在"></a>检查列表是否存在</h2><p>使用 <code>hasTable</code> 和 <code>hasColumn</code> 方法检查表或列是否存在</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Schema::hasTable(<span class="string">'users'</span>)) &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Schema::hasColumn(<span class="string">'users'</span>, <span class="string">'email'</span>)) &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置表的存储引擎，在schema构建器上设置engine属性"><a href="#设置表的存储引擎，在schema构建器上设置engine属性" class="headerlink" title="设置表的存储引擎，在schema构建器上设置engine属性"></a>设置表的存储引擎，在schema构建器上设置engine属性</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($table)</span> </span>&#123;</span><br><span class="line">    $table-&gt;engine = <span class="string">'InnoDB'</span>;</span><br><span class="line">    $table-&gt;increments(<span class="string">'id'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="重命名-删除表"><a href="#重命名-删除表" class="headerlink" title="重命名/删除表"></a>重命名/删除表</h2><p>在<code>public function up()</code>中添加<br><code>Schema::rename(&#39;your_table_name&#39;,&#39;change_name&#39;);</code><br>更新<code>public function down()</code>中的表名</p><p>在<code>public function down()</code>中添加<br><code>Schema::drop(&#39;users&#39;);</code> 或 <code>Schema::dropIfExists(&#39;users&#39;);</code><br>用于迁移的回滚</p><hr><p>参考：<br> <a href="https://laravelacademy.org/post/9580.html" target="_blank" rel="noopener">Laravel数据库迁移</a><br> <a href="https://laravel.com/docs/5.7/migrations" target="_blank" rel="noopener">Database Migration</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;结合Laravel的Schema构建器构建应用的数据库表结构，类似于数据库的版本控制，允许团队成员间编辑并共享应用的数据库表结构&lt;br&gt;Laravel 的 Schema 门面提供了与数据库系统无关的创建和操纵表的支持，在 Laravel 所支持的所有数据库系统中提供一致的、优雅的、流式的 API，将SQL转成PHP去执行&lt;/p&gt;
&lt;p&gt;部署环境(WAMP)&lt;br&gt;php 7.3.1&lt;br&gt;composer 1.8.4&lt;br&gt;laravel 5.8.0&lt;br&gt;MySQL 5.7.24&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="laravel" scheme="https://hyqskevin.github.io/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>fund_flow</title>
    <link href="https://hyqskevin.github.io/2019/02/20/fund-flow/"/>
    <id>https://hyqskevin.github.io/2019/02/20/fund-flow/</id>
    <published>2019-02-20T07:41:56.000Z</published>
    <updated>2019-02-26T11:51:16.755Z</updated>
    
    <content type="html"><![CDATA[<p>-服务外包项目-<br>资金流入流出问题的研究笔记，数据来自蚂蚁金服大数据赛题<br><a id="more"></a></p><h2 id="研究现状"><a href="#研究现状" class="headerlink" title="研究现状"></a>研究现状</h2><h3 id="资金流入流出问题"><a href="#资金流入流出问题" class="headerlink" title="资金流入流出问题"></a>资金流入流出问题</h3><ol><li><strong>时间序列模型分析</strong>：启动时间短，训练数据量不大，成本低<br>自回归算法 AR：呈现过去时刻对预测的直接影响<br>移动平均算法 MA：预测意料之外的事<br>自回归+移动平均 ARMA：综合以上的平衡<br>齐次非平稳 ARIMA：针对非平稳序列</li></ol><ul><li>时间序列可较好的预测短期价格变动，时期增长会导致误差率增高</li></ul><ol start="2"><li>投资分析：长期分析法，利用经济学角度分析内在价值</li></ol><ul><li>基本分析：宏观经济分析，行业分析和公司分析<br>应用不够直观，市场反应不够敏锐</li><li>技术分析：根据图标信息，技术指标记录推断变化趋势<br>技术指标滞后，无法把控整体趋势  </li></ul><ol start="3"><li>混沌动力学</li><li>神经网络<br>利用探索数据间的交叉关系建立模型<br>契合资金波动的高度非线性特点</li><li>定性预测：专家意见，德尔菲法</li><li>因果预测：回归分析，定性和定量分析</li></ol><h3 id="组合算法"><a href="#组合算法" class="headerlink" title="组合算法"></a>组合算法</h3><ol><li>统计学+机器学习</li></ol><ul><li>灰色系统+神经网络</li><li>时间序列+神经网络</li></ul><ol start="2"><li>集成学习 ensemble learning</li></ol><ul><li>串行思路：采用串行的方式生成多个学习器目的在于减少偏差（bias），使用多个弱分类器组合成为一个强分类器，代表算法Bagging，boosting，GBDT</li><li>并行思路：通过使用并行的学习，得到多个学习模型然后取其平均结果目的在于减少方差，代表算法 Random Forest</li></ul><h3 id="因子分解机-Factorization-Machine-loading…"><a href="#因子分解机-Factorization-Machine-loading…" class="headerlink" title="因子分解机 Factorization Machine (loading…)"></a>因子分解机 Factorization Machine (loading…)</h3><p>通过特征向量去模拟因子分解模型，利用特征抽取的方法构造出特征并借助因子分解模型对不同变量间的相互作用进行建模</p><p>FM算法常用来解决二分类，回归，排序问题</p><h2 id="模型构建"><a href="#模型构建" class="headerlink" title="模型构建"></a>模型构建</h2><p>数据集–&gt;数据预处理–&gt;特征抽取–&gt;预测算法设计–&gt;误差分析–&gt;优化</p><p>数据预处理：剔除异常值，表格间数据集成<br>特征抽取：时间特征，用户特征，利率特征<br>预测算法设计(loading…)<br>误差分析：用均方根误差评价</p><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><h3 id="余额宝用户数据"><a href="#余额宝用户数据" class="headerlink" title="余额宝用户数据"></a>余额宝用户数据</h3><p>基本信息数据 user_profile：</p><table><thead><tr><th>列名</th><th>类型</th><th style="text-align:center">含义</th><th>示例</th></tr></thead><tbody><tr><td>user_id</td><td>bigint</td><td style="text-align:center">用户</td><td>ID</td><td>1234</td></tr><tr><td>Sex</td><td>bigint</td><td style="text-align:center">用户性别（ 1 ：男， 0：女 ）</td><td>0</td></tr><tr><td>City</td><td>bigint</td><td style="text-align:center">所在城市</td><td>6081949</td></tr><tr><td>constellation</td><td>string</td><td style="text-align:center">星座</td><td>射手座</td></tr></tbody></table><p>申购赎回数据 user_balance：</p><table><thead><tr><th>列名</th><th>类型</th><th style="text-align:center">含义</th><th>示例</th></tr></thead><tbody><tr><td>user_id</td><td>bigint</td><td style="text-align:center">用户 id</td><td>1234</td></tr><tr><td>report_date</td><td>string</td><td style="text-align:center">日期</td><td>20140407</td></tr><tr><td>tBalance</td><td>bigint</td><td style="text-align:center">今日余额</td><td>109004</td></tr><tr><td>yBalance</td><td>bigint</td><td style="text-align:center">昨日余额</td><td>97389</td></tr><tr><td>total_purchase_amt</td><td>bigint</td><td style="text-align:center">今日总购买量 = 直接购买 + 收益</td><td>21876</td></tr><tr><td>direct_purchase_amt</td><td>bigint</td><td style="text-align:center">今日直接购买量</td><td>21863</td></tr><tr><td>purchase_bal_amt</td><td>bigint</td><td style="text-align:center">今日支付宝余额购买量</td><td>0</td></tr><tr><td>purchase_bank_amt</td><td>bigint</td><td style="text-align:center">今日银行卡购买量</td><td>21863</td></tr><tr><td>total_redeem_amt</td><td>bigint</td><td style="text-align:center">今日总赎回量 = 消费 + 转出</td><td>10261</td></tr><tr><td>consume_amt</td><td>bigint</td><td style="text-align:center">今日消费总量</td><td>0</td></tr><tr><td>transfer_amt</td><td>bigint</td><td style="text-align:center">今日转出总量</td><td>10261</td></tr><tr><td>tftobal_amt</td><td>bigint</td><td style="text-align:center">今日转出到支付宝余额总量</td><td>0</td></tr><tr><td>tftocard_amt</td><td>bigint</td><td style="text-align:center">今日转出到银行卡总量</td><td>10261</td></tr><tr><td>share_amt</td><td>bigint</td><td style="text-align:center">今日收益</td><td>13</td></tr><tr><td>category1</td><td>bigint</td><td style="text-align:center">今日类目 1 消费总额</td><td>0</td></tr><tr><td>category2</td><td>bigint</td><td style="text-align:center">今日类目 2 消费总额</td><td>0</td></tr><tr><td>category3</td><td>bigint</td><td style="text-align:center">今日类目 3 消费总额</td><td>0</td></tr><tr><td>category4</td><td>bigint</td><td style="text-align:center">今日类目 4 消费总额</td><td>0</td></tr></tbody></table><p>收益率数据 mfd_day_share_interest：</p><table><thead><tr><th>列名</th><th>类型</th><th style="text-align:center">含义</th><th>示例</th></tr></thead><tbody><tr><td>mfd_date</td><td>string</td><td style="text-align:center">日期</td><td>20140102</td></tr><tr><td>mfd_daily_yield</td><td>double</td><td style="text-align:center">万份收益，即 1 万块钱的收益。</td><td>1.5787</td></tr><tr><td>mfd_7daily_yield</td><td>double</td><td style="text-align:center">七日年化收益率（ % ）</td><td>6.307</td></tr></tbody></table><p>银行拆借利率数据 mfd_bank_shibor：</p><table><thead><tr><th>列名</th><th>类型</th><th style="text-align:center">含义</th><th>示例</th></tr></thead><tbody><tr><td>mfd_date</td><td>String</td><td style="text-align:center">日期</td><td>20140102</td></tr><tr><td>Interest_O_N</td><td>Double</td><td style="text-align:center">隔夜利率（%）</td><td>2.8</td></tr><tr><td>Interest_1_W</td><td>Double</td><td style="text-align:center">1周利率（%）</td><td>4.25</td></tr><tr><td>Interest_2_W</td><td>Double</td><td style="text-align:center">2周利率（%）</td><td>4.9</td></tr><tr><td>Interest_1_M</td><td>Double</td><td style="text-align:center">1个月利率（%）</td><td>5.04</td></tr><tr><td>Interest_3_M</td><td>Double</td><td style="text-align:center">3个月利率（%）</td><td>4.91</td></tr><tr><td>Interest_6_M</td><td>Double</td><td style="text-align:center">6个月利率（%）</td><td>4.79</td></tr><tr><td>Interest_9_M</td><td>Double</td><td style="text-align:center">9个月利率（%）</td><td>4.76</td></tr><tr><td>Interest_1_Y</td><td>Double</td><td style="text-align:center">1年利率（%）</td><td>4.78</td></tr></tbody></table><h3 id="数据关系"><a href="#数据关系" class="headerlink" title="数据关系"></a>数据关系</h3><p>今日余额 = 昨日余额 + 今日申购 - 今日赎回<br>今日余额 = 昨日余额 + [直接购买(支付宝+银行)+ 收益] - [消费 + 支出(支付宝+银行)]<br>tBalance = yBalance + (direct_purchase_amt + share_amt) - (consume_amt + transfer_amt)</p><h2 id="抽取特征"><a href="#抽取特征" class="headerlink" title="抽取特征"></a>抽取特征</h2><h2 id="资金流预测"><a href="#资金流预测" class="headerlink" title="资金流预测"></a>资金流预测</h2><p>采用时间序列预测的ARIMA模型，BP神经网络，集成学习来进行预测，并结合不同的算法进行组合预测</p><h3 id="ARIMA"><a href="#ARIMA" class="headerlink" title="ARIMA"></a>ARIMA</h3><h3 id="BP"><a href="#BP" class="headerlink" title="BP"></a>BP</h3><h3 id="ARIMA-BP"><a href="#ARIMA-BP" class="headerlink" title="ARIMA+BP"></a>ARIMA+BP</h3><h3 id="GBDT"><a href="#GBDT" class="headerlink" title="GBDT"></a>GBDT</h3><h3 id="Random-Forest"><a href="#Random-Forest" class="headerlink" title="Random Forest"></a>Random Forest</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-服务外包项目-&lt;br&gt;资金流入流出问题的研究笔记，数据来自蚂蚁金服大数据赛题&lt;br&gt;
    
    </summary>
    
      <category term="practice" scheme="https://hyqskevin.github.io/categories/practice/"/>
    
    
      <category term="time_series" scheme="https://hyqskevin.github.io/tags/time-series/"/>
    
      <category term="ensemble_learning" scheme="https://hyqskevin.github.io/tags/ensemble-learning/"/>
    
      <category term="bp_nn" scheme="https://hyqskevin.github.io/tags/bp-nn/"/>
    
  </entry>
  
  <entry>
    <title>book-list</title>
    <link href="https://hyqskevin.github.io/2019/02/16/book-list/"/>
    <id>https://hyqskevin.github.io/2019/02/16/book-list/</id>
    <published>2019-02-16T03:02:57.000Z</published>
    <updated>2019-02-19T02:12:32.513Z</updated>
    
    <content type="html"><![CDATA[<p>个人书库，收集正在看的和准备要看的好书，不定期更新<br><a id="more"></a></p><h4 id="【2018年《华盛顿邮报》推荐书单】"><a href="#【2018年《华盛顿邮报》推荐书单】" class="headerlink" title="【2018年《华盛顿邮报》推荐书单】"></a>【2018年《华盛顿邮报》推荐书单】</h4><p>本年度推荐的书：<br>《Good Aand Mad》（《善良与狂暴》）、<br>《The Library Book》（图书馆的书）、<br>《The line becomes a river》（《一条线变成一条河》）、<br>《The maze at Windermere》（《温德米尔的迷宫》）、<br>《On desperate ground》（《在绝望的战场上》）、<br>《One person,no vote》（《一人，零票》）、<br>《The Overstory》（《上层林冠》）、<br>《A place for US》（《属于我们的地方》）、<br>《There  There》（《好了，没事了》）、<br>《Washington Black》（《华盛顿黑人》）<br><br></p><h4 id="【2018年《华尔街日报》十佳书单】"><a href="#【2018年《华尔街日报》十佳书单】" class="headerlink" title="【2018年《华尔街日报》十佳书单】"></a>【2018年《华尔街日报》十佳书单】</h4><p>本年度推荐的书：<br>《不对称》(ASYMMETRY)<br>《丘吉尔传》(CHURCHILL)<br>《暴风骤雨》(CLOUDBURSTS)<br>《意识的本能》(THE CONSCIOUSNESS INSTINCT)<br>《弗雷德里克·道格拉斯传》(FREDERICK DOUGLASS)<br>《天赐良机》(GODSEND)<br>《伊庇鲁斯的挽歌》(LAMENT FROM EPIRUS)<br>《我自己的生活》(A LIFE OF MY OWN)<br>《头号爱国者》(PATRIOT NUMBER ONE)<br>《暗影季节》(SEASON OF THE SHADOW)<br><br></p><h4 id="【2018《金融时报》和麦肯锡年度“最佳商业图书奖”入围书单-】"><a href="#【2018《金融时报》和麦肯锡年度“最佳商业图书奖”入围书单-】" class="headerlink" title="【2018《金融时报》和麦肯锡年度“最佳商业图书奖”入围书单 】"></a>【2018《金融时报》和麦肯锡年度“最佳商业图书奖”入围书单 】</h4><p>本年度推荐的书：<br>《美国资本主义》（Capitalism in America）<br>《崩溃》（Crashed）<br>《短命的银行》（The Bank That Lived A Little）<br>《受损的商品》（Damaged Goods）<br>《滴血成金》（Bad Blood）<br>《十亿美元鲸鱼》（Billion Dollar Whale）：<br>《简斯维尔》（Janesville），<br>《认清事实》（Factfulness）：<br>《万物价值》（The Value of Everything）<br>《给人民发钱》（Give People Money）<br>《新势力》（New Power）<br>《零工》（Gigged）<br>《亿万富翁的天下》（The Billionaire Raj）<br>《崛起的五千万》（Fifty Million Rising）<br>《极乐男权》（Brotopia）<br>《谁是迈克尔·奥维茨？》（Who Is Michael Ovitz?）<br><br></p><h4 id="【2018年比尔·盖茨推荐的5本书】"><a href="#【2018年比尔·盖茨推荐的5本书】" class="headerlink" title="【2018年比尔·盖茨推荐的5本书】"></a>【2018年比尔·盖茨推荐的5本书】</h4><p>本年度推荐的书：<br>《21世纪的21一个教训 21 Lessons for the 21st Century》<br>《一扫光的武器  Army of None_ Autonomous Weapons and the Future of War》<br>《Educated 》<br>《Bad Blood》<br>《Meditation and Mindfulness》<br><br></p><h4 id="【《经济学人》2018年推荐书单】"><a href="#【《经济学人》2018年推荐书单】" class="headerlink" title="【《经济学人》2018年推荐书单】"></a>【《经济学人》2018年推荐书单】</h4><p>《Moneyland》<br>《Enlightenment Now》<br>《Fascism: A Warning》<br>《First Raise a Flag》<br>《Into the Hands of the Soldiers》<br>《Shadows of Empire》<br>《A History of America in 100 Maps》<br>《Pogrom》<br>《The China Mission》<br>《Rise and Kill First》<br>《We the Corporations》<br>《AI Superpowers》<br>《Radical Markets》<br>《EuroTragedy》<br>《Crashed》<br>《The Wife’s Tale: A Personal History》<br>《Educated》<br>《Barracoon》<br>《Napoleon: A Life》<br>《Churchill: Walking with Destiny》<br>《Gandhi》<br>《The Spy and the Traitor》<br><br></p><h4 id="【彭博盘点2018年书单】"><a href="#【彭博盘点2018年书单】" class="headerlink" title="【彭博盘点2018年书单】"></a>【彭博盘点2018年书单】</h4><p>《high growth handbook》<br>《The Coddling of the American Mind: How Good Intentions and Bad Ideas Are Setting Up a Generation for Failure》<br>《Our Towns: A 100,000-Mile Journey Into the Heart of America》<br>《Educated: A Memoir》<br>《Stubborn Attachments: A Vision for a Society of Free, Prosperous, and Responsible Individuals》<br>《Refugee》<br>《Factfulness: Ten Reasons We’re Wrong About the World—and Why Things Are Better Than You Think》<br>《The Efficiency Paradox: What Big Data Can’t Do》<br>《The Third Plate: Field Notes on the Future of Food》<br>《Inspired: How to Create Tech Products Customers Love》<br>《Bad Blood: Secrets and Lies in a Silicon Valley Startup》<br>《Grant》<br>《Principles: Life and Work》<br>《The Coddling of the American Mind: How Good Intentions and Bad Ideas Are Setting Up a Generation for Failure》<br>《The Culture Code: The Secrets of Highly Successful Groups》<br>《Hit Refresh: The Quest to Rediscover Microsoft’s Soul and Imagine a Better Future for Everyone》<br>《Keeping At It: The Quest for Sound Money and Good Government》<br>《New Power: How Power Works in Our Hyperconnected World—and How to Make It Work for You》<br>《The Complete Personal Memoirs of Ulysses S. Grant》<br>《The Book of Why: The New Science of Cause and Effect》<br>《Powerful: Building a Culture of Freedom and Responsibility》<br>《The Courage to Be Disliked: The Japanese Phenomenon That Shows You How to Change Your Life and Achieve Real 》《Happiness》<br>《Dare to Lead: Brave Work. Tough Conversations. Whole Hearts.》<br>《Without Precedent: Chief Justice John Marshall and His Times》<br>《The Largesse of the Sea Maiden: Stories》<br>《Paris in the Present Tense》<br>《Destined for War: Can America and China Escape Thucydides’s Trap?》<br>《Small Fry》<br>《Life 3.0: Being Human in the Age of Artificial Intelligence》<br>《Love and Ruin》<br><br></p><ul><li><a href="https://www.jianshu.com/p/0dc43df2c3eb" target="_blank" rel="noopener">来源：jianshu.com/p/0dc43df2c3eb</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人书库，收集正在看的和准备要看的好书，不定期更新&lt;br&gt;
    
    </summary>
    
      <category term="notes" scheme="https://hyqskevin.github.io/categories/notes/"/>
    
    
      <category term="book" scheme="https://hyqskevin.github.io/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>mysql</title>
    <link href="https://hyqskevin.github.io/2019/02/15/mysql/"/>
    <id>https://hyqskevin.github.io/2019/02/15/mysql/</id>
    <published>2019-02-15T07:59:50.000Z</published>
    <updated>2019-02-25T11:19:11.806Z</updated>
    
    <content type="html"><![CDATA[<p>-基础笔记-<br>二次回顾，学校课程 + 慕课网 MySQL 详细学习笔记<br><a id="more"></a></p><h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><p>DB：数据库(Database)<br>DBS：数据库系统(Database System)<br>DBMS：数据库管理系统(Database Management System)</p><p>SQL语言：</p><ul><li>DDL  数据定义语言</li><li>DML  数据操作语言</li><li>DQL  数据查询语言</li><li>DCL  数据控制语言</li></ul><h2 id="MySQL架构"><a href="#MySQL架构" class="headerlink" title="MySQL架构"></a>MySQL架构</h2><p>MySQL是由SQL接口、解析器、优化器、缓存和存储引擎组成</p><ul><li>Connectors  指的是不同语言与SQL的交互接口</li><li>Management Serivices &amp; Utillities  系统管理和工具</li><li>Connection Pool  连接池，管理缓冲用户连接，线程处理等需要缓存的需求</li><li>SQL Interface  接收用户的SQL指令，并且返回需要查询的结果</li><li>Parser  解析器</li><li>Optimizer  查询优化器  选取-投影-联接</li><li>Caches &amp; Buffers  查询缓存</li><li>Engine  存储引擎</li></ul><img src="https://hyqskevin.github.io/pic/mysql.png" class="[MySQL架构]"><h3 id="MySQL存储引擎-loading…"><a href="#MySQL存储引擎-loading…" class="headerlink" title="MySQL存储引擎(loading…)"></a>MySQL存储引擎(loading…)</h3><h4 id="memory存储引擎"><a href="#memory存储引擎" class="headerlink" title="memory存储引擎"></a>memory存储引擎</h4><h4 id="CSV存储引擎"><a href="#CSV存储引擎" class="headerlink" title="CSV存储引擎"></a>CSV存储引擎</h4><h4 id="archive存储引擎"><a href="#archive存储引擎" class="headerlink" title="archive存储引擎"></a>archive存储引擎</h4><h4 id="myisam存储引擎"><a href="#myisam存储引擎" class="headerlink" title="myisam存储引擎"></a>myisam存储引擎</h4><h4 id="innodb存储引擎"><a href="#innodb存储引擎" class="headerlink" title="innodb存储引擎"></a>innodb存储引擎</h4><h2 id="mysql相关操作"><a href="#mysql相关操作" class="headerlink" title="mysql相关操作"></a>mysql相关操作</h2><p>my.cnf是MySQL的配置文件</p><h3 id="登陆-退出MySQL"><a href="#登陆-退出MySQL" class="headerlink" title="登陆/退出MySQL"></a>登陆/退出MySQL</h3><p>登陆</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">mysql -hlocalhost -uroot -p -P3306</span><br><span class="line">mysql -uroot -p --prompt=命令提示符  //登陆的同时修改密令提示符</span><br><span class="line">mysql -uroot -p -D db_name  //登陆的同时打开指定数据库</span><br></pre></td></tr></table></figure><p>\h 主机<br>\u 当前登陆的用户<br>\d 当前打开的数据库<br>\D 当前服务器的日期时间<br>\c取消当前命令的执行<br>help或者\h或者?加上相关关键字来查看手册<br>命令行结束符默认使用;或者\g来结束</p><p>退出：exit | quit | \q | ctrl+c</p><h3 id="MySQL语句"><a href="#MySQL语句" class="headerlink" title="MySQL语句"></a>MySQL语句</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()  //得到登陆的用户</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>()  //得到MySQL的版本信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>()  //得到当前的日期时间</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>()  //得到当前打开的数据库</span><br></pre></td></tr></table></figure><h3 id="MySQL常用函数"><a href="#MySQL常用函数" class="headerlink" title="MySQL常用函数"></a>MySQL常用函数</h3><p>CEIL()    进一取整<br>FLOOR()    舍掉小数部分<br>ROUND()    四舍五入<br>TRUNCATE()    截取小数点后几位<br>MOD()    取余数<br>ABS()    取绝对值<br>POWER()    幂运算<br>PI()    圆周率<br>RAND()或者RAND(X)    0~1之间的随机数<br>SIGN(X)    得到数字符号<br>EXP(X)    计算e的x次方</p><h2 id="数据库相关操作"><a href="#数据库相关操作" class="headerlink" title="数据库相关操作"></a>数据库相关操作</h2><ol><li><p>创建数据库<br><code>CREATE {DATABASE|SCHEMA} db_name;</code><br>检测数据库名称是否存在，不存在则创建<br><code>CREATE DATABASE [IF NOT EXISTS] db_name;</code><br>在创建数据库的同时指定编码方式<br><code>CREATE DATABASE [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset;</code></p></li><li><p>查看当前服务器下全部数据库<br><code>SHOW DATABASES|SCHEMAS;</code></p></li><li><p>查看指定数据库的详细信息<br><code>SHOW CREATE DATABASE db_name;</code></p></li><li><p>修改指定数据库的编码方式<br><code>ALTER DATABASE db_name [DEFAULT] CHARACTER SET [=] charset;</code></p></li><li><p>打开指定数据库<br><code>USE db_name;</code></p></li><li><p>得到当前打开的数据库<br><code>SELECT DATABASE()|SCHEMA();</code></p></li><li><p>删除指定的数据库<br><code>DROP DATABASE db_name;</code><br>如果数据库存在则删除<br><code>DROP DATABASE [IF EXISTS] db_name;</code></p></li></ol><h2 id="MySQL数据类型"><a href="#MySQL数据类型" class="headerlink" title="MySQL数据类型"></a>MySQL数据类型</h2><img src="https://hyqskevin.github.io/pic/int.png" class="[整数型]"><img src="https://hyqskevin.github.io/pic/float.png" class="[浮点数型]"><img src="https://hyqskevin.github.io/pic/char.png" class="[字符串型]"><p>CHAR效率高于VARCHAR,CHAR相当于拿空间换时间，VARCHAR拿时间换空间<br>CHAR默认存储数据的时候，后面会用空格填充到指定长度；而在检索的时候会去掉后面空格；VARCHAR在保存的时候不进行填充，尾部的空格会留下<br>TEXT列不能有默认值,检索的时候不存在大小写转换<br><img src="https://hyqskevin.github.io/pic/date.png" class="[日期时间型]"></p><h2 id="数据表相关操作"><a href="#数据表相关操作" class="headerlink" title="数据表相关操作"></a>数据表相关操作</h2><p>数据表：数据表由行(row)和列(column)来组成。每个数据表中至少有一列，行可以有零行一行或者多行组成。表名要求唯一，不要包含特殊字符，最好含义明确</p><ol><li>创建表<br>CREATE TABLE [IF NOT EXISTS] tbl_name(<br> 字段名称 字段类型 [完整性约束条件],<br> 字段名称 字段类型 [完整性约束条件],<br>…<br>)ENGINE=存储引擎 CHARSET=编码方式;</li></ol><ul><li><p><strong>约束条件</strong><br>UNSIGNED  无符号，没有负数，从0开始<br>ZEROFILL  零填充，当数据的显示长度不够的时候可以使用前补0的效果填充至指定长度,字段会自动添加UNSIGNED<br>NOT NULL  非空约束，也就是插入值的时候这个字段必须要给值,值不能为空<br>DEFAULT  默认值，如果插入记录的时候没有给字段赋值，则使用默认值<br>PRIMARY KEY  主键，标识记录的唯一性，值不能重复，一个表只能有一个主键，自动禁止为空<br>AUTO_INCREMENT  自动增长，只能用于数值列，而且配合索引使用,默认起始值从1开始，每次增长1<br>UNIQUE KEY  唯一性，一个表中可以有多个字段是唯一索引，同样的值不能重复，但是NULL值除外<br>FOREIGN KEY  外键约束</p></li><li><p>示例1（无约束条件）</p></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> personal_info(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">username <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">CHAR</span>(<span class="number">32</span>),</span><br><span class="line">email <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">age TINYINT,</span><br><span class="line">card <span class="built_in">CHAR</span>(<span class="number">18</span>),</span><br><span class="line">tel <span class="built_in">CHAR</span>(<span class="number">11</span>),</span><br><span class="line">salary <span class="built_in">FLOAT</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">married TINYINT(<span class="number">1</span>),</span><br><span class="line">addr <span class="built_in">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">sex ENUM(<span class="string">'男'</span>,<span class="string">'女'</span>,<span class="string">'保密'</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">CHARSET</span>=UTF8;</span><br></pre></td></tr></table></figure><ul><li>示例2（带约束条件）</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`personal_info2`</span>(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> AUTO_INCREMENT <span class="keyword">KEY</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line"><span class="string">`username`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'用户名'</span>,</span><br><span class="line"><span class="string">`password`</span> <span class="built_in">CHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line"><span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line"><span class="string">`age`</span> TINYINT <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">18</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line"><span class="string">`sex`</span> ENUM(<span class="string">'男'</span>,<span class="string">'女'</span>,<span class="string">'保密'</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'保密'</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line"><span class="string">`tel`</span> <span class="built_in">CHAR</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'电话'</span>,</span><br><span class="line"><span class="string">`addr`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'北京'</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line"><span class="string">`card`</span> <span class="built_in">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'身份证号'</span>,</span><br><span class="line"><span class="string">`married`</span> TINYINT(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'0代表未结婚，1代表已结婚'</span>,</span><br><span class="line"><span class="string">`salary`</span> <span class="built_in">FLOAT</span>(<span class="number">8</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'薪水'</span></span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=UTF8;</span><br></pre></td></tr></table></figure><ul><li>要注意单引号和反引号的使用</li></ul><ol start="2"><li>查看当前数据库下已有数据表<br><code>SHOW TABLES;</code><br><code>SHOW [FULL] TABLES [{FROM | IN} db_name] [LIKE &#39;pattern&#39; | WHERE expr];</code></li><li>查看指定数据表的详细信息<br><code>SHOW CREATE TABLE tbl_name;</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">| personal_info2 | CREATE TABLE `personal_info2` (</span><br><span class="line">  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT <span class="string">'用户编号'</span>,</span><br><span class="line">  `username` varchar(20) NOT NULL COMMENT <span class="string">'用户名'</span>,</span><br><span class="line">  `password` char(32) NOT NULL COMMENT <span class="string">'密码'</span>,</span><br><span class="line">  `email` varchar(50) NOT NULL COMMENT <span class="string">'邮箱'</span>,</span><br><span class="line">  `age` tinyint(3) unsigned NOT NULL DEFAULT <span class="string">'18'</span> COMMENT <span class="string">'年龄'</span>,</span><br><span class="line">  `sex` enum(<span class="string">'男'</span>,<span class="string">'女'</span>,<span class="string">'保密'</span>) NOT NULL DEFAULT <span class="string">'保密'</span> COMMENT <span class="string">'性别'</span>,</span><br><span class="line">  `tel` char(11) NOT NULL COMMENT <span class="string">'电话'</span>,</span><br><span class="line">  `addr` varchar(50) NOT NULL DEFAULT <span class="string">'北京'</span> COMMENT <span class="string">'地址'</span>,</span><br><span class="line">  `card` char(18) NOT NULL COMMENT <span class="string">'身份证号'</span>,</span><br><span class="line">  `married` tinyint(1) NOT NULL DEFAULT <span class="string">'0'</span> COMMENT <span class="string">'0代表未结婚，1代表已结婚'</span>,</span><br><span class="line">  `salary` <span class="built_in">float</span>(8,2) NOT NULL DEFAULT <span class="string">'0.00'</span> COMMENT <span class="string">'薪水'</span>,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `username` (`username`),</span><br><span class="line">  UNIQUE KEY `email` (`email`),</span><br><span class="line">  UNIQUE KEY `tel` (`tel`),</span><br><span class="line">  UNIQUE KEY `card` (`card`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 |</span><br></pre></td></tr></table></figure><ol start="4"><li>查看表结构<br><code>DESC tbl_name;</code><br><code>DESCRIBE tbl_name;</code><br><code>SHOW COLUMNS FROM tbl_name;</code></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+----------+------------------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type                   | Null | Key | Default | Extra          |</span><br><span class="line">+----------+------------------------+------+-----+---------+----------------+</span><br><span class="line">| id       | int(10) unsigned       | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(20)            | NO   | UNI | NULL    |                |</span><br><span class="line">| password | char(32)               | NO   |     | NULL    |                |</span><br><span class="line">| email    | varchar(50)            | NO   | UNI | NULL    |                |</span><br><span class="line">| age      | tinyint(3) unsigned    | NO   |     | 18      |                |</span><br><span class="line">| sex      | enum(<span class="string">'男'</span>,<span class="string">'女'</span>,<span class="string">'保密'</span>)  | NO   |     | 保密    |                |</span><br><span class="line">| tel      | char(11)               | NO   | UNI | NULL   |                |</span><br><span class="line">| addr     | varchar(50)            | NO   |     | 北京    |                |</span><br><span class="line">| card     | char(18)               | NO   | UNI | NULL    |                |</span><br><span class="line">| married  | tinyint(1)             | NO   |     | 0       |                |</span><br><span class="line">| salary   | <span class="built_in">float</span>(8,2)             | NO   |     | 0.00    |                |</span><br><span class="line">+----------+------------------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><ol start="5"><li>删除指定的数据表<br><code>DROP TABLE [IF EXISTS] tbl_name;</code></li></ol><h3 id="表结构相关操作"><a href="#表结构相关操作" class="headerlink" title="表结构相关操作"></a>表结构相关操作</h3><p>add | drop | modify | change | set default | add/drop primary key |  add/drop unique |rename</p><ol><li>添加字段<br><code>ALTER TABLE tbl_name</code><br><code>ADD 字段名称 字段属性 [完整性约束条件] [FIRST|AFTER 字段名称]</code></li><li>删除字段<br><code>ALTER TABLE tbl_name</code><br><code>DROP 字段名称</code></li><li>添加默认值<br><code>ALTER TABLE tbl_name</code><br><code>ALTER 字段名称 SET DEFAULT 默认值;</code></li><li>删除默认值<br><code>ALTER TABLE tbl_name</code><br><code>ALTER 字段名称 DROP DEFAULT</code></li><li>修改字段类型、字段属性<br><code>ALTER TABLE tbl_name</code><br><code>MODIFY 字段名称 字段类型 [字段属性] [FIRST | AFTER 字段名称]</code></li><li>修改字段名称、字段类型、字段属性<br><code>ALTER TABLE tbl_name</code><br><code>CHANGE 原字段名称 新字段名称 字段类型 字段属性 [FIRST | AFTER 字段名称]</code></li><li>添加主键<br><code>ALTER TABLE tbl_name</code><br><code>ADD PRIMARY KEY(字段名称)</code></li><li>删除主键<br><code>ALTER TABLE tbl_name</code><br><code>DROP PRIMARY KEY;</code></li><li>添加唯一<br><code>ALTER TABLE tbl_name</code><br><code>ADD UNIQUE KEY|INDEX [index_name] (字段名称)</code></li><li>删除唯一<br><code>ALTER TABLE tbl_name</code><br><code>DROP index_name;</code></li><li>修改数据表名称<br><code>ALTER TABLE tbl_name</code><br><code>RENAME [TO|AS] new_tbl_name</code><br><code>RENAME TABLE tbl_name TO new_tbl_name;</code></li><li>修改AUTO_INCREMENT的值<br><code>ALTER TABLE tbl_name AUTO_INCREMENT=值</code></li></ol><h2 id="数据内容相关操作"><a href="#数据内容相关操作" class="headerlink" title="数据内容相关操作"></a>数据内容相关操作</h2><h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><p><code>INSERT [INTO] tbl_name[(col_name,...)] {VALUE|VALUES}(VALUES...);</code></p><ul><li>不指定字段名称，需要按照建表时的字段顺序给每一个字段赋值<br><code>INSERT tbl_name VALUE(value...)</code></li><li>列出指定字段<br><code>INSERT tbl_name(字段名称,...) VALUES(值,...)</code></li><li>INSERT … SET的形式<br><code>INSERT tbl_name SET 字段名称=值,...;</code></li><li>INSERT … SELECT<br><code>INSERT tbl_name[(字段名称...)] SELECT 字段名称,... FROM  tbl_name [WHERE 条件]</code></li><li><p>一次添加多条记录<br><code>INSERT tbl_name[(字段名称,...)] VALUES(VALUES,...),(VALUES,....),()...</code></p></li><li><p>示例</p></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 测试添加记录</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> kevin <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> <span class="string">'UTF8'</span>;</span><br><span class="line"><span class="keyword">USE</span> kevin;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="keyword">user</span>(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> AUTO_INCREMENT <span class="keyword">KEY</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'用户名'</span>,</span><br><span class="line">    age TINYINT <span class="keyword">UNSIGNED</span> <span class="keyword">DEFAULT</span> <span class="number">18</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">    email <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'xxxx@qq.com'</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span></span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">CHARSET</span>=UTF8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不指定字段名称</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span> <span class="keyword">VALUE</span>(<span class="number">1</span>,<span class="string">'kevin'</span>,<span class="number">24</span>,<span class="string">'420376@qq.com'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span> <span class="keyword">VALUES</span>(<span class="keyword">DEFAULT</span>,<span class="string">'hex'</span>,<span class="number">26</span>,<span class="string">'hex@qq.com'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列出指定字段的形式</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span>(username,email) <span class="keyword">VALUES</span>(<span class="string">'rose'</span>,<span class="string">'rose@qq.com'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span>(age,email,<span class="keyword">id</span>,username) <span class="keyword">VALUES</span>(<span class="number">34</span>,<span class="string">'xxxx@qq.com'</span>,<span class="number">5</span>,<span class="string">'xxxx'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 一次插入3条记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span> <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'a'</span>,<span class="keyword">DEFAULT</span>,<span class="keyword">DEFAULT</span>),</span><br><span class="line">(<span class="literal">NULL</span>,<span class="string">'b'</span>,<span class="number">56</span>,<span class="string">'b@qq.com'</span>),</span><br><span class="line">(<span class="literal">NULL</span>,<span class="string">'c'</span>,<span class="number">14</span>,<span class="string">'c@qq.com'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- INSERT ...SET 的形式</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span> <span class="keyword">SET</span> username=<span class="string">'d'</span>,age=<span class="number">45</span>,email=<span class="string">'d@qq.com'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- INSERT SELECT</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">user</span>(username) <span class="keyword">SELECT</span> a <span class="keyword">FROM</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><code>DELETE FROM tbl_name [WHERE 条件]</code><br>如果不添加条件，表中所有记录都会被删除<br>DELETE 清空数据表的时候不会重置AUTO_INCREMENT的值，可以通过ALTER 语句将其重置为1</p><p><code>TRUNCATE [TABLE] tbl_name;</code><br>清除表中所有记录<br>会重置AUTO_INCREMENT的值</p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 测试删除语句</span></span><br><span class="line"><span class="comment">-- 删除用户名</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> username=<span class="string">'kevin'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除年龄为24的用户</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> age=<span class="number">24</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表中所有记录</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p><code>UPDATE tbl_name SET 字段名称=值,字段名称=值 [WHERE 条件]</code><br>如果不添加条件，整个表中的记录都会被更新</p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 测试修改语句</span></span><br><span class="line"><span class="comment">-- 修改第一个用户的信息 id=1</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> age=<span class="number">29</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 所有用户年龄+10</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> age=age+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将id&lt;=5的用户年龄改为-20，将邮箱改为默认值</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">user</span> <span class="keyword">SET</span> age=age<span class="number">-20</span>,email=<span class="keyword">DEFAULT</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>&lt;=<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="查询（重点）"><a href="#查询（重点）" class="headerlink" title="查询（重点）"></a>查询（重点）</h3><p><code>SELECT select_expr,... FROM tbl_name [WHERE 条件] [GROUP BY {col_name|position} HAVING 二次筛选] [ORDER BY {col_name|position|expr} [ASC|DESC]] [LIMIT 限制结果集的显示条数]</code></p><p>查询表中所有记录<br><code>SELECT * FROM tbl_name;</code><br>指定字段的信息<br><code>SELECT 字段名称,... FROM tbl_name</code><br>库名.表名<br><code>SELECT 字段名称,... FROM db_name.tbl_name;</code><br>给字段起别名<br><code>SELECT 字段名称 [AS] 别名名称,... FROM db_name.tbl_name;</code><br>给数据表起别名<br><code>SELECT 字段名称 ,... FROM tbl_name [AS] 别名;</code><br>表名.字段名的<br><code>SELECT tbl_name.col_name,... FROM tbl_name;</code></p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有记录</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- username,addr,age</span></span><br><span class="line"><span class="keyword">SELECT</span> username,addr,age <span class="keyword">FROM</span> user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数据库下user1表中的所有记录</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> kevin.user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询user1表中的id 编号 username 用户名 sex 性别</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">AS</span> <span class="string">'编号'</span>,username <span class="keyword">AS</span> <span class="string">'用户名'</span>, sex <span class="keyword">AS</span> <span class="string">'性别'</span></span><br><span class="line"><span class="keyword">FROM</span> user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给表起别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username <span class="keyword">FROM</span> user1 <span class="keyword">AS</span> u;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找表名中的字段名</span></span><br><span class="line"><span class="keyword">SELECT</span> user1.id,user1.username,user1.age <span class="keyword">FROM</span> user1 ;</span><br><span class="line"><span class="keyword">SELECT</span> u.id,u.username,u.addr,u.sex <span class="keyword">FROM</span> user1 <span class="keyword">AS</span> u;</span><br></pre></td></tr></table></figure><h4 id="where条件"><a href="#where条件" class="headerlink" title="where条件"></a>where条件</h4><p><code>&gt; &gt;= &lt; &lt;= != &lt;&gt; &lt;=&gt;</code> 比较运算符<br><code>IS [NOT] NULL</code>  检测值是否为NULL或者NOT NULL<br><code>[NOT] BETWEEN ... AND</code>  指定范围<br><code>[NOT] IN(值,...)</code>  指定集合<br><code>[NOT] LIKE</code>  匹配字符<br><code>% %</code> 任意长度的字符串<br><code>___</code>  任意一个字符</p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,userDesc <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> userDesc&lt;=&gt;<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,userDesc <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> userDesc <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">18</span> <span class="keyword">AND</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询编号为1,3,5,7,9</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">29</span>,<span class="number">45</span>,<span class="number">78</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> sex=<span class="string">'男'</span> <span class="keyword">AND</span> age&gt;=<span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex,salary,addr <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> <span class="number">60000</span> <span class="keyword">AND</span> <span class="number">100000</span> <span class="keyword">AND</span> sex=<span class="string">'男'</span> <span class="keyword">AND</span> addr=<span class="string">'北京'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">OR</span> username=<span class="string">'kevin'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">'%in%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">'___'</span>;</span><br></pre></td></tr></table></figure><h4 id="group-by-分组"><a href="#group-by-分组" class="headerlink" title="group by 分组"></a>group by 分组</h4><ol><li>GROUP_CONCAT()查看组中某个字段的详细信息</li><li>配合聚合函数使用<br>COUNT()  //统计记录总数。如果写的是COUNT(字段名称)，字段中的值为NULL，不统计进来，写COUNT(*)会统计NULL值<br>SUM()  //求和<br>MAX()  //求最大值<br>MIN()  //求最小值<br>AVG()  //求平均值</li><li>配合<code>WITH ROLLUP</code>关键使用,会在记录末尾添加一条记录，是上面所有记录的总和</li><li><code>HAVING</code>子句对分组结果进行二次筛选</li></ol><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 按照性别分组sex</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照addr分组</span></span><br><span class="line"><span class="keyword">SELECT</span> username,age,sex,addr <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照性别分组，查询组中的用户名有哪些</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">GROUP_CONCAT</span>(username),age,sex,addr <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试COUNT()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">id</span>) <span class="keyword">FROM</span> user1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照sex分组，得到用户名详情，并且计算组中的总人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照addr分组，得到用户名的详情，总人数，得到组中年龄的总和，年龄的最大值、最小值、平均值</span></span><br><span class="line"><span class="keyword">SELECT</span> addr,</span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers,</span><br><span class="line"><span class="keyword">SUM</span>(age) <span class="keyword">AS</span> sum_age,</span><br><span class="line"><span class="keyword">MAX</span>(age) <span class="keyword">AS</span> max_age,</span><br><span class="line"><span class="keyword">MIN</span>(age) <span class="keyword">AS</span> min_age,</span><br><span class="line"><span class="keyword">AVG</span>(age) <span class="keyword">AS</span> avg_age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sex</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照字段的位置来分组</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,sex,</span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers,</span><br><span class="line"><span class="keyword">SUM</span>(salary) <span class="keyword">AS</span> sum_salary,</span><br><span class="line"><span class="keyword">MAX</span>(salary) <span class="keyword">AS</span> max_salary,</span><br><span class="line"><span class="keyword">MIN</span>(salary) <span class="keyword">AS</span> min_salary,</span><br><span class="line"><span class="keyword">AVG</span>(salary) <span class="keyword">AS</span> avg_salary</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询age&gt;=30的用户并且按照sex分组</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age&gt;=<span class="number">30</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对于分组结果进行二次筛选，条件是组中总人数&gt;=3</span></span><br><span class="line"><span class="keyword">SELECT</span> addr,</span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> addr</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*)&gt;=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 要求平均薪水&gt;=40000</span></span><br><span class="line"><span class="keyword">SELECT</span> addr,</span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(username) <span class="keyword">AS</span> usersDetail,</span><br><span class="line"><span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> totalUsers,</span><br><span class="line"><span class="keyword">SUM</span>(salary) <span class="keyword">AS</span> sum_salary,</span><br><span class="line"><span class="keyword">MAX</span>(salary) <span class="keyword">AS</span> max_salary,</span><br><span class="line"><span class="keyword">MIN</span>(salary) <span class="keyword">AS</span> min_salary,</span><br><span class="line"><span class="keyword">AVG</span>(salary) <span class="keyword">AS</span> avg_salary</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> addr</span><br><span class="line"><span class="keyword">HAVING</span> avg_salary&gt;=<span class="number">40000</span>;</span><br></pre></td></tr></table></figure><h4 id="order-by-排序"><a href="#order-by-排序" class="headerlink" title="order by 排序"></a>order by 排序</h4><p>ORDER BY 字段名称 ASC|DESC</p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 按照id降序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照age升序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照多个字段排序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">ASC</span>,<span class="keyword">id</span> <span class="keyword">ASC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试条件+排序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">WHERE</span> age&gt;=<span class="number">30</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现随机记录</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">RAND</span>();</span><br></pre></td></tr></table></figure><h4 id="LIMIT-限制结果集显示条数"><a href="#LIMIT-限制结果集显示条数" class="headerlink" title="LIMIT 限制结果集显示条数"></a>LIMIT 限制结果集显示条数</h4><p>LIMIT 值<br>显示结果集的前几条记录<br>LIMIT offset,row_count<br>从offset开始，显示几条记录,offset从0开始</p><ul><li>示例</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 显示结果集的前5条记录</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>,username,age,sex</span><br><span class="line"><span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 更新前3条记录，将age+5</span></span><br><span class="line"><span class="keyword">UPDATE</span> user1 <span class="keyword">SET</span> age=age+<span class="number">5</span> <span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照id降序排列，更新前三条记录，将age-10</span></span><br><span class="line"><span class="keyword">UPDATE</span> user1 <span class="keyword">SET</span> age=age<span class="number">-10</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除前三条记录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> user1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><ol><li>笛卡尔积的形式</li><li>内连接的形式<br><code>SELECT 字段名称,... FROM tbl_name1 INNER JOIN tbl_name2 ON 连接条件</code>  //查询两个表中符合连接条件的记录</li><li>外连接的形式</li></ol><ul><li>左外连接<br><code>SELECT 字段名称,... FROM tbl_name1 LEFT OUTER JOIN tbl_name2 ON 条件;</code><br>左表为主表，先显示左表中的全部记录，再去右表中查询复合条件的记录，不符合的以NULL代替</li><li><p>右外连接<br><code>SELECT 字段名称,... FROM tbl_name1 RIGHT [OUTER] JOIN tbl_name2 ON 条件;</code><br>右表为主表，先显示右表中的全部记录，再去左表中查询复合条件的记录，不符合的以NULL代替</p></li><li><p>示例</p></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询emp id username age addr dep id depName depDesc</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.username,e.age,e.addr,</span><br><span class="line">d.id,d.depName,d.depDesc</span><br><span class="line"><span class="keyword">FROM</span> dep <span class="keyword">AS</span> d</span><br><span class="line"><span class="keyword">JOIN</span> emp <span class="keyword">AS</span> e</span><br><span class="line"><span class="keyword">ON</span> d.id=e.depId;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.username,e.age,d.depName,d.depDesc</span><br><span class="line"><span class="keyword">FROM</span> emp <span class="keyword">AS</span> e</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dep <span class="keyword">AS</span> d</span><br><span class="line"><span class="keyword">ON</span> e.depId=d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 测试右外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.username,e.age,d.depName,d.depDesc</span><br><span class="line"><span class="keyword">FROM</span> emp <span class="keyword">AS</span> e</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> dep <span class="keyword">AS</span> d</span><br><span class="line"><span class="keyword">ON</span> e.depId=d.id;</span><br></pre></td></tr></table></figure><h3 id="外键约束-loading…"><a href="#外键约束-loading…" class="headerlink" title="外键约束(loading…)"></a>外键约束(loading…)</h3><p><strong>只有InnoDB存储引擎支持外键</strong></p><ol><li>建表时指定外键<br><code>[CONSTRAINT 外键名称 ]FOREIGN KEY(字段名称) REFERENCES 主表(字段名称)</code><br>子表的外键字段和主表的主键字段类型要相似；如果是数值型要求一致，并且无符号也要一致；如果是字符型，要求类型一致，长度可以不同<br>如果外键字段没有创建索引，MySQL会自动帮我们添加索引<br>子表的外键关联的必须是父表的主键</li></ol><ul><li>外键约束的参照操作<br>CASCADE  从附表删除或更新，子表也跟着删除或者更新，级联的操作<br>SET NULL  从附表删除或者更新记录，并设置子表的外键列为NULL。<br>NO ACTION | RESTRICT  拒绝对父表做更新或者删除操作</li></ul><ol start="2"><li>动态添加外键<br><code>ALTER TABLE tbl_name [CONSTRAINT 外键名称] ADD FOREIGN KEY(外键字段) REFERENCES 主表(主键字段);</code><br>动态添加外键之前表中的记录一定合法的记录，没有脏值，否则外键添加不成功</li><li>动态删除外键<br><code>ALTER TABLE tbl_name DROP FOREIGN KEY fk_name;</code></li></ol><h3 id="特殊形式查询-loading…"><a href="#特殊形式查询-loading…" class="headerlink" title="特殊形式查询(loading…)"></a>特殊形式查询(loading…)</h3><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><p><code>SELECT 字段名称 FROM tbl_name WHERE col_name=(SELECT col_name FROM tbl_name)</code></p><h4 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h4><ol><li>UNION<br><code>SELECT 字段名称,... FROM tbl_name1 UNION SELECT 字段名称... FROM tbl_name2;</code></li><li>UNION ALL<br><code>SELECT 字段名称,... FROM tbl_name1 UNION ALL SELECT 字段名称... FROM tbl_name2;</code><br>UNION ALL 是简单的合并，UNION会去掉表中重复记录</li></ol><h4 id="自身连接查询"><a href="#自身连接查询" class="headerlink" title="自身连接查询"></a>自身连接查询</h4><h4 id="正则表达式查询"><a href="#正则表达式查询" class="headerlink" title="正则表达式查询"></a>正则表达式查询</h4><p><code>^</code> 匹配字符串开始的部分<br><code>$</code> 匹配字符串结束部分<br><code>.</code> 代表一个任意字符<br><code>[字符集合]</code> [abc] [a-z] [0-9]<br><code>[^字符集合]</code> 除了集合中的内容<br><code>s1|s2|s3</code> 匹配s1或者s2或者s3<br><code>*</code> 代表匹配前面的字符0次1次或者多次<br><code>+</code> 代表匹配前面的字符至少出现1次<br><code>字符{n}</code> 前面的字符正好出现n次<br><code>字符{m,n}</code> 前面的字符至少出现m次，最多出现n次</p><h2 id="其它注意事项"><a href="#其它注意事项" class="headerlink" title="其它注意事项"></a>其它注意事项</h2><p>SQL语句语法规范</p><ul><li>常用MySQL的关键字我们需要大写，库名、表名、字段名称等使用小写</li><li>SQL语句支持折行操作，拆分的时候不能把完整单词拆开</li><li><p>数据库名称、表名称、字段名称不要使用MySQL的保留字，如果必须要使用，需要用反引号<code></code>将其括起来</p></li><li><p>创建的数据库名称最好有意义，名称不要包含特殊字符或者是MySQL关键字</p></li></ul><p>常用SQL语句</p><ul><li>SHOW WARNINGS;  //查看上一步操作产生的警告信息</li><li>CHECK TABLE tbl_name  //检测表</li><li>REPAIR TABLE tbl_name  //修复表</li></ul><hr><p>相关链接：<br><a href="https://hyqskevin.github.io/2019/01/21/php-notes2/">PHP &amp; MySQL learning notes (3)</a><br><a href="https://hyqskevin.github.io/2019/01/21/php-notes/">PHP &amp; MySQL learning notes (2)</a><br><a href="https://hyqskevin.github.io/2018/10/28/w3school-php/">PHP &amp; MySQL learning notes (1)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-基础笔记-&lt;br&gt;二次回顾，学校课程 + 慕课网 MySQL 详细学习笔记&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="mysql" scheme="https://hyqskevin.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>move to windows</title>
    <link href="https://hyqskevin.github.io/2019/02/14/move-to-windows/"/>
    <id>https://hyqskevin.github.io/2019/02/14/move-to-windows/</id>
    <published>2019-02-14T07:43:08.000Z</published>
    <updated>2019-02-19T02:14:32.480Z</updated>
    
    <content type="html"><![CDATA[<p>由于archlinux上出现了一些bug，而且因为跑SLAM，安装包占去了过多存储空间，临时决定将blog移植到Windows上来方便经常更新。<br><a id="more"></a></p><h2 id="install-necessary-modules"><a href="#install-necessary-modules" class="headerlink" title="install necessary modules"></a>install necessary modules</h2><ul><li>download <strong><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a></strong> and install</li><li>download <strong><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a></strong> and install</li><li>Win+R open cmd to the right direction</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir blog</span><br><span class="line">$ npm install hexo -g</span><br><span class="line">$ hexo -v  //check info</span><br><span class="line">$ npm install  //install necessary components</span><br><span class="line">$ hexo init  //initialize folder</span><br><span class="line">$ hexo g  //Start processing</span><br></pre></td></tr></table></figure><ul><li>related modules</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install  //install necessary components</span><br><span class="line">$ npm install hexo-deployer-git --save  // deploy to git</span><br><span class="line">$ npm install hexo-generator-feed --save  // build RSS</span><br><span class="line">$ npm install hexo-generator-sitemap --save // build sitemap</span><br></pre></td></tr></table></figure><h2 id="add-ssh-key"><a href="#add-ssh-key" class="headerlink" title="add ssh key"></a>add ssh key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your email address"</span></span><br><span class="line">$ cat /home/xxx/.ssh/id_rsa.pub  //check your key</span><br></pre></td></tr></table></figure><ul><li><strong>load key to Github (default on Github &amp; default you can use Github)</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="set-id-amp-email"><a href="#set-id-amp-email" class="headerlink" title="set id &amp; email"></a>set id &amp; email</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"your id"</span></span><br><span class="line">$ git config --global user.email <span class="string">"your email"</span></span><br></pre></td></tr></table></figure><h2 id="copy-previous-files"><a href="#copy-previous-files" class="headerlink" title="copy previous files"></a>copy previous files</h2><ul><li>copy source files to the new catalog (as follows)<ul><li><code>_config.yml package.json node_modules scaffolds source themes</code></li></ul></li><li>type <code>hexo s</code> to check</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于archlinux上出现了一些bug，而且因为跑SLAM，安装包占去了过多存储空间，临时决定将blog移植到Windows上来方便经常更新。&lt;br&gt;
    
    </summary>
    
      <category term="others" scheme="https://hyqskevin.github.io/categories/others/"/>
    
    
      <category term="hexo" scheme="https://hyqskevin.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>PHP &amp; MySQL learning notes (3)</title>
    <link href="https://hyqskevin.github.io/2019/01/21/php-notes2/"/>
    <id>https://hyqskevin.github.io/2019/01/21/php-notes2/</id>
    <published>2019-01-21T09:00:40.000Z</published>
    <updated>2019-02-25T11:21:03.981Z</updated>
    
    <content type="html"><![CDATA[<p>-基础笔记-<br>慕课网 PHP基础语法巩固(2) 课堂笔记，包含会话，文件，数据库操作等细碎的摘要</p><a id="more"></a><h2 id="会话控制"><a href="#会话控制" class="headerlink" title="会话控制"></a>会话控制</h2><h3 id="session"><a href="#session" class="headerlink" title="session"></a>session</h3><p>HTTP是无状态协议，HTTP不知道请求来自哪个客户端，Session提供在PHP脚本中定义全局变量的方法，使全局变量在同一个Session中对<strong>所有的PHP脚本文件内</strong>都有效,解决HTTP断链接的问题<br>Session可以减轻服务器压力，缺点在于每次请求会传输大量重复的信息<br>Session允许通过将数据存储在HTTP服务器中，使得用户在回话过程中保持该数据</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = <span class="string">'info'</span></span><br></pre></td></tr></table></figure><img src="https://hyqskevin.github.io/pic/session.png" class="[Session的工作原理]"><p>每一次请求有SessionID区分不同的信息，SessionID存储到cookie中，Session数据通过变量<code>$_SESSION</code>存储到Session文件中</p><p>SessionID：</p><ol><li>PHP回话启用</li><li>检查SessionID，如果没有启动新会话 + SessionID</li><li>一直使用的SessionID相同，默认会话在活动，超过一定时间则视为过期</li><li>默认情况下SessionID存在Cookie中，也可以存在URL中</li></ol><p>Session函数：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">bool session_start()  <span class="comment">//启动新会话或重用现有会话</span></span><br><span class="line">string session_id(string $id)  <span class="comment">//获取/设置当前会话的id</span></span><br><span class="line">string session_name(string $name)  <span class="comment">//读取/设置会话名称</span></span><br><span class="line">bool session_destroy(void) <span class="comment">//销毁一个会话中的全部数据</span></span><br><span class="line"></span><br><span class="line">session.auto_start(bool)  <span class="comment">//指定会话模块在请求开始时自动启动</span></span><br><span class="line">session.name(string)  <span class="comment">//指定会话名用作cookie名字</span></span><br><span class="line">session.save_handler(string)  <span class="comment">//定义用来存储和获取与会话关联的数据处理器的名字</span></span><br><span class="line">session.save_path(string)  <span class="comment">//定义传递给存储处理器的参数</span></span><br><span class="line">session.gc_maxlifetime(int)  <span class="comment">//指定数据存在时长</span></span><br><span class="line">session.gc_probability(int)  <span class="comment">//定义在会话初始化时启动垃圾回收进程的概率</span></span><br></pre></td></tr></table></figure><ul><li>必须在session_start()函数之前调用session_name()函数</li><li>垃圾回收进程概率计算：gc_probability/gc_divisor</li></ul><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>cookie是服务器发送到用户浏览器上并保存在浏览器里的数据，会在浏览器下一次请求时一起发送到服务器上</p><p><strong>session是存储在客户端的数据</strong><br><strong>cookie是存储在服务器端的数据</strong></p><p>cookie的用途：<br>会话状态管理，个性化设置，浏览器行为跟踪</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">bool setcookie(string $name,string $value,[$expire,$path,$domain])  <span class="comment">//名称，值，生命周期，路径，域名范围</span></span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><ul><li>文件信息相关</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">filetype($filename);  <span class="comment">//获取文件的类型；返回的是文件的类型，可能的值有 fifo，char，dir，block，link，file 和 unknown。如果 stat 调用失败或者文件类型未知的话 filetype() 还会产生一个 E_NOTICE 消息。</span></span><br><span class="line">filesize($filename);  <span class="comment">//获取文件的大小；返回的是字节数。如果出错返回 FALSE 并生成一条 E_WARNING 级的错误。</span></span><br><span class="line">filectime($filename);  <span class="comment">//获取文件的创建时间；返回的是时间戳。在失败时返回 FALSE。 时间以 Unix 时间戳的方式返回。</span></span><br><span class="line">filemtime($filename);  <span class="comment">//获取文件的修改时间；返回的是时间戳。在失败时返回 FALSE。</span></span><br><span class="line">fileatime($filename);  <span class="comment">//获取文件的最后访问时间；返回的是时间戳。在失败时返回 FALSE。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以使用date()函数修改日期和时区；</span></span><br><span class="line">date_default_timezone_set(<span class="string">'PRC'</span>);</span><br><span class="line">date(<span class="string">'Y-m-d H:i:s'</span>,filectime($filename));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_readable($filename);  <span class="comment">//检测文件是否可读；返回布尔值</span></span><br><span class="line">is_writable($filename)/is_writeable($filename);  <span class="comment">//检测文件是否可写；返回布尔值</span></span><br><span class="line">is_executable($filename);  <span class="comment">//检测文件是否可执行；返回布尔值</span></span><br><span class="line">is_file($filename);  <span class="comment">//检测是否为文件；返回布尔值</span></span><br></pre></td></tr></table></figure><ul><li>文件路经相关</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">pathinfo($filename, $options);  <span class="comment">//获取文件路径相关信息；返回一个关联数组，包含有 path 的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//options如果指定了，将会返回指定元素；它们包括：PATHINFO_DIRNAME，PATHINFO_BASENAME 和 PATHINFO_EXTENSION 或 PATHINFO_FILENAME。</span></span><br><span class="line"></span><br><span class="line">dirname($path);  <span class="comment">//返回文件中的路径部分</span></span><br><span class="line">basename($filename,$suffix);  <span class="comment">//返回路径文件名部分；</span></span><br><span class="line">file_exists($filename);  <span class="comment">//检测文件或者目录是否存在；返回布尔值</span></span><br></pre></td></tr></table></figure><ul><li>文件操作相关</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">touch($filename，$time,$atime);   <span class="comment">//设定文件的访问和修改时间，如果文件不存在，则会创建文件；返回布尔值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//time: 使用当前系统的时间。</span></span><br><span class="line"><span class="comment">//atime: 访问时间会被设为 atime，</span></span><br><span class="line"></span><br><span class="line">unlink($filename,$context);  <span class="comment">//删除文件；返回布尔值；</span></span><br><span class="line">rename($oldname,$newname，$path);  <span class="comment">//重命名或者剪切(给剪切path)一个文件或目录;返回布尔值；</span></span><br><span class="line">copy($filename);  <span class="comment">//拷贝一个文件或者目录；返回布尔值；</span></span><br></pre></td></tr></table></figure><ul><li>文件内容操作相关</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$handle = fopen($filename, r|r+|w|...)  <span class="comment">//打开指定文件</span></span><br><span class="line">fread($handle, $size) <span class="comment">//读取文件内容</span></span><br><span class="line">fwrite($handle, <span class="string">'info'</span>,$size)|fput()  <span class="comment">//写入内容,之前有内容会覆盖</span></span><br><span class="line"></span><br><span class="line">ftell($handle)  <span class="comment">//读取指针位置</span></span><br><span class="line">fseek($handle,$size)  <span class="comment">//移动指针的位置</span></span><br><span class="line">fpassthru()  <span class="comment">//输出文件指针处的所有剩余数据</span></span><br><span class="line">rewind($handle) <span class="comment">//重置文件指针</span></span><br><span class="line">ftruncate($handle,$size)  <span class="comment">//将文件截断到指定长度</span></span><br><span class="line"></span><br><span class="line">fgetc($handle)  <span class="comment">//读取一个字符</span></span><br><span class="line">fgets($handle)  <span class="comment">//读取一行字符</span></span><br><span class="line">fgetss($handle)  <span class="comment">//读取一行并过滤掉 HTML 标记</span></span><br><span class="line">fgetcsv()  <span class="comment">//从文件指针中读入一行并解析 CSV 字段</span></span><br><span class="line">fputcsv()  <span class="comment">//将行格式化为 CSV 并写入文件指针</span></span><br><span class="line">file_get_contents()  <span class="comment">//将整个文件读入一个字符串</span></span><br><span class="line">file_put_contents()  <span class="comment">//将一个字符串写入文件，和依次调用 fopen()，fwrite() 以及 fclose() 功能一样。</span></span><br><span class="line">file()  <span class="comment">//把整个文件读入一个数组中</span></span><br><span class="line">readfile()  <span class="comment">//读取文件并写入到输出缓冲</span></span><br><span class="line"></span><br><span class="line">feof($handle)  <span class="comment">//测试文件指针是否到了文件结束的位置</span></span><br><span class="line">fclose()  <span class="comment">//关闭文件</span></span><br><span class="line"></span><br><span class="line">parse_ini_file($filename)  <span class="comment">//解析一个配置文件</span></span><br><span class="line">parse_ini_string($ini)  <span class="comment">//解析配置字符串</span></span><br><span class="line">highlight_string($str)  <span class="comment">//字符串的语法高亮</span></span><br><span class="line">highlight_file()  <span class="comment">//语法高亮一个文件</span></span><br></pre></td></tr></table></figure><p>‘r’：只读方式打开，将文件指针指向文件头。<br>‘r+’：读写方式打开，将文件指针指向文件头。<br>‘w’：写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。<br>‘w+’：读写方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创建之。<br>‘a’：写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。<br>‘a+’：读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创建之。<br>‘x’：创建并以写入方式打开，将文件指针指向文件头。如果文件已存在，则 fopen() 调用失败并返回 FALSE，并生成一条 E_WARNING 级别的错误信息。如果文件不存在则尝试创建之。这和给 底层的 open(2) 系统调用指定 O_EXCL|O_CREAT 标记是等价的。<br>‘x+’：创建并以读写方式打开，其他的行为和 ‘x’ 一样。</p><h3 id="函数和类的封装"><a href="#函数和类的封装" class="headerlink" title="函数和类的封装"></a>函数和类的封装</h3><ul><li>创建文件<ul><li>可以用touch()创建，也可以直接file_get_contents()</li></ul></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_file</span><span class="params">(string $filename)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测文件是否存在，不存在则创建</span></span><br><span class="line">  <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检测目录是否存在，不存在则创建</span></span><br><span class="line">  <span class="keyword">if</span>(!file_exists(dirname($filename)))&#123;</span><br><span class="line">    <span class="comment">//创建目录，可以创建多级</span></span><br><span class="line">    mkdir(dirname($filename),<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// if(touch($filename))&#123;</span></span><br><span class="line">  <span class="comment">//   return true;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// return false;</span></span><br><span class="line">  <span class="keyword">if</span>(file_put_contents($filename,<span class="string">''</span>)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>删除文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del_file</span><span class="params">(string $filename)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测删除的文件是否存在,并且是否有权限操作</span></span><br><span class="line">  <span class="keyword">if</span>(!file_exists($filename)||!is_writable($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(unlink($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拷贝文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy_file</span><span class="params">(string $filename,string $dest)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测$dest是否是目标并且这个目录是否存在，不存在则创建</span></span><br><span class="line">  <span class="keyword">if</span>(!is_dir($dest))&#123;</span><br><span class="line">    mkdir($dest,<span class="number">0777</span>,<span class="keyword">true</span>);  <span class="comment">//0777为权限</span></span><br><span class="line">  &#125;</span><br><span class="line">  $destName=$dest.DIRECTORY_SEPARATOR.basename($filename);</span><br><span class="line">  <span class="comment">//检测目标路径下是否存在同名文件</span></span><br><span class="line">  <span class="keyword">if</span>(file_exists($destName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//拷贝文件</span></span><br><span class="line">  <span class="keyword">if</span>(copy($filename,$destName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重命名文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rename_file</span><span class="params">(string $oldName,string $newName)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测原文件并且存在</span></span><br><span class="line">  <span class="keyword">if</span>(!is_file($oldName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//得到原文件所在的路径</span></span><br><span class="line">  $path=dirname($oldName);</span><br><span class="line">  $destName=$path.DIRECTORY_SEPARATOR.$newName;</span><br><span class="line">  <span class="comment">//路径下有文件名，重命名失败</span></span><br><span class="line">  <span class="keyword">if</span>(is_file($destName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(rename($oldName,$newName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>剪切文件</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cut_file</span><span class="params">(string $filename,string $dest)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检查文件和路径是否都存在</span></span><br><span class="line">  <span class="keyword">if</span>(!is_file($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(!is_dir($dest))&#123;</span><br><span class="line">    mkdir($dest,<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $destName=$dest.DIRECTORY_SEPARATOR.basename($filename);</span><br><span class="line">  <span class="keyword">if</span>(is_file($destName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(rename($filename,$destName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>返回文件信息</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file_info</span><span class="params">(string $filename)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检查文件存在且可读</span></span><br><span class="line">  <span class="keyword">if</span>(!is_file($filename)||!is_readable($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'atime'</span>=&gt;date(<span class="string">"Y-m-d H:i:s"</span>,fileatime($filename)),</span><br><span class="line">    <span class="string">'mtime'</span>=&gt;date(<span class="string">"Y-m-d H:i:s"</span>,filemtime($filename)),</span><br><span class="line">    <span class="string">'ctime'</span>=&gt;date(<span class="string">"Y-m-d H:i:s"</span>,filectime($filename)),</span><br><span class="line">    <span class="string">'size'</span>=&gt;trans_byte(filesize($filename)),</span><br><span class="line">    <span class="string">'type'</span>=&gt;filetype($filename)</span><br><span class="line">  ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>字节转换</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trans_byte</span><span class="params">(int $byte,int $precision=<span class="number">2</span>)</span></span>&#123;</span><br><span class="line">  $kb=<span class="number">1024</span>;</span><br><span class="line">  $mb=<span class="number">1024</span>*$kb;</span><br><span class="line">  $gb=<span class="number">1024</span>*$mb;</span><br><span class="line">  $tb=<span class="number">1024</span>*$gb;</span><br><span class="line">  <span class="keyword">if</span>($byte&lt;$kb)&#123;</span><br><span class="line">    <span class="keyword">return</span> $byte.<span class="string">'B'</span>;</span><br><span class="line">  &#125;<span class="keyword">elseif</span>($byte&lt;$mb)&#123;</span><br><span class="line">    <span class="keyword">return</span> round($byte/$kb,$precision).<span class="string">'KB'</span>;</span><br><span class="line">  &#125;<span class="keyword">elseif</span>($byte&lt;$gb)&#123;</span><br><span class="line">    <span class="keyword">return</span> round($byte/$mb,$precision).<span class="string">'MB'</span>;</span><br><span class="line">  &#125;<span class="keyword">elseif</span>($byte&lt;$tb)&#123;</span><br><span class="line">    <span class="keyword">return</span> round($byte/$gb,$precision).<span class="string">'GB'</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> round($byte/$tb,$precision).<span class="string">'TB'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>读取文件内容返回字符串</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read_file</span><span class="params">(string $filename)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测是否是一个文件并且文件可读</span></span><br><span class="line">  <span class="keyword">if</span>(is_file($filename) &amp;&amp; is_readable($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> file_get_contents($filename);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>读取文件内容返回数组</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read_file_array</span><span class="params">(string $filename,bool $skip_empty_lines=false)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测是否是一个文件并且文件可读</span></span><br><span class="line">  <span class="keyword">if</span>(is_file($filename)&amp;&amp;is_readable($filename))&#123;</span><br><span class="line">    <span class="keyword">if</span>($skip_empty_lines)&#123;</span><br><span class="line">      <span class="comment">//如果有空行就过滤掉</span></span><br><span class="line">      <span class="keyword">return</span> file($filename,FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> file($filename);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>文件中写入内容</strong><ul><li>写入的内容是数组或者对象需要做<strong>序列化处理</strong></li></ul></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write_file</span><span class="params">(string $filename,$data)</span></span>&#123;</span><br><span class="line">  $dirname=dirname($filename);</span><br><span class="line">  <span class="comment">//检测目标路径是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(!file_exists($dirname))&#123;</span><br><span class="line">    mkdir($dirname,<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//判断内容是否是数组或者对象</span></span><br><span class="line">  <span class="keyword">if</span>(is_array($data)||is_object($data))&#123;</span><br><span class="line">    <span class="comment">//序列化数据</span></span><br><span class="line">    $data=serialize($data);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//向文件中写入内容</span></span><br><span class="line">  <span class="keyword">if</span>(file_put_contents($filename,$data)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>非空文件中写入内容</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write_file1</span><span class="params">(string $filename,$data,bool $clearFlag=false)</span></span>&#123;</span><br><span class="line">  $dirname=dirname($filename);</span><br><span class="line">  <span class="comment">//检测目标路径是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(!file_exists($dirname))&#123;</span><br><span class="line">    mkdir($dirname,<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检测文件是否存在并且可读</span></span><br><span class="line">  <span class="keyword">if</span>(is_file($filename)&amp;&amp;is_readable($filename))&#123;</span><br><span class="line">    <span class="comment">//读取文件内容，之后和新写入的内容拼装到一起</span></span><br><span class="line">    <span class="keyword">if</span>(filesize($filename)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">      $srcData=file_get_contents($filename);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//判断内容是否是数组或者对象</span></span><br><span class="line">  <span class="keyword">if</span>(is_array($data)||is_object($data))&#123;</span><br><span class="line">    <span class="comment">//序列化数据</span></span><br><span class="line">    $data=serialize($data);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//拼装到一起</span></span><br><span class="line">  $data=$srcData.$data;</span><br><span class="line">  <span class="comment">//向文件中写入内容</span></span><br><span class="line">  <span class="keyword">if</span>(file_put_contents($filename,$data)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>截断文件到指定大小</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">truncate_file</span><span class="params">(string $filename,int $length)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测是否是文件且可写</span></span><br><span class="line">  <span class="keyword">if</span>(is_file($filename)&amp;&amp;is_writable($filename))&#123;</span><br><span class="line">    $handle=fopen($filename,<span class="string">'r+'</span>);</span><br><span class="line">    $length=$length&lt;<span class="number">0</span>?<span class="number">0</span>:$length;</span><br><span class="line">    ftruncate($handle,$length);</span><br><span class="line">    fclose($handle);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>下载文件</strong><ul><li>在html里添加下载链接</li><li>建立<code>down_file()</code>函数</li><li>建立php文件进行下载</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"download.php?filename=download.zip"</span>&gt;</span>file_name.zip<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//$allowDownExt 允许下载的文件类型</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">down_file</span><span class="params">(string $filename,array $allowDownExt=array<span class="params">(<span class="string">'jpeg'</span>,<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>,<span class="string">'txt'</span>,<span class="string">'html'</span>,<span class="string">'php'</span>,<span class="string">'rar'</span>,<span class="string">'zip'</span>)</span>)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测下载文件是否存在，并且可读</span></span><br><span class="line">  <span class="keyword">if</span>(!is_file($filename)||!is_readable($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检测文件类型是否允许下载</span></span><br><span class="line">  $ext=strtolower(pathinfo($filename,PATHINFO_EXTENSION));</span><br><span class="line">  <span class="keyword">if</span>(!in_array($ext,$allowDownExt))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//通过header()发送头信息</span></span><br><span class="line">  <span class="comment">//告诉浏览器输出的是字节流</span></span><br><span class="line">  header(<span class="string">'Content-Type:application/octet-stream'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//告诉浏览器返回的文件大小是按照字节进行计算的</span></span><br><span class="line">  header(<span class="string">'Accept-Ranges: bytes'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//告诉浏览器返回的文件大小</span></span><br><span class="line">  header(<span class="string">'Accept-Length: '</span>.filesize($filename));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//告诉浏览器文件作为附件处理，告诉浏览器最终下载完的文件名称</span></span><br><span class="line">  header(<span class="string">'Content-Disposition: attachment;filename=king_'</span>.basename($filename));</span><br><span class="line"></span><br><span class="line">  <span class="comment">//读取文件中的内容</span></span><br><span class="line">  <span class="comment">//readfile($filename);</span></span><br><span class="line">  <span class="comment">//exit;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//规定每次读取文件的字节数为1024字节，直接输出数据</span></span><br><span class="line">  $read_buffer=<span class="number">1024</span>;</span><br><span class="line">  $sum_buffer=<span class="number">0</span>;</span><br><span class="line">  $handle=fopen($filename,<span class="string">'rb'</span>);</span><br><span class="line">  <span class="keyword">while</span>(!feof($handle) &amp;&amp; $sum_buffer&lt;$filesize)&#123;</span><br><span class="line">    <span class="keyword">echo</span> fread($handle,$read_buffer);</span><br><span class="line">    $sum_buffer+=$read_buffer;</span><br><span class="line">  &#125;</span><br><span class="line">  fclose($handle);</span><br><span class="line">  <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$filename=$_GET[<span class="string">'filename'</span>];</span><br><span class="line">down_file($filename);</span><br></pre></td></tr></table></figure><ul><li>单文件上传</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span><span class="params">(array $fileInfo,string $uploadPath=<span class="string">'./uploads'</span>,bool $imageFlag=true,array $allowExt=array<span class="params">(<span class="string">'jpeg'</span>,<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>)</span>,int $maxSize=<span class="number">2097152</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  define(<span class="string">'UPLOAD_ERRS'</span>,[</span><br><span class="line">    <span class="string">'upload_max_filesize'</span>=&gt;<span class="string">'超过了PHP配置文件中upload_max_filesize选项的值'</span>,</span><br><span class="line">    <span class="string">'form_max_size'</span>=&gt;<span class="string">'超过了表单MAX_FILE_SIZE选项的值'</span>,</span><br><span class="line">    <span class="string">'upload_file_partial'</span>=&gt;<span class="string">'文件部分被上传'</span>,</span><br><span class="line">    <span class="string">'no_upload_file_select'</span>=&gt;<span class="string">'没有选择上传文件'</span>,</span><br><span class="line">    <span class="string">'upload_system_error'</span>=&gt;<span class="string">'系统错误'</span>,</span><br><span class="line">    <span class="string">'no_allow_ext'</span>=&gt;<span class="string">'非法文件类型'</span>,</span><br><span class="line">    <span class="string">'exceed_max_size'</span>=&gt;<span class="string">'超出允许上传的最大值'</span>,</span><br><span class="line">    <span class="string">'not_true_image'</span>=&gt;<span class="string">'文件不是真实图片'</span>,</span><br><span class="line">    <span class="string">'not_http_post'</span>=&gt;<span class="string">'文件不是通过HTTP POST方式上传上来的'</span>,</span><br><span class="line">    <span class="string">'move_error'</span>=&gt;<span class="string">'文件移动失败'</span></span><br><span class="line">  ]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//检测是否上传是否有错误</span></span><br><span class="line">  <span class="keyword">if</span>($fileInfo[<span class="string">'error'</span>]===UPLOAD_ERR_OK)&#123;</span><br><span class="line">    <span class="comment">//检测上传文件类型</span></span><br><span class="line">    $ext=strtolower(pathinfo($fileInfo[<span class="string">'name'</span>],PATHINFO_EXTENSION));</span><br><span class="line">    <span class="keyword">if</span>(!in_array($ext,$allowExt))&#123;</span><br><span class="line">      <span class="keyword">echo</span>  UPLOAD_ERRS[<span class="string">'no_allow_ext'</span>];</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测上传文件大小是否符合规范</span></span><br><span class="line">    <span class="keyword">if</span>($fileInfo[<span class="string">'size'</span>]&gt;$maxSize)&#123;</span><br><span class="line">      <span class="keyword">echo</span> UPLOAD_ERRS[<span class="string">'exceed_max_size'</span>];</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测是否是真实图片</span></span><br><span class="line">    <span class="keyword">if</span>($imageFlag)&#123;</span><br><span class="line">      <span class="keyword">if</span>(@!getimagesize($fileInfo[<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> UPLOAD_ERRS[<span class="string">'not_true_image'</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测文件是否通过HTTP POST方式上传上来的</span></span><br><span class="line">    <span class="keyword">if</span>(!is_uploaded_file($fileInfo[<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">      <span class="keyword">return</span> UPLOAD_ERRS[<span class="string">'not_http_post'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测目标目录是否存在，不存在则创建</span></span><br><span class="line">    <span class="keyword">if</span>(!is_dir($uploadPath))&#123;</span><br><span class="line">      mkdir($uploadPath,<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成唯一文件名，防止重名产生覆盖</span></span><br><span class="line">    $uniName=md5(uniqid(microtime(<span class="keyword">true</span>),<span class="keyword">true</span>)).<span class="string">'.'</span>.$ext;</span><br><span class="line">    $dest=$uploadPath.DIRECTORY_SEPARATOR.$uniName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//移动文件</span></span><br><span class="line">    <span class="keyword">if</span>(@!move_uploaded_file($fileInfo[<span class="string">'tmp_name'</span>],$dest))&#123;</span><br><span class="line">      <span class="keyword">echo</span> UPLOAD_ERRS[<span class="string">'move_error'</span>];</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'文件上传成功'</span>;</span><br><span class="line">    <span class="keyword">return</span> $dest;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>($fileInfo[<span class="string">'error'</span>])&#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="comment">// $mes='超过了PHP配置文件中upload_max_filesize选项的值';</span></span><br><span class="line">      $mes=UPLOAD_ERRS[<span class="string">'upload_max_filesize'</span>];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      $mes=UPLOAD_ERRS[<span class="string">'form_max_size'</span>];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      $mes=UPLAOD_ERRS[<span class="string">'upload_file_partial'</span>];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      $mes=UPLOAD_ERRS[<span class="string">'no_upload_file_select'</span>];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">      $mes=UPLAOD_ERRS[<span class="string">'upload_system_error'</span>];</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $mes;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>压缩单个文件<ul><li><code>ZipArchive()</code>一个用 Zip 压缩的文件存档类</li><li>压缩包要打开后将文件添加到压缩包中</li></ul></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zip_file</span><span class="params">(string $filename)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!is_file($filename))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  $zip=<span class="keyword">new</span> ZipArchive();</span><br><span class="line">  $zipName=basename($filename).<span class="string">'.zip'</span>;</span><br><span class="line">  <span class="comment">//打开指定压缩包，不存在则创建，存在则覆盖</span></span><br><span class="line">  <span class="keyword">if</span>($zip-&gt;open($zipName,ZipArchive::CREATE|ZipArchive::OVERWRITE))&#123;</span><br><span class="line">    <span class="comment">//将文件添加到压缩包中并删除文件</span></span><br><span class="line">    <span class="keyword">if</span>($zip-&gt;addFile($filename))&#123;</span><br><span class="line">      @unlink($filename);</span><br><span class="line">    &#125;</span><br><span class="line">    $zip-&gt;close();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>多文件压缩</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zip_files</span><span class="params">(string $zipName,...$files)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测压缩包名称是否正确</span></span><br><span class="line">  $zipExt=strtolower(pathinfo($zipName,PATHINFO_EXTENSION));</span><br><span class="line">  <span class="keyword">if</span>(<span class="string">'zip'</span>!==$zipExt)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  $zip=<span class="keyword">new</span> ZipArchive();</span><br><span class="line">  <span class="keyword">if</span>($zip-&gt;open($zipName,ZipArchive::CREATE|ZipArchive::OVERWRITE))&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file)&#123;</span><br><span class="line">      <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">        $zip-&gt;addFile($file);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $zip-&gt;close();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>解压缩</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unzip_file</span><span class="params">(string $zipName,string $dest)</span></span>&#123;</span><br><span class="line">  <span class="comment">//检测要解压压缩包是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(!is_file($zipName))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检测目标路径是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(!is_dir($dest))&#123;</span><br><span class="line">    mkdir($dest,<span class="number">0777</span>,<span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $zip=<span class="keyword">new</span> ZipArchive();</span><br><span class="line">  <span class="keyword">if</span>($zip-&gt;open($zipName))&#123;</span><br><span class="line">    $zip-&gt;extractTo($dest);</span><br><span class="line">    $zip-&gt;close();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <a href="https://hyqskevin.github.io//code/lib/file.func.php">函数和类的封装源码: code/lib/file.func.php</a></p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p> <a href="https://hyqskevin.github.io/2018/10/28/w3school-php/#3-mySQL">具体参考PHP &amp; MySQL learning notes (1)-&gt;3.mySQL</a></p><h3 id="PHP操作MySQL"><a href="#PHP操作MySQL" class="headerlink" title="PHP操作MySQL"></a>PHP操作MySQL</h3><ul><li>MySQL：非永久链接，性能低，PHP5.5之后废弃</li><li>MySQLi：永久链接，减轻了服务器压力</li><li>PDO：实现MySQLi常用功能，支持大部分数据库</li></ul><p>连接数据库：<code>mysql -uroot -p password</code><br>选择数据库：<code>use db</code><br>设置字符集：<code>set names utf8</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"DATABASE NAME"</span>, $con)</span><br><span class="line"></span><br><span class="line">mysql_connect($server,$username,$password)  <span class="comment">//链接数据库</span></span><br><span class="line">mysql_select_db($database_name)  <span class="comment">//选择数据库名</span></span><br><span class="line">mysql_set_charset($charset)  <span class="comment">//设置字符集</span></span><br><span class="line"></span><br><span class="line">mysql_query($query)  <span class="comment">//执行INSERT，UPDATE，DELETE，DROP之类的操作，返回bool</span></span><br><span class="line"></span><br><span class="line">mysql_query($query)  <span class="comment">//执行SELECT操作，成功返回resource，失败返回FALSE</span></span><br></pre></td></tr></table></figure><p>代码示例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="comment">//1、连接数据库</span></span><br><span class="line">$link = @mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'数据库连接失败！'</span>);</span><br><span class="line"><span class="comment">//2、选择数据库</span></span><br><span class="line">mysql_select_db(<span class="string">'test'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'选择的数据库不存在！'</span>);</span><br><span class="line"><span class="comment">//3、设置字符集</span></span><br><span class="line">mysql_set_charset(<span class="string">'utf8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加数据</span></span><br><span class="line">$result = mysql_query(<span class="string">"INSERT INTO users VALUES(NULL ,'李四',20)"</span>);</span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//修改数据</span></span><br><span class="line">$result = mysql_query(<span class="string">"UPDATE users SET money=25 where id=3"</span>);</span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除单条数据</span></span><br><span class="line">$result = mysql_query(<span class="string">"DELETE FROM users where id=3"</span>);</span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除数据表</span></span><br><span class="line">$result = mysql_query(<span class="string">"DROP TABLE test"</span>);</span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询</span></span><br><span class="line">$result = mysql_query(<span class="string">"SELECT * FROM users"</span>);</span><br><span class="line"><span class="comment">//$line = mysql_fetch_row($result);</span></span><br><span class="line"><span class="comment">//$line = mysql_fetch_assoc($result);</span></span><br><span class="line"><span class="keyword">while</span>($line = mysql_fetch_array($result,MYSQL_ASSOC))&#123;</span><br><span class="line">    $data[] = $line;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//array (size=3)</span></span><br><span class="line"><span class="comment">//  'id' =&gt; string '1' (length=1)</span></span><br><span class="line"><span class="comment">//  'name' =&gt; string '慕课' (length=6)</span></span><br><span class="line"><span class="comment">//  'money' =&gt; string '100' (length=3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭数据库连接</span></span><br><span class="line">mysql_close($link);</span><br></pre></td></tr></table></figure><h3 id="MySQLi操作"><a href="#MySQLi操作" class="headerlink" title="MySQLi操作"></a>MySQLi操作</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$connect = mysqli_connect(<span class="string">'host'</span>,<span class="string">'username'</span>,<span class="string">'password'</span>.<span class="string">'database'</span>);  <span class="comment">//面向过程方式链接数据库</span></span><br><span class="line">$result = mysqli_query($connect,$sql);  <span class="comment">//执行SQL语句</span></span><br><span class="line">mysqli_fetch_all($result)  <span class="comment">//获取结果集</span></span><br></pre></td></tr></table></figure><h2 id="错误及常用命令"><a href="#错误及常用命令" class="headerlink" title="错误及常用命令"></a>错误及常用命令</h2><ul><li>Parse error（解析错误）: syntax error(语法错误), unexpected ‘&lt;’, expecting end of file</li><li>Notice(通知): Undefined variable（未定义的变量）: sdkljflskdjflksdjflksdjfklj </li><li>Catchable fatal(致命) error: Object of class stdClass could not be converted to string</li><li>Warning(警告): settype(): Invalid(非法) type<br><br></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">date_defalut_timezone_set(<span class="string">'PRC'</span>);</span><br><span class="line"></span><br><span class="line">@ <span class="comment">//PHP提供的错误信息屏蔽的专用符号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>($var,....)  <span class="comment">//输出一个或者多个字符串</span></span><br><span class="line">var_dump($var)  <span class="comment">//打印变量的详细信息,可以一次打印一个或者多个变量的详细信息</span></span><br><span class="line">print_r($var)  <span class="comment">//打印数组的信息</span></span><br><span class="line"><span class="keyword">unset</span>($var,...)  <span class="comment">//销毁变量，可以一次销毁一个或者多个，销毁之后变量的值为null</span></span><br><span class="line">time()  <span class="comment">//返回当前的 Unix 时间戳</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_[int|float|double|bool...]($var)  <span class="comment">//判断变量的类型</span></span><br><span class="line"><span class="keyword">isset</span>()  <span class="comment">//检测变量是否存在</span></span><br><span class="line">function_exists()  <span class="comment">//判断函数谁否存在</span></span><br><span class="line">file_exists()  <span class="comment">//判断文件是否存在</span></span><br><span class="line">$var = file_get_contents($filename)  <span class="comment">//得到文件中的内容，返回的是字符串</span></span><br><span class="line"></span><br><span class="line">serialize()  <span class="comment">//产生一个可存储的值的表示</span></span><br><span class="line">unserialize()  <span class="comment">//从已存储的表示中创建 PHP 的值</span></span><br><span class="line">setcookie(string $name, string $value, int $expire = <span class="number">0</span>, string $path = <span class="string">""</span>, string $domain = <span class="string">""</span>)  <span class="comment">//设置coockie：$name名称 $value值 $expire生命周期 $path可用路径 $domain可用域名范围</span></span><br><span class="line">$var = strip_tags()  <span class="comment">//从字符串中去除 HTML 和 PHP 标记</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>()|<span class="keyword">die</span>();  <span class="comment">//输出一个消息并且退出当前脚本</span></span><br></pre></td></tr></table></figure><hr><p>相关链接：<br><a href="https://hyqskevin.github.io/2019/02/15/mysql/">mysql笔记</a><br><a href="https://hyqskevin.github.io/2019/01/21/php-notes/">PHP &amp; MySQL learning notes (2)</a><br><a href="https://hyqskevin.github.io/2018/10/28/w3school-php/">PHP &amp; MySQL learning notes (1)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-基础笔记-&lt;br&gt;慕课网 PHP基础语法巩固(2) 课堂笔记，包含会话，文件，数据库操作等细碎的摘要&lt;/p&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="php" scheme="https://hyqskevin.github.io/tags/php/"/>
    
      <category term="mysql" scheme="https://hyqskevin.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning API Collection</title>
    <link href="https://hyqskevin.github.io/2019/01/15/ml-api/"/>
    <id>https://hyqskevin.github.io/2019/01/15/ml-api/</id>
    <published>2019-01-15T12:02:16.000Z</published>
    <updated>2019-02-25T12:07:32.457Z</updated>
    
    <content type="html"><![CDATA[<p>无聊收集的一个机器学习的api仓库，不定期更新<br><a id="more"></a></p><h3 id="人脸与图片识别api"><a href="#人脸与图片识别api" class="headerlink" title="人脸与图片识别api"></a>人脸与图片识别api</h3><ul><li>Animetrics Face Recognition: 该 API 能够用于图片中的人脸检测，并且将其与已知的部分人脸进行匹配分析；该 API 还支持从某个待搜索的集合中添加或者移除某个分类，或者从某个分类中添加或者删除某张人脸图片。</li><li>Betaface: 同样是提供人脸识别与检测的在线服务。它支持多人脸检测、人脸裁剪、123 个人脸特征点提取、人脸验证、识别以及大型数据库中的相似性搜索提取。</li><li>Eyedea Recognition: 致力于提供高阶的计算机视觉解决方案，主要包括对象检测与识别。其识别服务提供了常见的眼部、人脸、车辆、版权以及果盘识别，该 API 主要的价值在于对于对象、用户以及行为的快速识别。</li><li>Face++: 为应用提供面部的检测、识别以及分析服务，用户可以通过 API 调用训练模型，进行人脸检测、人脸识别、人脸分类、图像修正、创建人脸分组等等服务。</li><li>FaceMark: 提供了能够在正面照片中检测 68 个特征点以及侧面照片中检测 35 个特征点的服务。</li><li>FaceRect: 提供了非常强力与完整的面部检测的 API ，包括在正面照片与侧面照片中检测面部以及在单张照片中提取多个面部的功能；它还能将结果以 JSON 格式输出，包括检测到的眼睛、鼻子、嘴等等面部特征。</li><li>Google Cloud Vision API: 架构于著名的 TensorFlow 之上，能够高效地学习与预测图片中的内容。它能够有助于用户搜索最爱的图片，并且获取图片中丰富的注释。它还能将图片按照船、狮子、埃菲尔铁塔等等不同的类别进行分类，并且对照片中不同表情的面部进行识别，除此之外它还能将图片中不同国家的语言打印出来。</li><li>IBM Watson Visual Recognition: 该 API 能够辅助理解图片内容，包括图片标记、人脸识别、年龄估计以及性别判断，还能根据人脸相似度进行搜索。开发者能够在该服务的基础上结合自身业务特点定制出各式各样奇妙的产品。</li><li>Kairos: 该平台方便开发者快速添加 情感分析 与 人脸识别 的功能到应用与服务中。</li><li>Microsoft Cognitive Service – Computer Vision: 该 API 能够根据用户输入与用户选择分析可视化内容。譬如根据内容来标记图片、进行图片分类、人类识别并且返回他们的相似性、进行领域相关的内容识别、创建图片的内容描述、定位图片中的文本、对图片内容进行成人分级等。</li><li>Rekognition: 该 API 能够根据社交图片应用的特点提供快速面部识别与场景识别。譬如基于人眼、嘴、面部以及鼻子等等特征进行性别、年龄以及情绪预测。</li><li>Skybiometry Face Detection and Recognition: 该 API 提供人脸检测与识别服务，新版本的 API 还提供了深色微分功能.</li></ul><h3 id="文本分析，自然语言处理，情感分析api"><a href="#文本分析，自然语言处理，情感分析api" class="headerlink" title="文本分析，自然语言处理，情感分析api"></a>文本分析，自然语言处理，情感分析api</h3><ul><li>Bitext 提供了目前市场上来说几乎最准确的基于情感的多主题识别，目前包括四个语义服务：实体与概念抽取、情感分析与文本分类；该 API 总共支持 8 种不同的语言。</li><li>Diffbot Analyze: 为开发者提供了从任何网页中识别、分析以及提取主要内容与区块的功能。</li><li>Free Natural Language Processing Service: 提供了包括情感分析、内容提取以及语言检测等功能。它同样是 mashape.com 这个大型云 API 市场中的畅销产品之一。</li><li>Google Cloud Natural Language API: 该 API 提供了对于文档的架构与含义进行分析的功能，包括情感分析、实体识别以及文本标注等。</li><li>IBM Watson Alchemy Language: 该 API 能够辅助电脑学习如何阅读以及进行一些文本分析任务。譬如将非结构化数据按照领域模型转化为结构化数据，使其能够服务于社交媒体监测、商业智能、内容推荐、商业交易以及定向广告等等服务。</li><li>MeaningCloud Text Classification: 该 API 提供了部分预分类的功能：文本提取、分词、停用词设置以及同义词提取等等。</li><li>Microsoft Azure Text Analytics API 基于 Azure Machine Learning 实现的一系列文本分析服务。该 API 能够用于情感分析、关键语句提取、语言检测以及主题识别这些非结构化文本的处理任务。该 API 并不需要使用者提供相关的训练数据，能够大大降低使用门槛。</li><li>Microsoft Cognitive Service – Text Analytics: 提供了情感检测、关键语句提取、主题以及语言分析等功能。该分组中其他的 API 还包括 Bing 拼写检测、语言理解、文本分析、Web 语言模型等等。</li><li>nlpTools: 简单的采用 JSON 传输格式的提供了自然语言处理功能的 HTTP RESTful 服务。它能够提供对于在线媒体的情感分析与文本分类等服务。</li><li>Semantic Biomedical Tagger: 能够利用文本分析技术提取出文档中的 133 个生物医药学相关的实体词汇并且将它们链接到知识库中。</li><li>Thomson Reuters Open Calais™: Calais 基于自然语言处理与机器学习技术，能够分类与关联文档中的实体信息（人名、地名、组织名等）、事实信息（员工 x 为公司 y 工作）、事件信息（员工 z 在 x 日被任命为 y 公司的主席） 。</li><li>Yactraq Speech2Topics 提供了基于语音识别与自然语言处理技术的将语音内容转化为主题数据的云服务。</li></ul><h3 id="语言翻译api"><a href="#语言翻译api" class="headerlink" title="语言翻译api"></a>语言翻译api</h3><ul><li>Google Cloud Translation: 能够在数以千计的语言之间完成文本翻译工作。该 API 允许网页或者程序方便地接入这些翻译服务。</li><li>IBM Watson Language Translator: 能够在不同语言之间进行文本翻译，该服务允许开发者基于独特的领域术语与语言特性进行自定义模型开发。</li><li>LangId: 能够快速地从多语言中检索结果的服务，并不需要使用者指定哪种语言，并且能够返回结果对应的语言类型。</li><li>Microsoft Cognitive Service – Translator: 能够自动地在翻译之前进行语言类型检测，支持 9 种语言的语音翻译以及 60 种语言的文本翻译。</li><li>MotaWord: 快速地人工翻译平台，提供了超过 70 种语言支持。该 API 同样允许开发者查询翻译报价、上传带有文档说明与样式指南的翻译项目请求、自动追踪翻译进度以及进行实时反馈等。</li><li>WritePath Translation: API 允许开发者将 WritePath 功能集成到自定义应用中，包括字数检索、提交文本翻译任务、以及获取翻译信息等等。</li></ul><h3 id="预测与其他机器学习api"><a href="#预测与其他机器学习api" class="headerlink" title="预测与其他机器学习api"></a>预测与其他机器学习api</h3><ul><li>Amazon Machine Learning: 寻找数据中的隐藏模式信息，典型的用法包括诈骗检测、天气预报、市场营销以及点击预测等。</li><li>BigML: 提供基于云的机器学习与数据分析服务，允许用户以 HTTP 请求的方式自己创建数据源以及选择合适的模型来处理有监督或者无监督的机器学习任务。</li><li>Ersatz: 基于 GPU 支持的深度神经网络提供的预测服务，允许用户以 API 方式进行交互。Ersatz 中还利用增强学习来合并不同的神经网络模型来提升整体的效果。</li><li>Google Cloud Prediction: 提供了用于构建机器学习模型的 RESTful API 。这些工具能够通过分析数据来提取出应用中数据的不同特征，譬如用户情感、垃圾信息检测、推荐系统等等。</li><li>Google Cloud Speech API: 能够提供超过 80 种语言的快速与准确的语音识别以及转化服务。</li><li>Guesswork.co: 能够为电商网站提供产品推荐引擎，Guesswork 可以通过基于 Google 预测 API 构建的语义化引擎来对用户行为进行预测。</li><li>Hu:toma: 帮助世界各地的开发者构建商用级别的深度学习聊天机器人。</li><li>IBM Watson Conversation : 帮助构建可以部署在多个消息平台或者网页上的，能够理解自然语言的聊天机器人。其他类似的 API 还包括 Dialog、Natural Language Classifier、Personality Insights、Document Conversion以及 Tone Analyzer.</li><li>IBM Watson Speech : 包含了 语音到文本 以及 文本到语音 之间的转化功能（譬如创建语音控制的应用）。</li><li>IBM Watson Data Insights: 该系列的服务包含了三个 API ：AlchemyData News、Discovery 以及 Tradeoff Analytics。AlchemyData 提供了对于大量的新闻、博客内容的高级别定向搜索与趋势分析的服务。Tradeoff Analytics 则是帮助用户在多目标优化时进行有效抉择。</li><li>IBM Watson Retrieve and Rank: 开发者可以将自定义数据导入到服务中，并且使用相关的关联发算法来训练机器学习模型。服务的输出包括了一系列相关的文档与元数据，譬如某个联络中心的代理能够基于该服务提高呼叫的平均处理时间。</li><li>Imagga: 能够为你的图片自动打标签，从而允许你的图片可以被关联搜索到。</li><li>indico: 提供了文本分析（情感分析、Twitter 参与度、表情分析等）以及 图片分析（面部表情识别、面部定位）。indico 的 API 可以免费试用并且不需要任何的训练数据。</li><li>Microsoft Azure Cognitive Service API : 基于预测分析提供机器学习推荐服务，譬如个性化产品推荐等，可以用来代替传统的 Azure Machine Learning Recommendations 服务。新版本提供了批处理支持，更好地 API 检索服务、更清晰的 API 使用界面以及更好的注册与账单界面等。</li><li>Microsoft Azure Anomaly Detection API : 能够在序列数据中检测出异常数据，譬如检测内存使用过程中是否存在内存泄露的情况。</li><li>Microsoft Cognitive Service – QnA Maker: 将信息提取为会话式的、易于浏览的数据形式。其他类似的 API 还包括 Academic Knowledge、Entity Linking、Knowledge Exploration以及Recommendations。</li><li>Microsoft Cognitive Service – Speaker Recognition: 帮助应用来分析检测出当前的发言者。其他的类似于的 API 还包括Bing Speech （将语音转化为文本并且理解其大致含义）、 Custom Recognition 等等。</li><li>NuPIC : 由 NuPIC 社区运行与维护的开源项目，其基于 Python/C++ 实现了 Numenta’s Cortical Learning 算法并对外提供 API 服务。该 API 允许开发者能够使用基本算法或者分层算法，也可以选择使用其他的平台功能。</li><li>PredicSis: 能够通过预测分析与大数据技术提供市场营销的效用与收益。</li><li>PredictionIO: 基于 Apache Spark、HBase 以及 Spray 这些著名的开源项目搭建的开源机器学习服务。典型的 API 包括了创建与管理用户信息及其行为记录、检索项目与内容、基于用户进行个性推荐等等。</li><li>RxNLP – Cluster Sentences and Short Texts: 提供了文本挖掘与自然语言处理的服务。其中语句聚类 API 能够将不同的语句进行分类，譬如将不同新闻文章中的语句或者 Twitter、Facebook 上提取出来的短文本划分到不同的分组中。</li><li>Sightcorp F.A.C.E.: 该 API 能够帮助第三方应用来更好地理解用户行为，并且根据年龄、性别、面部表情、头部姿势以及种族划分来进行相似面部的分析与搜索。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无聊收集的一个机器学习的api仓库，不定期更新&lt;br&gt;
    
    </summary>
    
      <category term="repo" scheme="https://hyqskevin.github.io/categories/repo/"/>
    
    
      <category term="machine_learning" scheme="https://hyqskevin.github.io/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>基于RGB-D相机数据的三维场景构建</title>
    <link href="https://hyqskevin.github.io/2019/01/10/slam-rgbd/"/>
    <id>https://hyqskevin.github.io/2019/01/10/slam-rgbd/</id>
    <published>2019-01-10T12:23:47.000Z</published>
    <updated>2019-02-25T12:40:30.001Z</updated>
    
    <content type="html"><![CDATA[<p>-研究笔记-<br>简要介绍通过RGB-D相机采集到的一个场景的图像数据和深度数据，对这个场景进行三维点云地图的简单构建。<br>整个步骤分为特征提取，特征匹配，位姿估计，三维重建。首先从图像中提取ORB特征，采用暴力匹配的方法得到图像间特征点的匹配结果，然后采用PnP估计相机的位姿筛选出关键帧，最后利用当前帧简历三维场景地图。后端使用Eigen加速矩阵计算，g2o对相机位姿进行优化，使用PCL拼接点云。实验数据采用TUM的RGB-D数据集。<br><a id="more"></a></p><h2 id="RGB-D相机模型"><a href="#RGB-D相机模型" class="headerlink" title="RGB-D相机模型"></a>RGB-D相机模型</h2><p>RGB-D 相机能够主动测量每个像素的深度，比双目相机通过视差计算更为主动。相比较单目相机，RGB-D相机没有复杂的深度恢复过程，使得算法更为简单；相较其它于双目相机，RGB-D相机有着更好的经济性，节省了不少成本。但是 RGB-D 相机的深度测量范围有限，只能用于室内，从一定程度上限制了其适用性。<br>RGB-D相机向探测目标发射一束光线，根据返回的结构光图案，计算物体与自身之间的距离。在测量完深度后，自己完成深度与彩色图像像素之间的配对，输出一一对应的彩色图和深度图。<br>之后通过得到的距离和色彩信息，计算像素的三维相机坐标，进行点云构建。</p><img src="https://hyqskevin.github.io/pic/slam_rgbd/camera.png" class="[camera]"><h2 id="ORB特征提取和匹配"><a href="#ORB特征提取和匹配" class="headerlink" title="ORB特征提取和匹配"></a>ORB特征提取和匹配</h2><p>直接从图像本身考虑运动估计会比较复杂，也会消耗大量计算资源，所以一般采用选取图像中比较有代表性的点，在这些点的基础上讨论相机的位姿变化并进行定位。<br>特征点由关键点和描述子两部分组成。视觉领域常用的特征检测算法有SIFT、SURF、ORB等。SIFT和SURF算法提取效率和匹配效率都不高，本实验选择实时性更好的ORB (Oriented FAST and Rotated BRIEF) 特征。</p><p>ORB算法是Ethan Rublee在2011年提出的，是一种新的特征检测和描述算法。它改进了FAST检测子，并采用速度极快的BRIEF描述子，使图像提取环节得到加速。</p><p>FAST主要检测局部像素灰度变化过于明显的地方，如果一个像素和邻域的像素差别比较大，那么他更可能是角点。ORB中对原始的FAST进行改进，ORB指定了要提取的角点数量N，对原始的FAST角点分别计算Harris响应值，然后取Top-N个具有最大响应值得角点作为最终的角点集合。</p><p>另外ORB使FAST角点具有尺度和旋转的描述。通过对图像进行不同层次的降采样，获得不同分辨率的图像，并在每一层次进行角点检测得到尺度不变性；特征旋转通过灰度质心法 (Intensity Centroid) 实现：</p><ul><li>定义图像块的矩为<img src="https://hyqskevin.github.io/pic/slam_rgbd/square.png" class="[square]"></li><li>通过矩可以找到图像块的质心<img src="https://hyqskevin.github.io/pic/slam_rgbd/centroid.png" class="[centroid]"></li><li>连接图像块的几何中心O与质心C，得到从O到C的方向向量，则特征点的方向可以定义为<img src="https://hyqskevin.github.io/pic/slam_rgbd/theta.png" class="[theta]">通过以上方法，FAST具备尺度和旋转描述</li></ul><p>本实验采用暴力匹配 (Brute-Force Matcher) 的方法，计算每一个特征点与所有描述子的距离，然后排序。由于描述子距离表示了两个特征之间的相似程度，所以取最近的作为特征点。对于二进制描述子BRIEF采用汉明距离 (Hamming distance) 作为度量。</p><h2 id="PnP位姿估计"><a href="#PnP位姿估计" class="headerlink" title="PnP位姿估计"></a>PnP位姿估计</h2><p>PnP (Perspective-n-Point) 是求解三维到二维点对运动的方法，不需要使用对极约束（存在初始化，纯旋转和尺度问题，且一般需要8对点），可以在较少的匹配点（最少3对点）中获得较好的运动估计。特征点的三维位置可以直接由RGB-D相机的深度图确定。</p><p>常用的PnP问题求解有3对点估计位姿P3P、直接线性变换 (DLT) 、EPnP (Efficient PnP) 、UPnP以及非线性优化建立最小二乘求解 (Bundle Adjustment)。本实验采用OpenCV提供的EPnP筛选匹配点来求解相机位姿。将数据集中相邻两帧图像之间进行比较，确认相机的旋转参数和平移参数。</p><h2 id="场景地图重建"><a href="#场景地图重建" class="headerlink" title="场景地图重建"></a>场景地图重建</h2><p>根据估算的相机位姿记录下的相机旋转平移参数，即相机的内参数和外参数，将RGB-D数据转化为点云 (Point Cloud)，然后通过PCL (Point Cloud Library) 进行拼接，最后得到由离散点组成的点云地图。把生成的点云地图以PCD格式存储，可通过PCL可视化程序打开相应文件。</p><img src="https://hyqskevin.github.io/pic/slam_rgbd/point_cloud.png" class="[point_cloud]"><h2 id="后端优化"><a href="#后端优化" class="headerlink" title="后端优化"></a>后端优化</h2><p>Eigen：C++开源线性代数库，提供有关矩阵的线性代数运算。<br>g2o：C++开源框架，利用图优化框架对PnP和位姿图进行优化，使用Eigen进行矩阵计算。<br>PCL：C++开源编程库，实现了大量点云相关的通用算法和高效数据结构，涉及到点云获取、滤波、分割、配准、检索、特征提取、识别、追踪、曲面重建、可视化等。</p><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><p>通过FAST计算出的所有特征结点并通过BRIEF描述子进行配对<br><img src="https://hyqskevin.github.io/pic/slam_rgbd/match.png" class="[match]"><br>暴力匹配计算特征点和描述子的距离，进行优化后筛选有效的特征点<br><img src="https://hyqskevin.github.io/pic/slam_rgbd/feature.png" class="[feature]"><br><img src="https://hyqskevin.github.io/pic/slam_rgbd/feature2.png" class="[feature2]"><br>通过PnP算法估计相机的匹配点并计算出相机的旋转参数R和位移参数t<br><img src="https://hyqskevin.github.io/pic/slam_rgbd/paramenter.png" class="[paramenter]"><br>将Tum数据集中的图片信息和深度信息进行两两帧特征提取和匹配，得到一组特征点和相机的位姿变换矩阵，利用PCL进行点云地图构建<br><img src="https://hyqskevin.github.io/pic/slam_rgbd/point_cloud.png" class="[point_cloud]"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关键点的提取和描述子的计算非常耗时，尽管ORB已经做到了一定的优化，但进行特征提取仍然会占去实时三维建图的大部分时间。一幅图可以有几十万个像素，只提取特征点会丢弃大部分有用的图像信息，另外面对没有明显纹理的场景，室外亮环境，现有的RGB-D和PnP方案明显还有待完善的地方。<br>两辆帧的比较只能满足局部地图的匹配和优化，面对一个完整的场景还需要对全局进行更加真实和实时的建模。<br>点云建图也需要利用如深度滤波等滤波算法对结果进行优化，最终达到对相机拍摄到的场景进行半稠密地图和稠密地图重建的效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-研究笔记-&lt;br&gt;简要介绍通过RGB-D相机采集到的一个场景的图像数据和深度数据，对这个场景进行三维点云地图的简单构建。&lt;br&gt;整个步骤分为特征提取，特征匹配，位姿估计，三维重建。首先从图像中提取ORB特征，采用暴力匹配的方法得到图像间特征点的匹配结果，然后采用PnP估计相机的位姿筛选出关键帧，最后利用当前帧简历三维场景地图。后端使用Eigen加速矩阵计算，g2o对相机位姿进行优化，使用PCL拼接点云。实验数据采用TUM的RGB-D数据集。&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="slam" scheme="https://hyqskevin.github.io/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>使用 layoutit 设计简易留言板功能</title>
    <link href="https://hyqskevin.github.io/2018/11/18/layoutit/"/>
    <id>https://hyqskevin.github.io/2018/11/18/layoutit/</id>
    <published>2018-11-18T07:32:06.000Z</published>
    <updated>2019-02-21T09:33:28.666Z</updated>
    
    <content type="html"><![CDATA[<p>-基础练习-<br><a href="http://www.layoutit.com/" target="_blank" rel="noopener">Layoutit</a>是基于bootstrap2.0的一个可视化布局模板, 可以点击模板里的文字进行修改, 也可以通过点击弹出的编辑框进行富文本修改. 拖动区块能实现排序。<br>尝试用Layoutit进行快速可视化布局，练习PHP的_POST和_GET，后台数据用文件存储，未使用数据库<br><a id="more"></a></p><h3 id="后台步骤"><a href="#后台步骤" class="headerlink" title="后台步骤"></a>后台步骤</h3><ol><li>创建<code>msg.md</code>，将文件中的内容创建成 PHP 的值，读取到<code>$msgs</code>：$msgs=unserialize($string);</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">date_default_timezone_set(<span class="string">'PRC'</span>);</span><br><span class="line">$filename=<span class="string">"msg.md"</span>;</span><br><span class="line">$msgs=[];</span><br><span class="line"><span class="comment">//检测文件是否存在</span></span><br><span class="line"><span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">  <span class="comment">//读取文件中的内容</span></span><br><span class="line">  $string=file_get_contents($filename);</span><br><span class="line">  <span class="keyword">if</span>(strlen($string)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $msgs=unserialize($string);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>检测到用户提交留言<ul><li>读取<code>$username, $title, $content, $time</code></li><li>组成关联数组: <code>$data=compact(&#39;username&#39;,&#39;title&#39;,&#39;content&#39;,&#39;time&#39;);</code></li><li>写入新的数据到<code>$msgs: array_push($msgs,$data);</code></li><li>产生一个存储的值: <code>$msgs=serialize($msgs);</code></li><li>报告留言成功或失败</li></ul></li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'pubMsg'</span>]))&#123;</span><br><span class="line">  $username=$_POST[<span class="string">'username'</span>];</span><br><span class="line">  $title=strip_tags($_POST[<span class="string">'title'</span>]);</span><br><span class="line">  $content=strip_tags($_POST[<span class="string">'content'</span>]);</span><br><span class="line">  $time=time();</span><br><span class="line">  <span class="comment">//将其组成关联数组</span></span><br><span class="line">  $data=compact(<span class="string">'username'</span>,<span class="string">'title'</span>,<span class="string">'content'</span>,<span class="string">'time'</span>);</span><br><span class="line">  array_push($msgs,$data);</span><br><span class="line">  $msgs=serialize($msgs);</span><br><span class="line">  <span class="keyword">if</span>(file_put_contents($filename,$msgs))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('留言成功！');location.href='22-msg.php';&lt;/script&gt;"</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('留言失败！');location.href='22-msg.php';&lt;/script&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>将$msgs中的内容显示在留言板上<ul><li>检测到$msgs存在且数组有内容</li><li>将$msgs中的所有数组键名按顺序读取，分别在网页中输出：foreach($msgs as $val)</li></ul></li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>(is_array($msgs)&amp;&amp;count($msgs)&gt;<span class="number">0</span>):<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> $i=<span class="number">1</span>;<span class="keyword">foreach</span>($msgs <span class="keyword">as</span> $val):<span class="meta">?&gt;</span></span><br><span class="line">  &lt;tr class="success"&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $i++;<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $val[<span class="string">'username'</span>];<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $val[<span class="string">'title'</span>];<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> date(<span class="string">"m/d/Y H:i:s"</span>,$val[<span class="string">'time'</span>]);<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $val[<span class="string">'content'</span>];<span class="meta">?&gt;</span></span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>;<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endif</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>表格输出</li></ol><table class="table"><br>  <thead><br>    <tr><br>      <th><br>        编号<br>      </th><br>      <th><br>        用户<br>      </th><br>      <th><br>        标题<br>      </th><br>      <th><br>        时间<br>      </th><br>      <th><br>        内容<br>      </th><br>    </tr><br>  </thead><br>  <tbody><br>      <tr class="success"><br>        <td><br>        1<br>        </td><br>        <td><br>        KevinW<br>        </td><br>        <td><br>        test<br>        </td><br>        <td><br>        11/18/2018 15:59:25<br>        </td><br>        <td><br>        测试留言<br>        </td><br>      </tr><br>  </tbody><br></table><hr><h3 id="Layoutit页面设计"><a href="#Layoutit页面设计" class="headerlink" title="Layoutit页面设计"></a>Layoutit页面设计</h3><p><head><meta name="generator" content="Hexo 3.8.0"></head></p><p><script type="text/javascript" src="http://www.francescomalagrino.com/BootstrapPageGenerator/3/js/jquery-2.0.0.min.js"></script></p><p><script type="text/javascript" src="http://www.francescomalagrino.com/BootstrapPageGenerator/3/js/jquery-ui"></script></p><p><link href="http://www.francescomalagrino.com/BootstrapPageGenerator/3/css/bootstrap-combined.min.css" rel="stylesheet" media="screen"></p><p><script type="text/javascript" src="http://www.francescomalagrino.com/BootstrapPageGenerator/3/js/bootstrap.min.js"></script><br></p><body><br><div class="container-fluid"><br>    <div class="row-fluid"><br>        <div class="span12"><br>            <div class="page-header"><br>                <h4><br>                    Kevin_W的留言板-<span>V1.1.0</span><br>                </h4><br>            </div><br>            <div class="hero-unit"><br>                <h5><br>                    Hello, Layoutit!<br>                </h5><br>                <p><br>                    这是一个可视化布局模板, 你可以点击模板里的文字进行修改, 也可以通过点击弹出的编辑框进行富文本修改. 拖动区块能实现排序.<br>                </p><br>                <p><br>                    <a rel="nofollow" class="btn btn-primary btn-large" href="#">参看更多 »</a><br>                </p><br>            </div><br>      <form action="#" method="post"><br>        <fieldset><br>          <legend>请留言</legend><br>          <label>用户</label><input type="text" name="username" required><br>          <br><br>          <label>标题</label><input type="text" name="title" required><br>          <br><br>          <label>内容</label><textarea name="content" rows="5" cols="30" required></textarea><br>          <br><br>          <input type="submit" class="btn btn-primary btn-lg" name="pubMsg" value="发布留言"><br>        </fieldset><br>      </form><br>    </div><br>    </div><br></div><br><script src="/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/haruto.model.json"},"display":{"position":"left","width":100,"height":200},"mobile":{"show":true},"log":false});</script></body><hr><p><a href="https://link" target="_blank" rel="noopener">msg.php</a><br><a href="https://link" target="_blank" rel="noopener">msg.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-基础练习-&lt;br&gt;&lt;a href=&quot;http://www.layoutit.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Layoutit&lt;/a&gt;是基于bootstrap2.0的一个可视化布局模板, 可以点击模板里的文字进行修改, 也可以通过点击弹出的编辑框进行富文本修改. 拖动区块能实现排序。&lt;br&gt;尝试用Layoutit进行快速可视化布局，练习PHP的_POST和_GET，后台数据用文件存储，未使用数据库&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="bootstrap2.0" scheme="https://hyqskevin.github.io/tags/bootstrap2-0/"/>
    
      <category term="php" scheme="https://hyqskevin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP &amp; MySQL learning notes (2)</title>
    <link href="https://hyqskevin.github.io/2018/11/05/php-notes/"/>
    <id>https://hyqskevin.github.io/2018/11/05/php-notes/</id>
    <published>2018-11-05T13:42:13.000Z</published>
    <updated>2019-02-21T09:02:59.700Z</updated>
    
    <content type="html"><![CDATA[<p>-基础笔记-<br>慕课网 PHP基础语法巩固(2) 课堂笔记，包含基本语法，变量和数据和函数等细碎的摘要</p><p>PHP使用环境和IDE</p><ul><li><strong>LAMP(build)</strong>: Linux+Apache+MySQL+PHP</li><li>LNMP: Linux+Nginx+MySQL+PHP</li><li>LNMPA: Linux+Nginx+MySQL+PHP+Apache</li><li><strong>WAMP(build)</strong>: Window+Apache+MySQL+PHP</li><li>集成环境: <strong>xampp</strong>, wampserver, phpstudy</li><li>IDE: <strong>vscode</strong>,Atom, Sublime Text3, PHPStorm, ZendStudio</li></ul><a id="more"></a><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><ul><li><p>标准风格：<code>&lt;?php  代码段; ?&gt;</code><br>如果文档中只有PHP代码，结束标记要省略掉<br>如果文档中不只有PHP代码，一定要保证PHP的开始和结束标记成对出现，可以出现任意位置，任意多次都可以</p></li><li><p>短风格：<code>&lt;? 代码段; ?&gt;</code><br>需要配置PHP配置文件php.ini中short_open_tag=On,重启Apache服务器即可</p></li><li><p>ASP风格：<code>&lt;% 代码段; %&gt;</code><br>需要配置PHP配置文件php.ini中asp_tags=On,重启Apache服务器即可</p></li></ul><h2 id="常量-amp-变量"><a href="#常量-amp-变量" class="headerlink" title="常量 &amp; 变量"></a>常量 &amp; 变量</h2><h3 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h3><ul><li>define($name, $value)</li><li>const NAME=值<br><br><br>常量名称不加$<br>常量名称最好大写，以字母或者下划线开始<br>常量默认区分大小写<br>常量作用域是全局<br>常量一经定义，在脚本执行期间是不能改变的<br>常量的值可以是标量类型，也可以是数组<br><br></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">- constant($name)  <span class="comment">//根据常量的名称获取常量的值</span></span><br><span class="line">- defined($name)  <span class="comment">//检测常量名称是否存在，如果存在返回true，否则返回false</span></span><br><span class="line">- get_defined_constants()  <span class="comment">//返回的是包含系统常量和自定义常量的数组</span></span><br></pre></td></tr></table></figure><h3 id="魔术常量"><a href="#魔术常量" class="headerlink" title="魔术常量"></a>魔术常量</h3><p>  <code>__LINE__</code>  //得到当前的行号<br>  <code>__FILE__</code>  //得到当前文件的完整绝对路径和文件名<br>  <code>__DIR__</code>  //得到文件的完整绝对路径<br>  <code>__FUNCTION__</code>  //得到当前函数的名称<br>  <code>__CLASS__</code>  //得到当前类的类名<br>  <code>__METHOD__</code>  //得到当前类的方法名称<br>  <code>__TRAIT__</code>  //得到当前的TRAIT名称<br>  <code>__NAMESPACE__</code>  //得到当前明明空间的名称</p><h3 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h3><ul><li>通过美元$变量名称来表示变量</li><li>PHP是弱类型语言，可以声明变量在使用，也可以不声明，可以一次声明一个，也可以一次声明多个</li></ul><h3 id="变量命名法"><a href="#变量命名法" class="headerlink" title="变量命名法"></a>变量命名法</h3><ul><li><p>驼峰标记法<br>小骆驼: firstName,lastName,zendControllerFront<br>大骆驼: irstName,LastName,ZendControllerFront</p></li><li><p>下划线法<br>first_name,last_name,zend_controller_front</p></li></ul><h3 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h3><p>  <code>$GLOBALS</code>  //超全局变量，包含以下所有的预定义变量<br>  <code>$_SERVERS</code>  //服务器和执行环境信息变量<br>  <code>$_ENV</code>  //环境变量<br>  <code>$_COOKIE</code>  //HTTP Cookies<br>  <code>$_SESSION</code>  //HTTP Session变量<br>  <code>$_FILES</code>  //文件上传信息变量<br>  <code>$_GET[&#39;名称&#39;]</code> //主要接收以?形式传递的数据，像表单以get形式发送数据，包括像超链接典型的?形式传递参数<br>  <code>$_POST[&#39;名称&#39;]</code>  //主要接收表单以post形式发送的数据<br>  <code>$_REQUEST</code>  //$_GET+$_POST+$_COOKIE</p><h2 id="数据类型-amp-转换"><a href="#数据类型-amp-转换" class="headerlink" title="数据类型 &amp; 转换"></a>数据类型 &amp; 转换</h2><h3 id="临时转换"><a href="#临时转换" class="headerlink" title="临时转换"></a>临时转换</h3><p>整型: (int)$变量名称|(integer)$变量名称<br>浮点型: (float|double|real)$变量名称<br>字符型: (string)$变量名称<br>布尔型: (bool|boolean)$变量名称<br>空: (unset)$变量名称<br>数组: (array)$变量名称<br>对象: (object)$变量名称</p><p><strong>通过系统函数实现</strong><br>intval($var)  //返回变量转换成整型之后的值<br>floatval($var)|doubleval($var)  //返回变量转换成浮点型的值<br>strval($var)  //返回变量转换成字符串的值<br>boolval($var)  //返回变量转换成布尔类型的值</p><h3 id="永久转换"><a href="#永久转换" class="headerlink" title="永久转换"></a>永久转换</h3><p>settype($var,$type)  //设置变量的类型<br>gettype($var)  //返回变量的类型</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数变量"><a href="#函数变量" class="headerlink" title="函数变量"></a>函数变量</h3><p>局部变量</p><ol><li>局部动态变量: 变量只在函数内部执行，执行完毕则被销毁</li><li>局部静态变量: 在函数内部设置static时，执行完毕变量不被销毁</li></ol><p>全局变量: 使用global，在函数内部定义全局变量，当函数执行时先调用函数外面已经定义好的变量再执行，如函数内部有重复定义相同变量不同值，执行出的是函数内部修改过的值</p><h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><ol><li>值传递: 在函数内部修改变量的值的情况下，在函数调用时调用函数外部的变量，值不变</li><li><p>引用传递: 在函数内部修改变量的值的情况下，在函数调用时，函数的参数前面加一个&amp;符号，值发生改变</p><p> <strong>在对象中，不加&amp;符号，对象的值也会发生改变</strong><br> <strong>堆内存: 存放占用内存比较大的，如对象  new xxx()</strong><br> <strong>栈内存: 存放基本类型  $obj</strong></p></li></ol><p>可变参数列表<br>    func_num_args：实参个数；<br>    func_get_arg：返回某一个实参，必须事实参数组的索引；<br>    func_get_args：返回实参数组;<br>    可以返回整型，字符串型，数组等数据类型</p><h3 id="复杂函数类型"><a href="#复杂函数类型" class="headerlink" title="复杂函数类型"></a>复杂函数类型</h3><p>可变函数：通过变量改变函数的名字并调用，让函数的调用更具有多样性</p><p>匿名函数：<br>使用变量 = function(){}; ，调用时也是用变量加小括号来进行调用，<strong>变量后面要加上分号结尾</strong><br>声明一个函数不给函数起名字，用来以后做回调函数时用</p><p><strong>嵌套函数访问外部局部变量：变量名1 = function() use ($变量名2){};</strong></p><h3 id="系统库函数"><a href="#系统库函数" class="headerlink" title="系统库函数"></a>系统库函数</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">int strlen(string $str)  <span class="comment">//返回字符串长度</span></span><br><span class="line">string strtolower(string $str)  <span class="comment">//转换成小写</span></span><br><span class="line">string strtoupper(string $str)  <span class="comment">//转换成大写</span></span><br><span class="line">string ucfirst(string $str)  <span class="comment">//句首字母转换成大写</span></span><br><span class="line">string ucwords(string $str)  <span class="comment">//每个单词首字母转换成大写</span></span><br><span class="line">mixed str_replace(mixed $search, mixed replace, mixed $subject, [int &amp;$count])  <span class="comment">//实现字符替换，区分大小写</span></span><br><span class="line">mixed str_ireplace(mixed $search, mixed replace, mixed $subject, [int &amp;$count]) <span class="comment">//实现字符替换，不区分大小写</span></span><br><span class="line">float floor(float $svalue)  <span class="comment">//舍去</span></span><br><span class="line">float ceil(float $svalue)  <span class="comment">//进位</span></span><br><span class="line">int mt_rand(int $min, int $max)  <span class="comment">//随机数，比rand()更好</span></span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><ol><li><p>通过array()形式</p><p>array()空数组<br>array(值,…)下标连续的索引数组，下标从0开始<br>array(键名=&gt;键值,…)指定下标的索引数组、关联数组、混合数组<br>通过[]的形式定义数组，代替array()</p></li><li><p>通过[ ]动态创建</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$数组名称[]=值  //下标连续的索引数组</span><br><span class="line">$数组名称[键名]=值  //指定下标的索引数组和关联数组</span><br></pre></td></tr></table></figure><ol start="3"><li><p>通过range()和compact()快速创建</p><p>range()  //快速创建下标连续的索引数组<br>compact()  //快速创建关联数组,只能写已经存在的变量名称，不能加$</p></li><li><p>通过define(), const定义常量数组</p></li></ol><h3 id="数组转换"><a href="#数组转换" class="headerlink" title="数组转换"></a>数组转换</h3><p>临时转换: (array)$var<br>永久转换: settype($var,$type)</p><h3 id="数组运算符"><a href="#数组运算符" class="headerlink" title="数组运算符"></a>数组运算符</h3><p><code>+</code>  合并数组，如果键名相同，使用前面数组的键值<br><code>==</code>  只比较键名和键值是否相同，如果相同返回true，否则返回false<br><code>===</code>  既要比较键名和键值是否相同，还要比较类型和顺序</p><h3 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h3><h4 id="通过foreach遍历数组"><a href="#通过foreach遍历数组" class="headerlink" title="通过foreach遍历数组"></a>通过foreach遍历数组</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($数组名称 <span class="keyword">as</span> $val)&#123;循环体;&#125;  <span class="comment">//只要键值</span></span><br><span class="line"><span class="keyword">foreach</span>($数组名称 <span class="keyword">as</span> $key=&gt;$val)&#123;循环体;&#125;  <span class="comment">//既要键名又要键值</span></span><br><span class="line"><span class="keyword">foreach</span>($数组名称 <span class="keyword">as</span> $key=&gt;&amp;$val)&#123;循环体;&#125;  <span class="comment">//引用传递</span></span><br></pre></td></tr></table></figure><p><a href="http://www.laruence.com/2008/11/20/630.html" target="_blank" rel="noopener">深入理解PHP原理之foreach</a></p><ul><li><p><strong>可以通过:和endforeach代替{ }</strong></p></li><li><p><strong>PHP7中foreach的改变</strong></p><ul><li>foreach遍历对数组内部指针不再起作用</li><li>按照值进行遍历的时候，foreach操作的值是数组的副本</li><li>按照引用进行遍历的时候，有更好的迭代特性，在遍历体内修改数组对遍历有影响</li></ul></li></ul><h4 id="通过指针函数遍历"><a href="#通过指针函数遍历" class="headerlink" title="通过指针函数遍历"></a>通过指针函数遍历</h4><p>key($array)  //得到当前指针所在位置的键名<br>current($array)  //得到当前指针所在位置的键值<br>next($array)  //将数组指针向下移动一位，返回当前指针所在位置的键值，否则返回false<br>prev($array)  //将数组指针向上移动一位，返回当前指针所在位置的键值，否则返回false<br>end($array)  //将数组指针移动到末尾，返回当前指针所在位置的键值，否则返回false<br>reset($array)  //将数组指针移动到开始，返回当前指针所在位置的键值，否则返回false</p><h4 id="通过each-和list-函数遍历数组"><a href="#通过each-和list-函数遍历数组" class="headerlink" title="通过each()和list()函数遍历数组"></a>通过each()和list()函数遍历数组</h4><p>each()<br>list()</p><h3 id="数组库API"><a href="#数组库API" class="headerlink" title="数组库API"></a>数组库API</h3><h4 id="创建数组操作"><a href="#创建数组操作" class="headerlink" title="创建数组操作"></a>创建数组操作</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">range($min,$max[,$step=<span class="number">1</span>]):快速创建下标连续的索引数组</span><br><span class="line">compact($varname,$varname...):快速创建关联数组</span><br><span class="line">array_fill($start_index,$num,$value):用给定的值填充数组</span><br><span class="line">array_fill_keys($keys,$value):使用指定的键和值填充数组</span><br><span class="line">array_combine($keys,$values):创建一个数组，用一个数组的值作为其键名，另外一个值作为其键值</span><br></pre></td></tr></table></figure><h4 id="键值相关操作"><a href="#键值相关操作" class="headerlink" title="键值相关操作"></a>键值相关操作</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">count($var[,$mode=COUNT_NORMAL])/sizeof():计算数组中的单元数目或对象中的属性个数 </span><br><span class="line">array_keys($array):取得数组的键名作为下标连续的索引数组返回</span><br><span class="line">array_values($array):取得数组的键值作为下标连续的索引数组返回</span><br><span class="line">array_flip($array):交换数组中的键名和键值</span><br><span class="line">in_array($search,$array[,$strict]):检测数组中是否存在某个值</span><br><span class="line">array_search($search,$array[,$strict]):在数组中搜索给定的值，如果成功则返回相应的键名</span><br><span class="line">array_key_exists($search,$array):检查给定的键名或索引是否存在于数组中</span><br><span class="line">array_reverse($array[,$preserve_keys=<span class="keyword">false</span>]):数组倒置</span><br><span class="line">shuffle($array):打乱数组的元素</span><br><span class="line">array_rand($array[,$num_req=<span class="number">1</span>]):随机取出数组的键名</span><br><span class="line">array_unique($array[,$sort_flag=SORT_STRING]):移除数组中重复的值</span><br><span class="line">array_sum($array):统计数组中元素值的总和</span><br><span class="line">array_product($array):计算数组中所有值的乘积</span><br><span class="line">array_count_values($array):统计数组中值出现的次数</span><br><span class="line">extract($array[,$extract_type=EXTR_OVERWRITE[,$prefix=<span class="keyword">null</span>]]):从数组中将变量导入到当前的符号表 </span><br><span class="line">array_pad($array,$size,$value):用值将数组填补到指定长度</span><br></pre></td></tr></table></figure><h4 id="数组指针函数"><a href="#数组指针函数" class="headerlink" title="数组指针函数"></a>数组指针函数</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">key($array):得到当前指针所在位置元素的键名</span><br><span class="line">current($array)|pos($array):得到当前指针所在位置元素的键值</span><br><span class="line">next($array):将数组指针向下移动一位，并且返回当前指针所在位置元素的键值</span><br><span class="line">prev($array):将数组指针向上移动一位，并且返回当前指针所在位置元素的键值</span><br><span class="line">end($array):将数组指针移动倒数组的末尾，并且返回当前指针所在位置元素的键值</span><br><span class="line">reset($array):将数组指针移动到数组的开始，并且返回当前指针所在位置元素的键值</span><br><span class="line">each($array):返回数组中当前的键值对，并将数组指针向下移动一位</span><br><span class="line"><span class="keyword">list</span>($var,...):将数组中元素的值赋给对应的变量</span><br><span class="line">array_unshift($array,$value...):在数组开头插入一个元素或者多个元素</span><br><span class="line">array_shift($array):弹出数组的第一个元素</span><br><span class="line">array_push($array,$value...):在数组末尾压入一个元素或者多个元素</span><br><span class="line">array_pop($array):弹出数组的最后一个元素</span><br></pre></td></tr></table></figure><h4 id="数组的排序函数"><a href="#数组的排序函数" class="headerlink" title="数组的排序函数"></a>数组的排序函数</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">sort($array[,$sort_flag=SORT_REGULAR]):对数组的键值按照升序排列，不保留键名</span><br><span class="line">rsort($array[,$sort_flag=SORT_REGULAR]):对数组键值按照降序排列，不保留键名</span><br><span class="line">asort($array[,$sort_flag=SORT_REGULAR]):对数组键值按照升序排列，保留键值对关系</span><br><span class="line">arsort($array[,$sort_flag=SORT_REGULAR]):对数组键值按照降序排列，保留键值对关系</span><br><span class="line">ksort($array[,$sort_flag=SORT_REGULAR]):对数组的键名按照升序排列</span><br><span class="line">krsort($array[,$sort_flag=SORT_REGULAR]):对数组的键名按照降序排列</span><br><span class="line">natsort($array):用自然排序法排序</span><br><span class="line">natcasesort($array):用自然排序算法对数组进行不区分大小写字母的排序 </span><br><span class="line">array_multisort($arr[,$arg=SORT_STRING...]):对多个数组或多维数组进行排序</span><br></pre></td></tr></table></figure><h4 id="数组的交集与差集"><a href="#数组的交集与差集" class="headerlink" title="数组的交集与差集"></a>数组的交集与差集</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">array_diff($array1,$array2[...]):计算数组的差集</span><br><span class="line">array_diff_assoc($array1,$array2[,...]):带索引检查计算数组的差集 </span><br><span class="line">array_intersect($array1,$array2[...]):计算数组的交集</span><br><span class="line">array_intersect_assoc($array1,$array2[...]):带索引检查计算数组的交集</span><br></pre></td></tr></table></figure><h4 id="数组的拆分与合并"><a href="#数组的拆分与合并" class="headerlink" title="数组的拆分与合并"></a>数组的拆分与合并</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">array_slice($array,$offset[$length=<span class="keyword">null</span>[,$preserve_keys=<span class="keyword">false</span>]]):截取数组</span><br><span class="line">array_splice($array,$offset[,$length=<span class="number">0</span>,$replacement]]):将数组中一部分去掉并用其它值替代</span><br><span class="line">array_merge($arr1[,$arr2...]):合并数组</span><br><span class="line">array_chunk($array,$size[,$preserve_keys=<span class="keyword">false</span>]):将一个数组分割成多个</span><br><span class="line">array_column($array,$column_key[,$index_key]):返回数组中指定的一列</span><br></pre></td></tr></table></figure><h2 id="错误及常用命令"><a href="#错误及常用命令" class="headerlink" title="错误及常用命令"></a>错误及常用命令</h2><ul><li>Parse error（解析错误）: syntax error(语法错误), unexpected ‘&lt;’, expecting end of file</li><li>Notice(通知): Undefined variable（未定义的变量）: sdkljflskdjflksdjflksdjfklj </li><li>Catchable fatal(致命) error: Object of class stdClass could not be converted to string</li><li>Warning(警告): settype(): Invalid(非法) type<br><br></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">date_defalut_timezone_set(<span class="string">'PRC'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>($var,....)  <span class="comment">//输出一个或者多个字符串</span></span><br><span class="line">var_dump($var)  <span class="comment">//打印变量的详细信息,可以一次打印一个或者多个变量的详细信息</span></span><br><span class="line">print_r($var)  <span class="comment">//打印数组的信息</span></span><br><span class="line"><span class="keyword">unset</span>($var,...)  <span class="comment">//销毁变量，可以一次销毁一个或者多个，销毁之后变量的值为null</span></span><br><span class="line">time()  <span class="comment">//返回当前的 Unix 时间戳</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">is_[int|float|double|bool...]($var)  <span class="comment">//判断变量的类型</span></span><br><span class="line"><span class="keyword">isset</span>()  <span class="comment">//检测变量是否存在</span></span><br><span class="line">function_exists()  <span class="comment">//判断函数谁否存在</span></span><br><span class="line">file_exists()  <span class="comment">//判断文件是否存在</span></span><br><span class="line">$var = file_get_contents($filename)  <span class="comment">//得到文件中的内容，返回的是字符串</span></span><br><span class="line"></span><br><span class="line">serialize()  <span class="comment">//产生一个可存储的值的表示</span></span><br><span class="line">unserialize()  <span class="comment">//从已存储的表示中创建 PHP 的值</span></span><br><span class="line">setcookie(string $name, string $value, int $expire = <span class="number">0</span>, string $path = <span class="string">""</span>, string $domain = <span class="string">""</span>)  <span class="comment">//设置coockie：$name名称 $value值 $expire生命周期 $path可用路径 $domain可用域名范围</span></span><br><span class="line">$var = strip_tags()  <span class="comment">//从字符串中去除 HTML 和 PHP 标记</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;-基础笔记-&lt;br&gt;慕课网 PHP基础语法巩固(2) 课堂笔记，包含基本语法，变量和数据和函数等细碎的摘要&lt;/p&gt;
&lt;p&gt;PHP使用环境和IDE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LAMP(build)&lt;/strong&gt;: Linux+Apache+MySQL+PHP&lt;/li&gt;
&lt;li&gt;LNMP: Linux+Nginx+MySQL+PHP&lt;/li&gt;
&lt;li&gt;LNMPA: Linux+Nginx+MySQL+PHP+Apache&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WAMP(build)&lt;/strong&gt;: Window+Apache+MySQL+PHP&lt;/li&gt;
&lt;li&gt;集成环境: &lt;strong&gt;xampp&lt;/strong&gt;, wampserver, phpstudy&lt;/li&gt;
&lt;li&gt;IDE: &lt;strong&gt;vscode&lt;/strong&gt;,Atom, Sublime Text3, PHPStorm, ZendStudio&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="php" scheme="https://hyqskevin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Adobe 2019 crack</title>
    <link href="https://hyqskevin.github.io/2018/11/01/Adobe2019/"/>
    <id>https://hyqskevin.github.io/2018/11/01/Adobe2019/</id>
    <published>2018-11-01T05:54:39.000Z</published>
    <updated>2019-02-22T02:09:28.209Z</updated>
    
    <content type="html"><![CDATA[<p>Adobe 2019 全家桶和破解包百度云链接，所有安装包和破解未验证具体完整性和安全性，<strong>可能出现不完全破解，请谨慎使用</strong><br>文章内容和链接非原创，在此感谢 <code>vposy</code> <code>胡萝卜周</code> 和 <code>painter</code> 大神们，还有学校 摄影工作室 的小伙伴们。关于破解的最新内容会搬运过来同步更新，不一定及时，有需要可以去关注一下大神们<br>微博：<a href="https://weibo.com/vposy?is_all=1" target="_blank" rel="noopener">vposy</a>，<a href="https://weibo.com/huluobozhou?nick=%E8%83%A1%E8%90%9D%E5%8D%9C%E5%91%A8&amp;is_hot=1" target="_blank" rel="noopener">胡萝卜周</a>，twitter：<a href="https://twitter.com/painter701" target="_blank" rel="noopener">@painter701</a><br><a id="more"></a></p><h4 id="2月更新-转自微博"><a href="#2月更新-转自微博" class="headerlink" title="2月更新 转自微博"></a>2月更新 转自微博</h4><ul><li>2.18<ul><li>SP版已更新，为 Illustrator CC 2019 添加了库功能。Photoshop CC 2019 直接支持视频模块，不再需要登录后激活</li></ul></li><li>2.7<ul><li>Adobe Lightroom Classic CC 8.2</li></ul></li><li>2.6<ul><li>Adobe Photoshop CC 2019 (20.0.3.24950) </li></ul></li><li>2.4<ul><li>CC 2018 WIN SP版/大师版，CC 2019 WIN/MAC SP版/大师版</li></ul></li></ul><h4 id="1月更新"><a href="#1月更新" class="headerlink" title="1月更新"></a>1月更新</h4><ul><li>1.31<ul><li>Camera Raw CC 11.2.0.36 ​​​​</li></ul></li><li>1.12<ul><li>为 Animate、Dreamweaver、Illustrator、InCopy、InDesign、Lightroom Classic 添加了文件夹图标</li></ul></li><li>1.10<ul><li>Adobe Photoshop CC 2019 (20.0.2.22488)</li></ul></li></ul><h4 id="12月更新"><a href="#12月更新" class="headerlink" title="12月更新"></a>12月更新</h4><ul><li>12.22<ul><li>AE16.0.1.48修正HEVC,建议按住ctrl+alt+shift启动程序重置一次</li><li>PR修正主页</li></ul></li><li>12.13<ul><li>Adobe Acrobat Pro DC 2019 连续版 (2019.010.20064) SP 2018.12.13更新</li></ul></li></ul><h4 id="11月更新"><a href="#11月更新" class="headerlink" title="11月更新"></a>11月更新</h4><ul><li>11.11<ul><li>Lightroom Classic 8.0 要求重新登录，但不影响正常使用，功能完整。</li></ul></li><li>11.8<ul><li>Adobe Photoshop CC 2019.0.1 (20.0.1.17836)</li></ul></li><li>11.2<ul><li>更新 Adobe Bridge CC 2019.0.1 (9.0.1.216)</li><li>更新 Adobe InDesign CC 2019.0.1 (14.0.1.202)</li><li>更新 Adobe Media Encoder CC 2019.0.1 (13.0.1.12)</li><li>更新 Adobe Premiere Pro CC 2019.0.1 (13.0.1.13)</li></ul></li></ul><hr><h3 id="到10月28日，目前除Lightroom-Classic-CC没有照片编辑功能外，vposy破解的版本其它貌似都能勉勉强强使用，具体会出现的BUG和解决方案也会持续更新出来（如果有的话）"><a href="#到10月28日，目前除Lightroom-Classic-CC没有照片编辑功能外，vposy破解的版本其它貌似都能勉勉强强使用，具体会出现的BUG和解决方案也会持续更新出来（如果有的话）" class="headerlink" title="到10月28日，目前除Lightroom Classic CC没有照片编辑功能外，vposy破解的版本其它貌似都能勉勉强强使用，具体会出现的BUG和解决方案也会持续更新出来（如果有的话）"></a>到10月28日，<del>目前除Lightroom Classic CC没有照片编辑功能外，vposy破解的版本其它貌似都能勉勉强强使用，具体会出现的BUG和解决方案也会持续更新出来（如果有的话）</del></h3><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h3><h4 id="vposy的原版和SP版（只有win10）百度云下载链接："><a href="#vposy的原版和SP版（只有win10）百度云下载链接：" class="headerlink" title="vposy的原版和SP版（只有win10）百度云下载链接："></a>vposy的原版和SP版（只有win10）百度云下载链接：</h4><p><del><a href="https://pan.baidu.com/share/init?surl=F1iCpjajAz-Ez5QsJZP5zQ" target="_blank" rel="noopener">https://pan.baidu.com/share/init?surl=F1iCpjajAz-Ez5QsJZP5zQ</a></del><br><a href="https://pan.baidu.com/s/1F1iCpjajAz-Ez5QsJZP5zQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1F1iCpjajAz-Ez5QsJZP5zQ</a><br>提取密码: <code>ewyu</code></p><h4 id="vposy的-Adobe-CC-2018-大师版百度云下载链接："><a href="#vposy的-Adobe-CC-2018-大师版百度云下载链接：" class="headerlink" title="vposy的 Adobe CC 2018 大师版百度云下载链接："></a>vposy的 Adobe CC 2018 大师版百度云下载链接：</h4><p><a href="https://pan.baidu.com/s/1dio1Z4" target="_blank" rel="noopener">https://pan.baidu.com/s/1dio1Z4</a><br>提取密码：<code>w7i4</code></p><h4 id="ZerOCod3-文件替换破解-百度云下载链接："><a href="#ZerOCod3-文件替换破解-百度云下载链接：" class="headerlink" title="ZerOCod3 文件替换破解 百度云下载链接："></a>ZerOCod3 文件替换破解 百度云下载链接：</h4><p><a href="https://pan.baidu.com/s/11msujRxnXgl5wJpHNjd6YA" target="_blank" rel="noopener">https://pan.baidu.com/s/11msujRxnXgl5wJpHNjd6YA</a><br>提取码: xjew</p><ul><li>破解文件为.exe文件，将Adobe根目录下的文件替换成破解文件就行</li><li>或者可以下载ZerOCod破解包合集。<a href="https://pan.baidu.com/s/1W3Jnd8w2wMLTVHlsrvYQhw" target="_blank" rel="noopener">https://pan.baidu.com/s/1W3Jnd8w2wMLTVHlsrvYQhw</a> 提取码: zi2u</li></ul><h4 id="CC-Maker-早期版本汇总-百度云下载链接："><a href="#CC-Maker-早期版本汇总-百度云下载链接：" class="headerlink" title="CC Maker 早期版本汇总 百度云下载链接："></a>CC Maker 早期版本汇总 百度云下载链接：</h4><p>链接: <a href="https://pan.baidu.com/s/14ubOSVQkltVFarvbB7vUXQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14ubOSVQkltVFarvbB7vUXQ</a><br>提取码: cuvr</p><ul><li>CC Maker汇总了早期版本的Adobe软件下载，早期版本可用amtlib破解程序破解</li></ul><h3 id="关于Adobe-CC-2019"><a href="#关于Adobe-CC-2019" class="headerlink" title="关于Adobe CC 2019"></a>关于Adobe CC 2019</h3><ul><li>系统需求WIN10最新版本。旧版WIN10，WIN8.1不支持，WIN7部分支持（不建议）</li><li>CC2019开始ADOBE抛弃了十几年的amtlib，新激活模块内置于主程序，正版必须登录ID，所有之前的破解程序都没用,新版本的破解也只是是跳过ID登录，没有授权信息</li><li>WIN新版破解会很快，但MAC版短时间就难说了。全系列完美破解短时间就不要想了，只有本地功能，与ACC有关的在线功能如库能否正常使用取决于ADOBE。ACC需单独破解</li><li>官方今年还没有给出完整版地址，同时也封掉了CCP。新版版发布时间还不长，不清楚官方是否不打算给完整包了。</li><li>新版本BUG问题可以去Adobe官方社区论坛上讨论</li></ul><h3 id="painter的emu"><a href="#painter的emu" class="headerlink" title="painter的emu"></a>painter的emu</h3><ul><li>他本人说遇到了一点困难，至少目前没有</li><li>至少他是想在尽量不动主程序的情况下模拟ID授权激活的，而不是简单的跳过ID登录，完全规避无授权BUG，具体情况可以自己去推上问他</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Adobe 2019 全家桶和破解包百度云链接，所有安装包和破解未验证具体完整性和安全性，&lt;strong&gt;可能出现不完全破解，请谨慎使用&lt;/strong&gt;&lt;br&gt;文章内容和链接非原创，在此感谢 &lt;code&gt;vposy&lt;/code&gt; &lt;code&gt;胡萝卜周&lt;/code&gt; 和 &lt;code&gt;painter&lt;/code&gt; 大神们，还有学校 摄影工作室 的小伙伴们。关于破解的最新内容会搬运过来同步更新，不一定及时，有需要可以去关注一下大神们&lt;br&gt;微博：&lt;a href=&quot;https://weibo.com/vposy?is_all=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vposy&lt;/a&gt;，&lt;a href=&quot;https://weibo.com/huluobozhou?nick=%E8%83%A1%E8%90%9D%E5%8D%9C%E5%91%A8&amp;amp;is_hot=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;胡萝卜周&lt;/a&gt;，twitter：&lt;a href=&quot;https://twitter.com/painter701&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@painter701&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Adobe" scheme="https://hyqskevin.github.io/categories/Adobe/"/>
    
    
      <category term="others" scheme="https://hyqskevin.github.io/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>breast-cancer-diagnose from Kaggle</title>
    <link href="https://hyqskevin.github.io/2018/10/28/cancer-diagnose/"/>
    <id>https://hyqskevin.github.io/2018/10/28/cancer-diagnose/</id>
    <published>2018-10-28T10:44:07.000Z</published>
    <updated>2019-02-19T02:13:04.934Z</updated>
    
    <content type="html"><![CDATA[<p>学校人工智能导论课程小组作业，乳腺癌检测（from Kaggle）。作业训练基础的数据清理，数据特征分类，验证不同的分类算法之间的分类效果</p><ul><li>训练数据集：<br>[Breast Cancer Wisconsin (Diagnostic) Data Set]<br>(<a href="https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29" target="_blank" rel="noopener">https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29</a>)<ul><li>UCI关于此数据集有两份，本实验使用较为完整的一份</li></ul></li><li>实验数据为文本数据，数据量是为569的小型数据，有部分数据缺失</li><li><strong>步骤中降维部分，violin图部分为半成品，效果并不显著，可以自动忽略</strong></li></ul><a id="more"></a><h3 id="Attribute-Information"><a href="#Attribute-Information" class="headerlink" title="Attribute Information:"></a>Attribute Information:</h3><ul><li>1) ID number</li><li>2) Diagnosis (M = malignant, B = benign)</li><li>3) Ten real-valued features are computed for each cell nucleus:<br>a) radius (mean of distances from center to points on the perimeter)<br>b) texture (standard deviation of gray-scale values)<br>c) perimeter<br>d) area<br>e) smoothness (local variation in radius lengths)<br>f) compactness (perimeter^2 / area - 1.0)<br>g) concavity (severity of concave portions of the contour)<br>h) concave points (number of concave portions of the contour)<br>i) symmetry<br>j) fractal dimension (“coastline approximation” - 1)</li></ul><h3 id="以下列举部分实验结果，具体实现步骤-gt-gt"><a href="#以下列举部分实验结果，具体实现步骤-gt-gt" class="headerlink" title="以下列举部分实验结果，具体实现步骤&gt;&gt;"></a>以下列举部分实验结果，<a href="https://hyqskevin.coding.me/2018/10/28/cancer-diagnose/breast-cancer-diagnose.html" target="_blank" rel="noopener">具体实现步骤&gt;&gt;</a></h3><ul><li><a href="https://hyqskevin.coding.me/2018/10/28/cancer-diagnose/breast-cancer-diagnose.ipynb" target="_blank" rel="noopener">breast-cancer-diagnose.ipynb download</a><h4 id="LogisticRegression-逻辑斯蒂回归-分类器"><a href="#LogisticRegression-逻辑斯蒂回归-分类器" class="headerlink" title="LogisticRegression (逻辑斯蒂回归 分类器)"></a>LogisticRegression (逻辑斯蒂回归 分类器)</h4></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.linear_model import LogisticRegression</span><br><span class="line"></span><br><span class="line">LR = LogisticRegression()</span><br><span class="line">LR.fit(X_train, y_train)</span><br><span class="line">LR.predict(X_test)</span><br><span class="line">LR.score(X_test,y_test)</span><br></pre></td></tr></table></figure><p>Out: 0.9883040935672515</p><ul><li><strong>结论：</strong> 通过比较，逻辑斯蒂模型比随机梯度下降模型在测试集上表现有更高的准确性，因为逻辑斯蒂采用解析的方式精确计算模型参数，而随机梯度下降采用估计值</li><li><strong>特点分析：</strong> 逻辑斯蒂对参数的计算采用精确解析的方法，计算时间长但是模型性能高，随机梯度下降采用随机梯度上升算法估计模型参数，计算时间短但产出的模型性能略低，一般而言，对于训练数据规模在10万量级以上的数据，考虑到时间的耗用，推荐使用随机梯度算法</li></ul><h4 id="SGDClassifier-梯度下降-分类器"><a href="#SGDClassifier-梯度下降-分类器" class="headerlink" title="SGDClassifier (梯度下降 分类器)"></a>SGDClassifier (梯度下降 分类器)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.linear_model import SGDClassifier</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SGD = SGDClassifier(loss=&apos;hinge&apos;, penalty=&apos;l2&apos;, alpha=0.001, l1_ratio=0.15, fit_intercept=True, max_iter=None, tol=None, shuffle=True, verbose=0, epsilon=0.1, n_jobs=1, random_state=None, learning_rate=&apos;optimal&apos;, eta0=0.0, power_t=0.5, class_weight=None, warm_start=False, average=False, n_iter=None)</span><br><span class="line">SGD.fit(X_train,y_train)</span><br><span class="line">SGD.predict(X_test)</span><br><span class="line">SGD.score(X_test,y_test)</span><br></pre></td></tr></table></figure><p>Out: 0.9824561403508771</p><h4 id="LinearRegression-线性回归-分类器"><a href="#LinearRegression-线性回归-分类器" class="headerlink" title="LinearRegression (线性回归 分类器)"></a>LinearRegression (线性回归 分类器)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.linear_model import LinearRegression</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LR2 = LinearRegression(fit_intercept=True, normalize=False, copy_X=True, n_jobs=1)</span><br><span class="line">LR2.fit(X_train,y_train)</span><br><span class="line">LR2.predict(X_test)</span><br><span class="line">LR2.score(X_test,y_test)</span><br></pre></td></tr></table></figure><p>Out: 0.8739645029687063</p><h4 id="KNeighborsClassifier-k近邻-分类器"><a href="#KNeighborsClassifier-k近邻-分类器" class="headerlink" title="KNeighborsClassifier (k近邻 分类器)"></a>KNeighborsClassifier (k近邻 分类器)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.neighbors import KNeighborsClassifier</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">KNN = KNeighborsClassifier(n_neighbors=5, weights=&apos;uniform&apos;, algorithm=&apos;auto&apos;, leaf_size=30, p=2, metric=&apos;minkowski&apos;, metric_params=None, n_jobs=1, **kwargs)</span><br><span class="line">KNN.fit(X_train,y_train)</span><br><span class="line">KNN.predict(X_test)</span><br><span class="line">KNN.score(X_test,y_test)</span><br></pre></td></tr></table></figure><p>Out: 0.9883040935672515</p><h4 id="GaussianNB-朴素贝叶斯-分类器"><a href="#GaussianNB-朴素贝叶斯-分类器" class="headerlink" title="GaussianNB (朴素贝叶斯 分类器)"></a>GaussianNB (朴素贝叶斯 分类器)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from sklearn.naive_bayes import GaussianNB</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GNB = GaussianNB(priors=None)</span><br><span class="line">GNB.fit(X_train,y_train)</span><br><span class="line">GNB.predict(X_test)</span><br><span class="line">GNB.score(X_test,y_test)</span><br></pre></td></tr></table></figure><p>Out: 0.9766081871345029</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学校人工智能导论课程小组作业，乳腺癌检测（from Kaggle）。作业训练基础的数据清理，数据特征分类，验证不同的分类算法之间的分类效果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;训练数据集：&lt;br&gt;[Breast Cancer Wisconsin (Diagnostic) Data Set]&lt;br&gt;(&lt;a href=&quot;https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+%28Diagnostic%29&lt;/a&gt;)&lt;ul&gt;
&lt;li&gt;UCI关于此数据集有两份，本实验使用较为完整的一份&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;实验数据为文本数据，数据量是为569的小型数据，有部分数据缺失&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;步骤中降维部分，violin图部分为半成品，效果并不显著，可以自动忽略&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="Kaggle" scheme="https://hyqskevin.github.io/tags/Kaggle/"/>
    
  </entry>
  
  <entry>
    <title>Thinkpad fingerprint device on Linux</title>
    <link href="https://hyqskevin.github.io/2018/10/28/tp-print/"/>
    <id>https://hyqskevin.github.io/2018/10/28/tp-print/</id>
    <published>2018-10-27T23:53:27.000Z</published>
    <updated>2019-02-22T07:12:36.327Z</updated>
    
    <content type="html"><![CDATA[<p>Thinkpad 在Linux下新版本指纹识别驱动的安装与指纹实现管理员验证<br><a id="more"></a></p><h2 id="1-Check-your-finger-print-device"><a href="#1-Check-your-finger-print-device" class="headerlink" title="1.Check your finger print device"></a>1.Check your finger print device</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure><ul><li>example in device ID: 138:0090</li><li><p>and show device ID (for me) <code>Bus xxx Device xxx: ID 138a:0090 Validity Sensors, Inc.</code></p></li><li><p>here are some integrated fingerprint Reader in <a href="https://www.thinkwiki.org/wiki/Integrated_Fingerprint_Reader" target="_blank" rel="noopener">thinkwiki</a></p></li></ul><table><thead><tr><th>USB ID</th><th>Reader</th><th>Software</th></tr></thead><tbody><tr><td>08ff:1600</td><td>Authentec AES1610</td><td>fprint</td></tr><tr><td>08ff:2580</td><td>Authentec AES2501</td><td>fprint</td></tr><tr><td>08ff:2810</td><td>Authentec 2810</td><td>supported by libfprint v0.5.0 onwards released December 2012</td></tr><tr><td>138a:0017</td><td>Validity Sensors, Inc.</td><td>Fingerprint Reader    (to test) Driver Patch as use case with T440 or gist sample Supported by libfprint v0.6.0</td></tr><tr><td><strong>138a:0090</strong></td><td>Validity Sensors</td><td>RE work for validity90 fingerprint reader</td></tr></tbody></table><h2 id="2-Install-packages"><a href="#2-Install-packages" class="headerlink" title="2.Install packages"></a>2.Install packages</h2><ul><li>2.1 Packages for <a href="http://www.ullrich-online.cc/fingerprint/" target="_blank" rel="noopener">Fingerprint GUI</a> for Ubuntu 14.04, 16.04, 17.10, 18.04 and any distribution based thereupon<ul><li><strong>! check if your device is in <a href="https://launchpad.net/~fingerprint/+archive/ubuntu/fingerprint-gui" target="_blank" rel="noopener">supported readers</a> then install</strong></li></ul></li></ul><hr><ul><li><p>2.2 Install fprintd (for me in device 138a:0090)</p><ul><li><p>read the guide: <a href="https://github.com/nmikhailov/Validity90" target="_blank" rel="noopener">Validity</a> and <a href="https://github.com/3v1n0/libfprint" target="_blank" rel="noopener">libfprint</a> in github</p></li><li><p>for ubuntu/linuxmint</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install fpirntd</span><br><span class="line">sudo add-apt-repository -y ppa:3v1n0/libfprint-vfs0090</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install libpam-fprintd</span><br></pre></td></tr></table></figure></li><li><p>for archlinux</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fprintd</span><br><span class="line">yaourt -S libfprint-vfs0090-git</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="3-Enroll-your-finger-print"><a href="#3-Enroll-your-finger-print" class="headerlink" title="3.Enroll your finger print"></a>3.Enroll your finger print</h2><ul><li><p>add your signature for a finger (touch your finger device)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fprintd-enroll</span><br></pre></td></tr></table></figure><ul><li>! use <code>sudo fprintd-enroll</code> may have some bug</li></ul></li><li><p>if not work</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> finger <span class="keyword">in</span> &#123;left,right&#125;-&#123;thumb,&#123;index,middle,ring,little-finger&#125;; <span class="keyword">do</span> fprintd-enroll -f <span class="string">"<span class="variable">$finger</span>"</span> <span class="string">"<span class="variable">$USER</span>"</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li><p>e.g <code>for finger in {left,right}-{thumb,{index,middle,ring,little-finger}; do fprintd-enroll -f &quot;right-index-finger&quot; &quot;kevin&quot;; done</code></p></li><li><p>! here has a bug, you may need to add 10x4 times to add finger signature</p></li></ul></li></ul><h2 id="4-Login-configuration"><a href="#4-Login-configuration" class="headerlink" title="4.Login configuration"></a>4.Login configuration</h2><ul><li><p>read the guide in <a href="https://wiki.archlinux.org/index.php/Fprint" target="_blank" rel="noopener">archlinux wiki</a></p></li><li><p>4.1 For linuxmint</p><ul><li>Add <code>pam_fprintd.so</code> as <code>sufficient</code> to the top of the auth section of <code>/etc/pam.d/runuser</code></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/pam.d/runuser</span><br><span class="line">---</span><br><span class="line">auth            sufficient      pam_fprintd.so</span><br><span class="line">auth            sufficient      pam_rootok.so</span><br><span class="line">session         optional        pam_keyinit.so revoke</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>4.2 For archlinux</p><ul><li>Add <code>pam_fprintd.so</code> as <code>sufficient</code> to the top of the auth section of <code>/etc/pam.d/system-local-login</code></li></ul></li></ul><h2 id="5-Reboot"><a href="#5-Reboot" class="headerlink" title="5.Reboot"></a>5.Reboot</h2><ul><li>check the light of finger device</li><li>in linuxmint, print finger then click sign in</li><li>in archlinux, click <code>enter</code> then print finger</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Thinkpad 在Linux下新版本指纹识别驱动的安装与指纹实现管理员验证&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="Linux_device" scheme="https://hyqskevin.github.io/tags/Linux-device/"/>
    
  </entry>
  
  <entry>
    <title>PHP &amp; MySQL learning notes (1)</title>
    <link href="https://hyqskevin.github.io/2018/10/28/w3school-php/"/>
    <id>https://hyqskevin.github.io/2018/10/28/w3school-php/</id>
    <published>2018-10-27T23:09:40.000Z</published>
    <updated>2019-02-22T06:14:32.351Z</updated>
    
    <content type="html"><![CDATA[<p>W3school PHP 和 MySQL的初次学习<br><a id="more"></a></p><h3 id="1-PHP基础"><a href="#1-PHP基础" class="headerlink" title="1.PHP基础"></a>1.PHP基础</h3><p>PHP 脚本以 <code>&lt;?php 开头，以 ?&gt;</code> 结尾,语句以分号结尾:</p>  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 此处是 PHP 代码;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>  // 这是单行注释  # 这也是单行注释  /<em> </em>/这是多行注释块</p><ul><li><p>变量</p><ul><li>变量以 $ 符号开头，其后是变量的名称</li><li>变量名称必须以字母或下划线开头</li><li>变量名称不能以数字开头</li><li>变量名称只能包含字母数字字符和下划线 A-z、0-9 以及 _</li><li>变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）</li><li>松散型语言，不必告知 PHP 变量的数据类型</li></ul></li><li><p>PHP global 关键词</p><ul><li>global 关键词用于访问函数内的全局变量。</li><li>要做到这一点，请在（函数内部）变量前面使用 global 关键词</li><li>PHP 同时在名为 $GLOBALS[index] 的数组中存储了所有的全局变量。</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">global</span> $x,$y;</span><br><span class="line">  $y=$x+$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  $GLOBALS[<span class="string">'y'</span>]=$GLOBALS[<span class="string">'x'</span>]+$GLOBALS[<span class="string">'y'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>PHP static 关键词</p><ul><li>通常，当函数完成/执行后，会删除所有变量。不过，有时我需要不删除某个局部变量。实现这一点需要更进一步的工作。要完成这一点，请在您首次声明变量时使用 static 关键词</li></ul></li><li><p>echo 和 print 之间的差异：</p><ul><li>echo - 能够输出一个以上的字符串</li><li>print - 只能输出一个字符串，并始终返回 1</li></ul></li><li><p>PHP var_dump() 会返回变量的数据类型和值</p></li><li><p>PHP 对象</p><ul><li>对象是存储数据和有关如何处理数据的信息的数据类型。</li><li>首先我们必须声明对象的类。对此，我们使用 class 关键词;然后我们在对象类中定义数据类型;然后在该类的实例中使用此数据类型</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $color;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Car</span><span class="params">($color=<span class="string">"green"</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;color = $color;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">what_color</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;color;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>strlen() 函数返回字符串的长度，以字符计</li><li>strpos() 函数用于检索字符串内指定的字符或文本</li></ul></li><li><p>如需设置常量，请使用 define() 函数 - 它使用三个参数：</p><ul><li>首个参数定义常量的名称</li><li>第二个参数定义常量的值</li><li>可选的第三个参数规定常量名是否对大小写不敏感。默认是 false。</li></ul></li><li><p><strong>PHP 字符串运算符</strong></p></li></ul><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:left">例子</th><th style="text-align:left">结果</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td style="text-align:center">串接</td><td style="text-align:left">$txt1 = “Hello” $txt2 = $txt1 . “ world!”</td><td style="text-align:left">现在 $txt2 包含 “Hello world!”</td></tr><tr><td style="text-align:center">.=</td><td style="text-align:center">串接赋值</td><td style="text-align:left">$txt1 = “Hello” $txt1 .= “ world!”</td><td style="text-align:left">现在 $txt1 包含 “Hello world!”</td></tr></tbody></table><ul><li>PHP 递增/递减运算符</li></ul><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">名称</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">++$x</td><td style="text-align:center">前递增</td><td style="text-align:left">$x 加一递增，然后返回 $x</td></tr><tr><td style="text-align:center">$x++</td><td style="text-align:center">后递增</td><td style="text-align:left">返回 $x，然后 $x 加一递增</td></tr><tr><td style="text-align:center">–$x</td><td style="text-align:center">前递减</td><td style="text-align:left">\$x 减一递减，然后返回 \$x</td></tr><tr><td style="text-align:center">$x–</td><td style="text-align:center">后递减</td><td style="text-align:left">返回 \$x，然后 \$x 减一递减</td></tr></tbody></table><ul><li><p>在 PHP 中， array() 函数用于创建数组</p><ul><li>在 PHP 中，有三种数组类型：<ul><li>索引数组 - 带有数字索引的数组<code>$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;SAAB&quot;);</code></li><li>关联数组 - 带有指定键的数组<code>$age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;);</code></li><li>多维数组 - 包含一个或多个数组的数组</li></ul></li><li>count() 函数用于返回数组的长度（元素数）</li><li>如需遍历并输出索引数组的所有值，您可以先count数组长度，再使用 for 循环</li><li>如需遍历并输出关联数组的所有值，您可以使用 foreach 循环</li></ul></li><li><p>PHP foreach 循环</p><ul><li>foreach 循环只适用于数组，并用于遍历数组中的每个键/值对。</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value) &#123;</span><br><span class="line">code to be executed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>PHP - 数组的排序函数</p><ul><li>sort() - 以升序对数组排序</li><li>rsort() - 以降序对数组排序</li><li>asort() - 根据值，以升序对关联数组进行排序</li><li>ksort() - 根据键，以升序对关联数组进行排序</li><li>arsort() - 根据值，以降序对关联数组进行排序</li><li>krsort() - 根据键，以降序对关联数组进行排序</li></ul></li><li><p><strong>超全局变量</strong>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$GLOBALS 引用全局作用域中可用的全部变量</span><br><span class="line">$_SERVER 保存关于报头、路径和脚本位置的信息</span><br><span class="line">$_REQUEST 用于收集 HTML 表单提交的数据</span><br><span class="line">$_POST 广泛用于收集提交 method=&quot;post&quot; 的 HTML 表单后的表单数据。$_POST 也常用于传递变量</span><br><span class="line">$_GET 用于收集提交 HTML 表单 (method=&quot;get&quot;) 之后的表单数据,也可以收集 URL 中的发送的数据</span><br><span class="line">$_ENV</span><br><span class="line">$_COOKIE</span><br><span class="line">$_SESSION</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;"</span>&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$name = $_REQUEST[<span class="string">'fname'</span>];</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $name;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-PHP表单"><a href="#2-PHP表单" class="headerlink" title="2.PHP表单"></a>2.PHP表单</h3><h4 id="HTML表单处理"><a href="#HTML表单处理" class="headerlink" title="HTML表单处理"></a>HTML表单处理</h4><p>表单界面</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--form创建表单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"welcome.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>  <span class="comment">&lt;!--文本--&gt;</span></span><br><span class="line">E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Gender:  <span class="comment">&lt;!--选择--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span>Male</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>welcome.PHP</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Welcome <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"name"</span>]; <span class="meta">?&gt;</span></span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Your email address is: <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_POST[<span class="string">"email"</span>]; <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以将post换成get</li></ul><h4 id="后端GET-amp-POST"><a href="#后端GET-amp-POST" class="headerlink" title="后端GET &amp; POST"></a>后端GET &amp; POST</h4><ul><li><code>$_GET</code> 是通过 URL 参数传递到当前脚本的变量数组。</li><li>通过 GET 方法从表单发送的信息对任何人都是可见的（所有变量名和值都显示在 URL 中）。GET 对所发送信息的数量也有限制。限制在大于 2000 个字符。不过，由于变量显示在 URL 中，把页面添加到书签中也更为方便。</li><li><p>GET 可用于发送非敏感的数据。</p></li><li><p><code>$_POST</code> 是通过 HTTP POST 传递到当前脚本的变量数组。</p></li><li>通过 POST 方法从表单发送的信息对其他人是不可见的（所有名称/值会被嵌入 HTTP 请求的主体中），并且对所发送信息的数量也无限制。</li><li>一般偏向于POST发送表单数据</li></ul><h4 id="表单安全验证"><a href="#表单安全验证" class="headerlink" title="表单安全验证"></a>表单安全验证</h4><p><code>&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo htmlspecialchars($_SERVER[&quot;PHP_SELF&quot;]);?&gt;&quot;&gt;</code></p><ul><li><code>$_SERVER[&quot;PHP_SELF&quot;]</code> 是一种超全局变量，它返回当前执行脚本的文件名</li><li><code>htmlspecialchars()</code> 函数把特殊字符转换为 HTML 实体</li><li><code>$_SERVER[&quot;PHP_SELF&quot;]</code> 变量能够被黑客利用,使用了 PHP_SELF，用户能够输入下划线然后执行跨站点脚本（XSS）,通过使用 <code>htmlspecialchars()</code> 函数能够避免 <code>$_SERVER[&quot;PHP_SELF&quot;]</code> 被利用</li></ul><p>利用php函数检查表单</p><ul><li>（通过 PHP trim() 函数）去除用户输入数据中不必要的字符（多余的空格、制表符、换行）</li><li><p>（通过 PHP stripslashes() 函数）删除用户输入数据中的反斜杠（\）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义变量并设置为空值</span></span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">  $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">  $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">  $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">  $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">  $data = trim($data);</span><br><span class="line">  $data = stripslashes($data);</span><br><span class="line">  $data = htmlspecialchars($data);</span><br><span class="line">  <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="必须输入字段"><a href="#必须输入字段" class="headerlink" title="必须输入字段"></a>必须输入字段</h4><p>增加了一些新变量：<code>$nameErr</code>、<code>$emailErr</code>、<code>$genderErr</code> 以及 <code>$websiteErr</code>。这些错误变量会保存被请求字段的错误消息。</p><p>还需要每个 <code>$_POST</code> 变量添加了一个 if else 语句。这条语句检查 <code>$_POST</code> 变量是否为空（通过 PHP empty() 函数）。如果为空，则错误消息会存储于不同的错误变量中。如果不为空，则通过 test_input() 函数发送用户输入数据</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span><br><span class="line">    $nameErr = <span class="string">"Name is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"email"</span>])) &#123;</span><br><span class="line">    $emailErr = <span class="string">"Email is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"website"</span>])) &#123;</span><br><span class="line">    $website = <span class="string">""</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"comment"</span>])) &#123;</span><br><span class="line">    $comment = <span class="string">""</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"gender"</span>])) &#123;</span><br><span class="line">    $genderErr = <span class="string">"Gender is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HTML显示错误消息"><a href="#HTML显示错误消息" class="headerlink" title="HTML显示错误消息"></a>HTML显示错误消息</h4><p>在每个被请求字段后面增加了一点脚本。如果需要，会生成恰当的错误消息</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nameErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  //验证</span><br><span class="line"></span><br><span class="line">E-mail:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $emailErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Website:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $websiteErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Comment: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Gender:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span>Male</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $genderErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="验证输入数据"><a href="#验证输入数据" class="headerlink" title="验证输入数据"></a>验证输入数据</h4><p>验证名字：preg_match() 函数检索字符串的模式，如果模式存在则返回 true，否则返回 false</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">  $nameErr = <span class="string">"只允许字母和空格！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证email</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">  $emailErr = <span class="string">"无效的 email 格式！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证URL</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i"</span>,$website)) &#123;</span><br><span class="line">  $websiteErr = <span class="string">"无效的 URL"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HTML保留表单中的值"><a href="#HTML保留表单中的值" class="headerlink" title="HTML保留表单中的值"></a>HTML保留表单中的值</h4><p>在输入字段的 value 属性中增加了一小段 PHP 脚本：name、email 以及 website</p><p>在 comment 文本框字段中，把脚本放到了 <code>&lt;textarea&gt;</code> 与 <code>&lt;/textarea&gt;</code> 之间;这些脚本输出 <code>$name</code>、<code>$email</code>、<code>$website</code> 和 <code>$comment</code> 变量的值。</p><p>要显示选中了哪个单选按钮，操作 checked 属性（而非单选按钮的 value 属性）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $name;?&gt;"</span>&gt;</span></span><br><span class="line">E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $email;?&gt;"</span>&gt;</span></span><br><span class="line">Website: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $website;?&gt;"</span>&gt;</span></span><br><span class="line">Comment: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $comment;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Gender:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span></span></span><br><span class="line">&lt;?php if (isset($gender) &amp;&amp; $gender=="female") echo "checked";?&gt;</span><br><span class="line">value="female"&gt;Female</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span></span></span><br><span class="line">&lt;?php if (isset($gender) &amp;&amp; $gender=="male") echo "checked";?&gt;</span><br><span class="line">value="male"&gt;Male</span><br></pre></td></tr></table></figure><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.error &#123;color: <span class="comment">#FF0000;&#125;</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义变量并设置为空值</span></span><br><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span><br><span class="line">     $nameErr = <span class="string">"姓名是必填的"</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">     <span class="comment">// 检查姓名是否包含字母和空白字符</span></span><br><span class="line">     <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">       $nameErr = <span class="string">"只允许字母和空格"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"email"</span>])) &#123;</span><br><span class="line">     $emailErr = <span class="string">"电邮是必填的"</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">     <span class="comment">// 检查电子邮件地址语法是否有效</span></span><br><span class="line">     <span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">       $emailErr = <span class="string">"无效的 email 格式"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"website"</span>])) &#123;</span><br><span class="line">     $website = <span class="string">""</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">     <span class="comment">// 检查 URL 地址语法是否有效（正则表达式也允许 URL 中的斜杠）</span></span><br><span class="line">     <span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i"</span>,$website)) &#123;</span><br><span class="line">       $websiteErr = <span class="string">"无效的 URL"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"comment"</span>])) &#123;</span><br><span class="line">     $comment = <span class="string">""</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"gender"</span>])) &#123;</span><br><span class="line">     $genderErr = <span class="string">"性别是必选的"</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">   $data = trim($data);</span><br><span class="line">   $data = stripslashes($data);</span><br><span class="line">   $data = htmlspecialchars($data);</span><br><span class="line">   <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;h2&gt;PHP 验证实例&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;&lt;span class="error"&gt;* 必需的字段&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span>PHP_SELF<span class="string">"]);?&gt;"</span>&gt;</span><br><span class="line">   姓名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span>&gt;</span><br><span class="line">   &lt;span class="error"&gt;* &lt;?php echo $nameErr;?&gt;&lt;/span&gt;</span><br><span class="line">   &lt;br&gt;&lt;br&gt;</span><br><span class="line">   电邮：&lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span>&gt;</span><br><span class="line">   &lt;span class="error"&gt;* &lt;?php echo $emailErr;?&gt;&lt;/span&gt;</span><br><span class="line">   &lt;br&gt;&lt;br&gt;</span><br><span class="line">   网址：&lt;input type=<span class="string">"text"</span> name=<span class="string">"website"</span>&gt;</span><br><span class="line">   &lt;span class="error"&gt;&lt;?php echo $websiteErr;?&gt;&lt;/span&gt;</span><br><span class="line">   &lt;br&gt;&lt;br&gt;</span><br><span class="line">   评论：&lt;textarea name=<span class="string">"comment"</span> rows=<span class="string">"5"</span> cols=<span class="string">"40"</span>&gt;&lt;/textarea&gt;</span><br><span class="line">   &lt;br&gt;&lt;br&gt;</span><br><span class="line">   性别：</span><br><span class="line">   &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"female"</span>&gt;女性</span><br><span class="line">   &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"male"</span>&gt;男性</span><br><span class="line">   &lt;span class="error"&gt;* &lt;?php echo $genderErr;?&gt;&lt;/span&gt;</span><br><span class="line">   &lt;br&gt;&lt;br&gt;</span><br><span class="line">   &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2&gt;您的输入：&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $name;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $email;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $website;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $comment;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $gender;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="3-mySQL"><a href="#3-mySQL" class="headerlink" title="3.mySQL"></a>3.mySQL</h3><h4 id="PHP连接MySQL"><a href="#PHP连接MySQL" class="headerlink" title="PHP连接MySQL"></a>PHP连接MySQL</h4><p>通过 mysql_connect() 函数完成</p><ul><li><code>mysql_connect(&#39;servername&#39;,&#39;username&#39;,&#39;password&#39;);</code></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>servername</td><td>可选。规定要连接的服务器。默认是 “localhost:3306”</td></tr><tr><td>username</td><td>可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称</td></tr><tr><td>password</td><td>可选。规定登录所用的密码。默认是 “”</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error()); <span class="comment">//连接失败执行die</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// some code</span></span><br></pre></td></tr></table></figure><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>用 mysql_query() 函数</p><ul><li><code>mysql_query(&quot;CREATE DATABASE database_name&quot;,password)</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$con = mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con)&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mysql_query(<span class="string">"CREATE DATABASE my_db"</span>,$con))&#123; <span class="comment">//创建数据库</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Database created"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Error creating database: "</span> . mysql_error();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p>创建表之前，必须首先选择数据库;通过 <code>mysql_select_db()</code> 函数选取数据库<br>mysql_query() 函数添加 CREATE TABLE 语句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Create table in database</span></span><br><span class="line">mysql_select_db(<span class="string">"DATABASE NAME"</span>, $con);</span><br><span class="line">$sql = <span class="string">"CREATE TABLE Persons</span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">FirstName varchar(15),</span></span><br><span class="line"><span class="string">LastName varchar(15),</span></span><br><span class="line"><span class="string">Age int</span></span><br><span class="line"><span class="string">)"</span>;</span><br><span class="line">mysql_query($sql,$con);</span><br></pre></td></tr></table></figure><ul><li>表的主键和递增字段：主键字段通常是 ID 号，且通常使用 AUTO_INCREMENT 设置</li><li>AUTO_INCREMENT 会在新记录被添加时逐一增加该字段的值。要确保主键字段不为空，我们必须向该字段添加 NOT NULL 设置</li><li><code>personID int NOT NULL AUTO_INCREMENT</code></li></ul><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><p><code>INSERT INTO table_name VALUES (value1, value2,....)</code></p><ul><li>SQL 语句对大小写不敏感。INSERT INTO 与 insert into 相同。</li><li>为了让 PHP 执行该语句，我们必须使用 <code>mysql_query()</code> 函数。该函数用于向 MySQL 连接发送查询或命令</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"DATABASE NAME"</span>, $con);</span><br><span class="line"></span><br><span class="line">mysql_query(<span class="string">"INSERT INTO Persons (FirstName, LastName, Age)</span></span><br><span class="line"><span class="string">VALUES ('Peter', 'Griffin', '35')"</span>);</span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><ul><li>表单数据插入数据库</li><li>当用户点击上例中 HTML 表单中的提交按钮时，表单数据被发送到 “insert.php”。”insert.php” 文件连接数据库，并通过 <code>$_POST</code> 变量从表单取回值。然后，mysql_query() 函数执行 INSERT INTO 语句，一条新的记录会添加到数据库表中</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"DATABASE NAME"</span>, $con);</span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"INSERT INTO Persons (FirstName, LastName, Age)</span></span><br><span class="line"><span class="string">VALUES('$_POST[firstname]','$_POST[lastname]','$_POST[age]')"</span>; <span class="comment">//HTML表单中的数据</span></span><br><span class="line"><span class="keyword">if</span> (!mysql_query($sql,$con))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Error: '</span> . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"1 record added"</span>;</span><br><span class="line">mysql_close($con)</span><br></pre></td></tr></table></figure><h4 id="选取数据"><a href="#选取数据" class="headerlink" title="选取数据"></a>选取数据</h4><p><code>SELECT column_name(s) FROM table_name</code></p><ul><li>使用 mysql_fetch_array() 函数以数组的形式从记录集返回第一行</li><li>使用了 PHP 的 $row 变量 ($row[‘FirstName’] 和 $row[‘LastName’])输出每行的值</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line"></span><br><span class="line">$result = mysql_query(<span class="string">"SELECT * FROM Persons"</span>);</span><br><span class="line"><span class="keyword">while</span>($row = mysql_fetch_array($result))</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> $row[<span class="string">'FirstName'</span>] . <span class="string">" "</span> . $row[<span class="string">'LastName'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><p>显示成表格样式</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line">$result = mysql_query(<span class="string">"SELECT * FROM Persons"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;table border='1'&gt;</span></span><br><span class="line"><span class="string">  &lt;tr&gt;</span></span><br><span class="line"><span class="string">  &lt;th&gt;Firstname&lt;/th&gt;</span></span><br><span class="line"><span class="string">  &lt;th&gt;Lastname&lt;/th&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;"</span>;</span><br><span class="line">  <span class="keyword">while</span>($row = mysql_fetch_array($result))</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;td&gt;"</span> . $row[<span class="string">'FirstName'</span>] . <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;td&gt;"</span> . $row[<span class="string">'LastName'</span>] . <span class="string">"&lt;/td&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/table&gt;"</span>;</span><br><span class="line"></span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><p><strong>如需选取匹配指定条件的数据，请向 SELECT 语句添加 WHERE 子句</strong></p><ul><li><code>SELECT column FROM table WHERE column operator value</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line"></span><br><span class="line">$result = mysql_query(<span class="string">"SELECT * FROM Persons</span></span><br><span class="line"><span class="string">WHERE FirstName='Peter'"</span>);</span><br></pre></td></tr></table></figure><p><strong>ORDER BY 关键词用于对记录集中的数据进行排序</strong></p><ul><li><code>SELECT column_name(s) FROM table_name ORDER BY column_name</code></li></ul><p>ORDER BY 关键词，记录集的排序顺序默认是升序;可用DESC 关键词来设定降序排序</p><ul><li><code>SELECT column_name(s) FROM table_name ORDER BY column_name DESC</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line"></span><br><span class="line">$result = mysql_query(<span class="string">"SELECT * FROM Persons ORDER BY age"</span>);</span><br></pre></td></tr></table></figure><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><p>UPDATE 语句用于在数据库表中修改数据</p><ul><li><code>UPDATE table_name SET column_name = new_value WHERE column_name = some_value</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line">mysql_query(<span class="string">"UPDATE Persons SET Age = '36'</span></span><br><span class="line"><span class="string">WHERE FirstName = 'Peter' AND LastName = 'Griffin'"</span>);</span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p>DELETE FROM 语句用于从数据库表中删除记录</p><ul><li><code>DELETE FROM table_name WHERE column_name = some_value</code></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line">mysql_query(<span class="string">"DELETE FROM Persons WHERE LastName='Griffin'"</span>);</span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;W3school PHP 和 MySQL的初次学习&lt;br&gt;
    
    </summary>
    
      <category term="study" scheme="https://hyqskevin.github.io/categories/study/"/>
    
    
      <category term="php" scheme="https://hyqskevin.github.io/tags/php/"/>
    
      <category term="mysql" scheme="https://hyqskevin.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的欢迎界面</title>
    <link href="https://hyqskevin.github.io/2018/10/28/hello-hexo/"/>
    <id>https://hyqskevin.github.io/2018/10/28/hello-hexo/</id>
    <published>2018-10-27T21:44:59.000Z</published>
    <updated>2019-02-19T02:13:32.970Z</updated>
    
    <content type="html"><![CDATA[<p>description: 这是第一次是使用Hexo时Hexo展示的页面，为方便查询移动至此<br>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;description: 这是第一次是使用Hexo时Hexo展示的页面，为方便查询移动至此&lt;br&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="others" scheme="https://hyqskevin.github.io/categories/others/"/>
    
    
      <category term="hexo" scheme="https://hyqskevin.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>tips about building blog</title>
    <link href="https://hyqskevin.github.io/2018/10/20/tips-about-building-blog/"/>
    <id>https://hyqskevin.github.io/2018/10/20/tips-about-building-blog/</id>
    <published>2018-10-20T08:44:04.000Z</published>
    <updated>2019-02-14T13:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装hexo的笔记,不间断进行更新<br>更新目录：</p><ol><li>安装和部署必要模组</li><li>页面模板</li><li>写文章</li><li>本地查看和Github部署</li><li>分类和标签须知</li><li>标签插件</li><li>建立资源文件夹</li><li>更换Maupassant主题</li><li>增加右下角动图</li><li>添加pdf插件</li><li>安装字数统计插件</li></ol><a id="more"></a><h2 id="install-nodejs-npm-git-hexo-安装和部署必要模组"><a href="#install-nodejs-npm-git-hexo-安装和部署必要模组" class="headerlink" title="install nodejs npm git hexo 安装和部署必要模组"></a>install nodejs npm git hexo 安装和部署必要模组</h2><h3 id="install-on-Linux"><a href="#install-on-Linux" class="headerlink" title="install on Linux"></a>install on Linux</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">sudo apt-get install -y build-essential</span><br><span class="line">sudo apt-get install -y npm</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><ul><li>related modules</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install  //install necessary components</span><br><span class="line">npm install hexo-deployer-git --save  // deploy to git</span><br><span class="line">npm install hexo-generator-feed --save  // build RSS</span><br><span class="line">npm install hexo-generator-sitemap --save // build sitemap</span><br></pre></td></tr></table></figure><h4 id="deploy-hexo"><a href="#deploy-hexo" class="headerlink" title="deploy hexo"></a>deploy hexo</h4><ul><li>open terminal &amp; <code>cd</code> to the right direction</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">npm install hexo -g</span><br><span class="line">hexo -v  //check info</span><br><span class="line">hexo init  //initialize folder</span><br><span class="line">hexo g  //Start processing</span><br></pre></td></tr></table></figure><h4 id="add-ssh-key"><a href="#add-ssh-key" class="headerlink" title="add ssh key"></a>add ssh key</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email address"</span></span><br><span class="line">cat /home/xxx/.ssh/id_rsa.pub  //check your key</span><br></pre></td></tr></table></figure><ul><li><strong>load key to Github (default on Github &amp; default you can use Github)</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h4 id="set-id-amp-email"><a href="#set-id-amp-email" class="headerlink" title="set id &amp; email"></a>set id &amp; email</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your id"</span></span><br><span class="line">git config --global user.email <span class="string">"your email"</span></span><br></pre></td></tr></table></figure><h3 id="install-on-Windows"><a href="#install-on-Windows" class="headerlink" title="install on Windows"></a>install on Windows</h3><ul><li>download <strong><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a></strong> and install</li><li>download <strong><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a></strong> and install</li><li>Win+R open cmd to the right direction</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">npm install hexo -g</span><br><span class="line">hexo -v  //check info</span><br><span class="line">npm install  //install necessary components</span><br><span class="line">hexo init  //initialize folder</span><br><span class="line">hexo g  //Start processing</span><br></pre></td></tr></table></figure><ul><li><strong>add related module &amp; ssh key &amp; set id+email (the same as linux)</strong></li></ul><hr><h2 id="template-模板"><a href="#template-模板" class="headerlink" title="template 模板"></a>template 模板</h2><ul><li>各页面相对应的模板名称</li></ul><table><br><thead><br><tr><br>  <th>模板</th><br>  <th>用途</th><br>  <th>回退</th><br></tr><br></thead><br><tbody><br><tr><br><td><code>index</code></td><br><td>首页</td><br><td></td><br></tr><br><tr><br><td><code>post</code></td><br><td>文章</td><br><td><code>index</code></td><br></tr><br><tr><br><td><code>page</code></td><br><td>分页</td><br><td><code>index</code></td><br></tr><br><tr><br><td><code>archive</code></td><br><td>归档</td><br><td><code>index</code></td><br></tr><br><tr><br><td><code>category</code></td><br><td>分类归档</td><br><td><code>archive</code></td><br></tr><br><tr><br><td><code>tag</code></td><br><td>标签归档</td><br><td><code>archive</code></td><br></tr><br></tbody><br></table><hr><h2 id="write-pages-写文章"><a href="#write-pages-写文章" class="headerlink" title="write pages 写文章"></a>write pages 写文章</h2><h3 id="init-page"><a href="#init-page" class="headerlink" title="init page"></a>init page</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new post <span class="string">"post_name"</span></span><br></pre></td></tr></table></figure><h3 id="edit"><a href="#edit" class="headerlink" title="edit"></a>edit</h3>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">description:</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">###</span></span><br></pre></td></tr></table></figure><ul><li><p>tags 目前的标签</p><ul><li>| Kaggle | Linux device | hexo | php | mysql | others |</li></ul></li><li><p>categories 目前的分类</p><ul><li>Adobe: about any update &amp; crack of CC software</li><li>notes: personal thoughts &amp; ideas</li><li>others: just others</li><li>study: study notes</li></ul></li></ul><hr><h2 id="local-server-amp-deploy-本地查看和部署"><a href="#local-server-amp-deploy-本地查看和部署" class="headerlink" title="local server &amp; deploy 本地查看和部署"></a>local server &amp; deploy 本地查看和部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean  //clean cache</span><br><span class="line">hexo generate  //generate static files</span><br><span class="line">hexo seserver  //localhost:4000</span><br><span class="line">hexo deploy  //open server</span><br></pre></td></tr></table></figure><hr><h2 id="update-notes"><a href="#update-notes" class="headerlink" title="update notes"></a>update notes</h2><hr><p><strong>2019.2.14 更新</strong></p><h3 id="categories-amp-tags-分类和标签须知"><a href="#categories-amp-tags-分类和标签须知" class="headerlink" title="categories &amp; tags 分类和标签须知"></a>categories &amp; tags 分类和标签须知</h3><ul><li>只有文章支持分类和标签</li><li>分类具有顺序性和层次性,标签没有顺序和层次</li><li>Hexo不支持指定多个同级分类</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure><h3 id="Tag-Plugins-标签插件"><a href="#Tag-Plugins-标签插件" class="headerlink" title="Tag Plugins 标签插件"></a>Tag Plugins 标签插件</h3><h4 id="quote"><a href="#quote" class="headerlink" title="quote"></a>quote</h4><ul><li>在文章中插入引言，可包含作者、来源和标题</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote [author[, <span class="built_in">source</span>]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><ul><li>example</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness <span class="keyword">for</span> yourself. Seek happiness <span class="keyword">for</span> all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h4 id="code-插入代码"><a href="#code-插入代码" class="headerlink" title="code 插入代码"></a>code 插入代码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><h4 id="image-插入图片"><a href="#image-插入图片" class="headerlink" title="image 插入图片"></a>image 插入图片</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure><h4 id="link-插入链接"><a href="#link-插入链接" class="headerlink" title="link 插入链接"></a>link 插入链接</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure><h3 id="Assert-fold-资源文件夹"><a href="#Assert-fold-资源文件夹" class="headerlink" title="Assert fold 资源文件夹"></a>Assert fold 资源文件夹</h3><ul><li>如果需要插入图片,最简单的方法就是将它们放在 source/pic 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们.</li><li>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。<strong>需要使用标签插件</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><hr><p><strong>2.18日更新</strong></p><p>因NexT不可描述的页面无法跳转原因，更换主题到Maupassant，大道至简</p><ul><li>给文章添加目录：开头加上 <code>toc: true</code></li><li>首页自定义显示文章摘录：在摘录后加上<code>&lt;!--more--&gt;</code></li></ul><hr><p><strong>2.22日更新</strong></p><h3 id="增加萌宠或二次元动图"><a href="#增加萌宠或二次元动图" class="headerlink" title="增加萌宠或二次元动图"></a>增加萌宠或二次元动图</h3><p><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">hexo live2d插件 2.0</a><br><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">Github地址</a></p><p><code>npm install --save hexo-helper-live2d</code><br>然后挑一个<br><code>npm install live2d-widget-model-xxxxx</code></p><p>向Hexo的 _config.yml 文件添加配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">  tagMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-xxxxx</span></span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="添加pdf插件"><a href="#添加pdf插件" class="headerlink" title="添加pdf插件"></a>添加pdf插件</h3><p><code>npm install --save hexo-pdf</code><br><code>hexo new page book</code></p><p>.md文件中添加pdf</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">外部链接：&#123;% pdf http://xxx.pdf %&#125;</span><br><span class="line">本地连接：&#123;% pdf ./pdf名字.pdf %&#125;</span><br></pre></td></tr></table></figure><h3 id="安装字数统计插件"><a href="#安装字数统计插件" class="headerlink" title="安装字数统计插件"></a>安装字数统计插件</h3><p><code>npm i --save hexo-wordcount</code><br>将自己所用主题中的 _config.yml 文件中的 wordcount 设置为true</p><h3 id="增加instagram链接"><a href="#增加instagram链接" class="headerlink" title="增加instagram链接"></a>增加instagram链接</h3><p><code>npm install hexo-tag-instagram --save</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;% instagram post-url %&#125;</span><br><span class="line">or</span><br><span class="line">&#123;% instagram BXkz1bYB1-N %&#125;</span><br><span class="line">or</span><br><span class="line">&#123;% instagram <span class="literal">false</span> 50% https://www.instagram.com/p/BXkz1bYB1-N/ %&#125;</span><br></pre></td></tr></table></figure><hr><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><strong><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo.io</a></strong></li><li><strong><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">cnblogs: hexo+Github搭建自己的博客</a></strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装hexo的笔记,不间断进行更新&lt;br&gt;更新目录：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装和部署必要模组&lt;/li&gt;
&lt;li&gt;页面模板&lt;/li&gt;
&lt;li&gt;写文章&lt;/li&gt;
&lt;li&gt;本地查看和Github部署&lt;/li&gt;
&lt;li&gt;分类和标签须知&lt;/li&gt;
&lt;li&gt;标签插件&lt;/li&gt;
&lt;li&gt;建立资源文件夹&lt;/li&gt;
&lt;li&gt;更换Maupassant主题&lt;/li&gt;
&lt;li&gt;增加右下角动图&lt;/li&gt;
&lt;li&gt;添加pdf插件&lt;/li&gt;
&lt;li&gt;安装字数统计插件&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="notes" scheme="https://hyqskevin.github.io/categories/notes/"/>
    
    
      <category term="hexo" scheme="https://hyqskevin.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to Kevin_W&#39;s attic,filled with whispers &amp; murmurs</title>
    <link href="https://hyqskevin.github.io/2018/10/10/hello-world/"/>
    <id>https://hyqskevin.github.io/2018/10/10/hello-world/</id>
    <published>2018-10-09T16:00:00.000Z</published>
    <updated>2019-02-19T02:14:06.969Z</updated>
    
    <content type="html"><![CDATA[<p>Kevin_W 创立于这个世界在10月10日，2018。</p><p>他可以是一本日志,也可以是一篇日记，一个仓库，或者一个告解室，一个树洞，亦或什么都不是。</p><p>但这里，的确是独立于外部的一个世界。</p><a id="more"></a><p>Kevin 不清楚这个世界能存在多久，会放置些什么，有多少谁在看，更新频率是多快，更新的知识有多深奥，只能保证这个世界创造的一切，都是十分重要的信息。</p><p>Kevin 也不清楚能把这个世界创造得多好，不清楚这个世界会往哪里发展，不清楚到底有多少个类似这样的平行世界，只能保证创造这个世界的Kevin 是最Kevin’s 的一个Kevin.</p><h3 id="Wubba-lubba-dub-dub"><a href="#Wubba-lubba-dub-dub" class="headerlink" title="Wubba lubba dub dub"></a>Wubba lubba dub dub</h3><h3 id="Hey，what-are-you-in-for"><a href="#Hey，what-are-you-in-for" class="headerlink" title="Hey，what are you in for ?"></a>Hey，what are you in for ?</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kevin_W 创立于这个世界在10月10日，2018。&lt;/p&gt;
&lt;p&gt;他可以是一本日志,也可以是一篇日记，一个仓库，或者一个告解室，一个树洞，亦或什么都不是。&lt;/p&gt;
&lt;p&gt;但这里，的确是独立于外部的一个世界。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="https://hyqskevin.github.io/categories/notes/"/>
    
    
  </entry>
  
</feed>
